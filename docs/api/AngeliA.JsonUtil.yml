### YamlMime:ManagedReference
items:
- uid: AngeliA.JsonUtil
  commentId: T:AngeliA.JsonUtil
  id: JsonUtil
  parent: AngeliA
  children:
  - AngeliA.JsonUtil.GetJsonPath``1(System.String,System.String,System.String)
  - AngeliA.JsonUtil.LoadJsonFromPath``1(System.String)
  - AngeliA.JsonUtil.LoadJson``1(System.String,System.String,System.String)
  - AngeliA.JsonUtil.LoadOrCreateJsonFromPath``1(System.String)
  - AngeliA.JsonUtil.LoadOrCreateJson``1(System.String,System.String,System.String)
  - AngeliA.JsonUtil.SaveJsonToPath(System.Object,System.String,System.Boolean)
  - AngeliA.JsonUtil.SaveJson``1(``0,System.String,System.String,System.String,System.Boolean)
  langs:
  - csharp
  - vb
  name: JsonUtil
  nameWithType: JsonUtil
  fullName: AngeliA.JsonUtil
  type: Class
  source:
    remote:
      path: AngeliA Framework/src/Utility/JsonUtil.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: JsonUtil
    path: ../../AngeliA/AngeliA Framework/src/Utility/JsonUtil.cs
    startLine: 12
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Utility class for json operation
  example: []
  syntax:
    content: public static class JsonUtil
    content.vb: Public Module JsonUtil
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: AngeliA.JsonUtil.GetJsonPath``1(System.String,System.String,System.String)
  commentId: M:AngeliA.JsonUtil.GetJsonPath``1(System.String,System.String,System.String)
  id: GetJsonPath``1(System.String,System.String,System.String)
  parent: AngeliA.JsonUtil
  langs:
  - csharp
  - vb
  name: GetJsonPath<T>(string, string, string)
  nameWithType: JsonUtil.GetJsonPath<T>(string, string, string)
  fullName: AngeliA.JsonUtil.GetJsonPath<T>(string, string, string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/JsonUtil.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetJsonPath
    path: ../../AngeliA/AngeliA Framework/src/Utility/JsonUtil.cs
    startLine: 49
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Calculate auto path fot json file
  example: []
  syntax:
    content: public static string GetJsonPath<T>(string rootPath, string name = "", string ext = "json")
    parameters:
    - id: rootPath
      type: System.String
      description: Root folder
    - id: name
      type: System.String
      description: Name that override the type name
    - id: ext
      type: System.String
      description: Extension of the file
    typeParameters:
    - id: T
      description: Type of the json object
    return:
      type: System.String
    content.vb: Public Shared Function GetJsonPath(Of T)(rootPath As String, name As String = "", ext As String = "json") As String
  overload: AngeliA.JsonUtil.GetJsonPath*
  nameWithType.vb: JsonUtil.GetJsonPath(Of T)(String, String, String)
  fullName.vb: AngeliA.JsonUtil.GetJsonPath(Of T)(String, String, String)
  name.vb: GetJsonPath(Of T)(String, String, String)
- uid: AngeliA.JsonUtil.LoadOrCreateJson``1(System.String,System.String,System.String)
  commentId: M:AngeliA.JsonUtil.LoadOrCreateJson``1(System.String,System.String,System.String)
  id: LoadOrCreateJson``1(System.String,System.String,System.String)
  parent: AngeliA.JsonUtil
  langs:
  - csharp
  - vb
  name: LoadOrCreateJson<T>(string, string, string)
  nameWithType: JsonUtil.LoadOrCreateJson<T>(string, string, string)
  fullName: AngeliA.JsonUtil.LoadOrCreateJson<T>(string, string, string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/JsonUtil.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: LoadOrCreateJson
    path: ../../AngeliA/AngeliA Framework/src/Utility/JsonUtil.cs
    startLine: 59
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Load json file inside given folder. Create new instance if file not found.
  example: []
  syntax:
    content: 'public static T LoadOrCreateJson<T>(string rootPath, string name = "", string ext = "json") where T : new()'
    parameters:
    - id: rootPath
      type: System.String
      description: Root folder
    - id: name
      type: System.String
      description: Name that override the type name
    - id: ext
      type: System.String
      description: Extension of the file
    typeParameters:
    - id: T
      description: Type of the json object
    return:
      type: '{T}'
    content.vb: Public Shared Function LoadOrCreateJson(Of T As New)(rootPath As String, name As String = "", ext As String = "json") As T
  overload: AngeliA.JsonUtil.LoadOrCreateJson*
  nameWithType.vb: JsonUtil.LoadOrCreateJson(Of T)(String, String, String)
  fullName.vb: AngeliA.JsonUtil.LoadOrCreateJson(Of T)(String, String, String)
  name.vb: LoadOrCreateJson(Of T)(String, String, String)
- uid: AngeliA.JsonUtil.LoadOrCreateJsonFromPath``1(System.String)
  commentId: M:AngeliA.JsonUtil.LoadOrCreateJsonFromPath``1(System.String)
  id: LoadOrCreateJsonFromPath``1(System.String)
  parent: AngeliA.JsonUtil
  langs:
  - csharp
  - vb
  name: LoadOrCreateJsonFromPath<T>(string)
  nameWithType: JsonUtil.LoadOrCreateJsonFromPath<T>(string)
  fullName: AngeliA.JsonUtil.LoadOrCreateJsonFromPath<T>(string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/JsonUtil.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: LoadOrCreateJsonFromPath
    path: ../../AngeliA/AngeliA Framework/src/Utility/JsonUtil.cs
    startLine: 66
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Load json file at given path. Create new instance if file not found.
  example: []
  syntax:
    content: 'public static T LoadOrCreateJsonFromPath<T>(string jsonPath) where T : new()'
    parameters:
    - id: jsonPath
      type: System.String
      description: ''
    typeParameters:
    - id: T
      description: Type of the json object
    return:
      type: '{T}'
    content.vb: Public Shared Function LoadOrCreateJsonFromPath(Of T As New)(jsonPath As String) As T
  overload: AngeliA.JsonUtil.LoadOrCreateJsonFromPath*
  nameWithType.vb: JsonUtil.LoadOrCreateJsonFromPath(Of T)(String)
  fullName.vb: AngeliA.JsonUtil.LoadOrCreateJsonFromPath(Of T)(String)
  name.vb: LoadOrCreateJsonFromPath(Of T)(String)
- uid: AngeliA.JsonUtil.LoadJson``1(System.String,System.String,System.String)
  commentId: M:AngeliA.JsonUtil.LoadJson``1(System.String,System.String,System.String)
  id: LoadJson``1(System.String,System.String,System.String)
  parent: AngeliA.JsonUtil
  langs:
  - csharp
  - vb
  name: LoadJson<T>(string, string, string)
  nameWithType: JsonUtil.LoadJson<T>(string, string, string)
  fullName: AngeliA.JsonUtil.LoadJson<T>(string, string, string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/JsonUtil.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: LoadJson
    path: ../../AngeliA/AngeliA Framework/src/Utility/JsonUtil.cs
    startLine: 86
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Load json file inside given folder.
  example: []
  syntax:
    content: public static T LoadJson<T>(string rootPath, string name = "", string ext = "json")
    parameters:
    - id: rootPath
      type: System.String
      description: Root folder
    - id: name
      type: System.String
      description: Name that override the type name
    - id: ext
      type: System.String
      description: Extension of the file
    typeParameters:
    - id: T
      description: Type of the json object
    return:
      type: '{T}'
      description: Json object instance if file valid. Return default if file not valid.
    content.vb: Public Shared Function LoadJson(Of T)(rootPath As String, name As String = "", ext As String = "json") As T
  overload: AngeliA.JsonUtil.LoadJson*
  nameWithType.vb: JsonUtil.LoadJson(Of T)(String, String, String)
  fullName.vb: AngeliA.JsonUtil.LoadJson(Of T)(String, String, String)
  name.vb: LoadJson(Of T)(String, String, String)
- uid: AngeliA.JsonUtil.LoadJsonFromPath``1(System.String)
  commentId: M:AngeliA.JsonUtil.LoadJsonFromPath``1(System.String)
  id: LoadJsonFromPath``1(System.String)
  parent: AngeliA.JsonUtil
  langs:
  - csharp
  - vb
  name: LoadJsonFromPath<T>(string)
  nameWithType: JsonUtil.LoadJsonFromPath<T>(string)
  fullName: AngeliA.JsonUtil.LoadJsonFromPath<T>(string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/JsonUtil.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: LoadJsonFromPath
    path: ../../AngeliA/AngeliA Framework/src/Utility/JsonUtil.cs
    startLine: 94
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Load json file at given path.
  example: []
  syntax:
    content: public static T LoadJsonFromPath<T>(string jsonPath)
    parameters:
    - id: jsonPath
      type: System.String
      description: ''
    typeParameters:
    - id: T
      description: Type of the json object
    return:
      type: '{T}'
      description: Json object instance if file valid. Return default if file not valid
    content.vb: Public Shared Function LoadJsonFromPath(Of T)(jsonPath As String) As T
  overload: AngeliA.JsonUtil.LoadJsonFromPath*
  nameWithType.vb: JsonUtil.LoadJsonFromPath(Of T)(String)
  fullName.vb: AngeliA.JsonUtil.LoadJsonFromPath(Of T)(String)
  name.vb: LoadJsonFromPath(Of T)(String)
- uid: AngeliA.JsonUtil.SaveJson``1(``0,System.String,System.String,System.String,System.Boolean)
  commentId: M:AngeliA.JsonUtil.SaveJson``1(``0,System.String,System.String,System.String,System.Boolean)
  id: SaveJson``1(``0,System.String,System.String,System.String,System.Boolean)
  parent: AngeliA.JsonUtil
  langs:
  - csharp
  - vb
  name: SaveJson<T>(T, string, string, string, bool)
  nameWithType: JsonUtil.SaveJson<T>(T, string, string, string, bool)
  fullName: AngeliA.JsonUtil.SaveJson<T>(T, string, string, string, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/JsonUtil.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SaveJson
    path: ../../AngeliA/AngeliA Framework/src/Utility/JsonUtil.cs
    startLine: 117
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Save json object into given folder
  example: []
  syntax:
    content: public static void SaveJson<T>(T data, string rootPath, string name = "", string ext = "json", bool prettyPrint = false)
    parameters:
    - id: data
      type: '{T}'
      description: ''
    - id: rootPath
      type: System.String
      description: Root folder path
    - id: name
      type: System.String
      description: Name that override the type name
    - id: ext
      type: System.String
      description: Extension of the file
    - id: prettyPrint
      type: System.Boolean
      description: True if write with indent and line warp
    typeParameters:
    - id: T
      description: Type of the json object
    content.vb: Public Shared Sub SaveJson(Of T)(data As T, rootPath As String, name As String = "", ext As String = "json", prettyPrint As Boolean = False)
  overload: AngeliA.JsonUtil.SaveJson*
  nameWithType.vb: JsonUtil.SaveJson(Of T)(T, String, String, String, Boolean)
  fullName.vb: AngeliA.JsonUtil.SaveJson(Of T)(T, String, String, String, Boolean)
  name.vb: SaveJson(Of T)(T, String, String, String, Boolean)
- uid: AngeliA.JsonUtil.SaveJsonToPath(System.Object,System.String,System.Boolean)
  commentId: M:AngeliA.JsonUtil.SaveJsonToPath(System.Object,System.String,System.Boolean)
  id: SaveJsonToPath(System.Object,System.String,System.Boolean)
  parent: AngeliA.JsonUtil
  langs:
  - csharp
  - vb
  name: SaveJsonToPath(object, string, bool)
  nameWithType: JsonUtil.SaveJsonToPath(object, string, bool)
  fullName: AngeliA.JsonUtil.SaveJsonToPath(object, string, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/JsonUtil.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SaveJsonToPath
    path: ../../AngeliA/AngeliA Framework/src/Utility/JsonUtil.cs
    startLine: 125
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Save json object into given path
  example: []
  syntax:
    content: public static void SaveJsonToPath(object data, string jsonPath, bool prettyPrint = false)
    parameters:
    - id: data
      type: System.Object
      description: ''
    - id: jsonPath
      type: System.String
      description: ''
    - id: prettyPrint
      type: System.Boolean
      description: True if write with indent and line warp
    content.vb: Public Shared Sub SaveJsonToPath(data As Object, jsonPath As String, prettyPrint As Boolean = False)
  overload: AngeliA.JsonUtil.SaveJsonToPath*
  nameWithType.vb: JsonUtil.SaveJsonToPath(Object, String, Boolean)
  fullName.vb: AngeliA.JsonUtil.SaveJsonToPath(Object, String, Boolean)
  name.vb: SaveJsonToPath(Object, String, Boolean)
references:
- uid: AngeliA
  commentId: N:AngeliA
  href: AngeliA.html
  name: AngeliA
  nameWithType: AngeliA
  fullName: AngeliA
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AngeliA.JsonUtil.GetJsonPath*
  commentId: Overload:AngeliA.JsonUtil.GetJsonPath
  href: AngeliA.JsonUtil.html#AngeliA_JsonUtil_GetJsonPath__1_System_String_System_String_System_String_
  name: GetJsonPath
  nameWithType: JsonUtil.GetJsonPath
  fullName: AngeliA.JsonUtil.GetJsonPath
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AngeliA.JsonUtil.LoadOrCreateJson*
  commentId: Overload:AngeliA.JsonUtil.LoadOrCreateJson
  href: AngeliA.JsonUtil.html#AngeliA_JsonUtil_LoadOrCreateJson__1_System_String_System_String_System_String_
  name: LoadOrCreateJson
  nameWithType: JsonUtil.LoadOrCreateJson
  fullName: AngeliA.JsonUtil.LoadOrCreateJson
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: AngeliA.JsonUtil.LoadOrCreateJsonFromPath*
  commentId: Overload:AngeliA.JsonUtil.LoadOrCreateJsonFromPath
  href: AngeliA.JsonUtil.html#AngeliA_JsonUtil_LoadOrCreateJsonFromPath__1_System_String_
  name: LoadOrCreateJsonFromPath
  nameWithType: JsonUtil.LoadOrCreateJsonFromPath
  fullName: AngeliA.JsonUtil.LoadOrCreateJsonFromPath
- uid: AngeliA.JsonUtil.LoadJson*
  commentId: Overload:AngeliA.JsonUtil.LoadJson
  href: AngeliA.JsonUtil.html#AngeliA_JsonUtil_LoadJson__1_System_String_System_String_System_String_
  name: LoadJson
  nameWithType: JsonUtil.LoadJson
  fullName: AngeliA.JsonUtil.LoadJson
- uid: AngeliA.JsonUtil.LoadJsonFromPath*
  commentId: Overload:AngeliA.JsonUtil.LoadJsonFromPath
  href: AngeliA.JsonUtil.html#AngeliA_JsonUtil_LoadJsonFromPath__1_System_String_
  name: LoadJsonFromPath
  nameWithType: JsonUtil.LoadJsonFromPath
  fullName: AngeliA.JsonUtil.LoadJsonFromPath
- uid: AngeliA.JsonUtil.SaveJson*
  commentId: Overload:AngeliA.JsonUtil.SaveJson
  href: AngeliA.JsonUtil.html#AngeliA_JsonUtil_SaveJson__1___0_System_String_System_String_System_String_System_Boolean_
  name: SaveJson
  nameWithType: JsonUtil.SaveJson
  fullName: AngeliA.JsonUtil.SaveJson
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: AngeliA.JsonUtil.SaveJsonToPath*
  commentId: Overload:AngeliA.JsonUtil.SaveJsonToPath
  href: AngeliA.JsonUtil.html#AngeliA_JsonUtil_SaveJsonToPath_System_Object_System_String_System_Boolean_
  name: SaveJsonToPath
  nameWithType: JsonUtil.SaveJsonToPath
  fullName: AngeliA.JsonUtil.SaveJsonToPath
