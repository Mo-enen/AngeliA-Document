### YamlMime:ManagedReference
items:
- uid: AngeliA.BodyPart
  commentId: T:AngeliA.BodyPart
  id: BodyPart
  parent: AngeliA
  children:
  - AngeliA.BodyPart.#ctor(AngeliA.BodyPart,System.Boolean,System.Boolean,System.Int32,System.Int32)
  - AngeliA.BodyPart.Border
  - AngeliA.BodyPart.Covered
  - AngeliA.BodyPart.FacingRight
  - AngeliA.BodyPart.FacingSign
  - AngeliA.BodyPart.FlexableSizeY
  - AngeliA.BodyPart.FrontSide
  - AngeliA.BodyPart.GetGlobalCenter
  - AngeliA.BodyPart.GetGlobalRect
  - AngeliA.BodyPart.GetLocalCenter
  - AngeliA.BodyPart.GlobalLerp(System.Single,System.Single,System.Boolean)
  - AngeliA.BodyPart.GlobalX
  - AngeliA.BodyPart.GlobalY
  - AngeliA.BodyPart.Height
  - AngeliA.BodyPart.ID
  - AngeliA.BodyPart.Imitate(AngeliA.BodyPart)
  - AngeliA.BodyPart.IsFullCovered
  - AngeliA.BodyPart.LimbParent
  - AngeliA.BodyPart.LimbRotate(System.Int32,System.Int32)
  - AngeliA.BodyPart.PivotX
  - AngeliA.BodyPart.PivotY
  - AngeliA.BodyPart.RotateWithBody
  - AngeliA.BodyPart.Rotation
  - AngeliA.BodyPart.SetData(System.Int32)
  - AngeliA.BodyPart.SizeX
  - AngeliA.BodyPart.SizeY
  - AngeliA.BodyPart.SpritePivotX
  - AngeliA.BodyPart.SpritePivotY
  - AngeliA.BodyPart.Tint
  - AngeliA.BodyPart.TryGetSpriteIdFromSheet(System.Type,System.String,System.Boolean,System.Int32@)
  - AngeliA.BodyPart.UseLimbFlip
  - AngeliA.BodyPart.Width
  - AngeliA.BodyPart.X
  - AngeliA.BodyPart.Y
  - AngeliA.BodyPart.Z
  langs:
  - csharp
  - vb
  name: BodyPart
  nameWithType: BodyPart
  fullName: AngeliA.BodyPart
  type: Class
  source:
    remote:
      path: AngeliA Framework/src/Entity/Character/Bodypart.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: BodyPart
    path: ../../AngeliA/AngeliA Framework/src/Entity/Character/Bodypart.cs
    startLine: 9
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Representation of a bodypart for a pose-style character
  example: []
  syntax:
    content: public class BodyPart
    content.vb: Public Class BodyPart
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.AngeliA.Extension.ForAllFields``1(System.Reflection.BindingFlags,System.Boolean)
  - System.Object.AngeliA.Extension.ForAllProperties``1
- uid: AngeliA.BodyPart.ID
  commentId: P:AngeliA.BodyPart.ID
  id: ID
  parent: AngeliA.BodyPart
  langs:
  - csharp
  - vb
  name: ID
  nameWithType: BodyPart.ID
  fullName: AngeliA.BodyPart.ID
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Entity/Character/Bodypart.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ID
    path: ../../AngeliA/AngeliA Framework/src/Entity/Character/Bodypart.cs
    startLine: 38
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Global unique id for this bodypart
  example: []
  syntax:
    content: public int ID { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ID As Integer
  overload: AngeliA.BodyPart.ID*
- uid: AngeliA.BodyPart.Border
  commentId: P:AngeliA.BodyPart.Border
  id: Border
  parent: AngeliA.BodyPart
  langs:
  - csharp
  - vb
  name: Border
  nameWithType: BodyPart.Border
  fullName: AngeliA.BodyPart.Border
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Entity/Character/Bodypart.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Border
    path: ../../AngeliA/AngeliA Framework/src/Entity/Character/Bodypart.cs
    startLine: 42
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Artwork sprite border
  example: []
  syntax:
    content: public Int4 Border { get; }
    parameters: []
    return:
      type: AngeliA.Int4
    content.vb: Public Property Border As Int4
  overload: AngeliA.BodyPart.Border*
- uid: AngeliA.BodyPart.SpritePivotX
  commentId: P:AngeliA.BodyPart.SpritePivotX
  id: SpritePivotX
  parent: AngeliA.BodyPart
  langs:
  - csharp
  - vb
  name: SpritePivotX
  nameWithType: BodyPart.SpritePivotX
  fullName: AngeliA.BodyPart.SpritePivotX
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Entity/Character/Bodypart.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SpritePivotX
    path: ../../AngeliA/AngeliA Framework/src/Entity/Character/Bodypart.cs
    startLine: 46
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Artwork sprite pivot X
  example: []
  syntax:
    content: public int SpritePivotX { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property SpritePivotX As Integer
  overload: AngeliA.BodyPart.SpritePivotX*
- uid: AngeliA.BodyPart.SpritePivotY
  commentId: P:AngeliA.BodyPart.SpritePivotY
  id: SpritePivotY
  parent: AngeliA.BodyPart
  langs:
  - csharp
  - vb
  name: SpritePivotY
  nameWithType: BodyPart.SpritePivotY
  fullName: AngeliA.BodyPart.SpritePivotY
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Entity/Character/Bodypart.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SpritePivotY
    path: ../../AngeliA/AngeliA Framework/src/Entity/Character/Bodypart.cs
    startLine: 50
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Artwork sprite pivot Y
  example: []
  syntax:
    content: public int SpritePivotY { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property SpritePivotY As Integer
  overload: AngeliA.BodyPart.SpritePivotY*
- uid: AngeliA.BodyPart.SizeX
  commentId: P:AngeliA.BodyPart.SizeX
  id: SizeX
  parent: AngeliA.BodyPart
  langs:
  - csharp
  - vb
  name: SizeX
  nameWithType: BodyPart.SizeX
  fullName: AngeliA.BodyPart.SizeX
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Entity/Character/Bodypart.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SizeX
    path: ../../AngeliA/AngeliA Framework/src/Entity/Character/Bodypart.cs
    startLine: 54
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Artwork sprite Width in global size
  example: []
  syntax:
    content: public int SizeX { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property SizeX As Integer
  overload: AngeliA.BodyPart.SizeX*
- uid: AngeliA.BodyPart.SizeY
  commentId: P:AngeliA.BodyPart.SizeY
  id: SizeY
  parent: AngeliA.BodyPart
  langs:
  - csharp
  - vb
  name: SizeY
  nameWithType: BodyPart.SizeY
  fullName: AngeliA.BodyPart.SizeY
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Entity/Character/Bodypart.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SizeY
    path: ../../AngeliA/AngeliA Framework/src/Entity/Character/Bodypart.cs
    startLine: 58
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Artwork sprite Height in global size
  example: []
  syntax:
    content: public int SizeY { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property SizeY As Integer
  overload: AngeliA.BodyPart.SizeY*
- uid: AngeliA.BodyPart.FlexableSizeY
  commentId: P:AngeliA.BodyPart.FlexableSizeY
  id: FlexableSizeY
  parent: AngeliA.BodyPart
  langs:
  - csharp
  - vb
  name: FlexableSizeY
  nameWithType: BodyPart.FlexableSizeY
  fullName: AngeliA.BodyPart.FlexableSizeY
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Entity/Character/Bodypart.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: FlexableSizeY
    path: ../../AngeliA/AngeliA Framework/src/Entity/Character/Bodypart.cs
    startLine: 62
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Height that changes with character's body height
  example: []
  syntax:
    content: public int FlexableSizeY { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property FlexableSizeY As Integer
  overload: AngeliA.BodyPart.FlexableSizeY*
- uid: AngeliA.BodyPart.UseLimbFlip
  commentId: P:AngeliA.BodyPart.UseLimbFlip
  id: UseLimbFlip
  parent: AngeliA.BodyPart
  langs:
  - csharp
  - vb
  name: UseLimbFlip
  nameWithType: BodyPart.UseLimbFlip
  fullName: AngeliA.BodyPart.UseLimbFlip
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Entity/Character/Bodypart.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: UseLimbFlip
    path: ../../AngeliA/AngeliA Framework/src/Entity/Character/Bodypart.cs
    startLine: 66
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: True if the limb flip horizontaly when rotate over specified angle
  example: []
  syntax:
    content: public bool UseLimbFlip { get; init; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property UseLimbFlip As Boolean
  overload: AngeliA.BodyPart.UseLimbFlip*
- uid: AngeliA.BodyPart.LimbParent
  commentId: P:AngeliA.BodyPart.LimbParent
  id: LimbParent
  parent: AngeliA.BodyPart
  langs:
  - csharp
  - vb
  name: LimbParent
  nameWithType: BodyPart.LimbParent
  fullName: AngeliA.BodyPart.LimbParent
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Entity/Character/Bodypart.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: LimbParent
    path: ../../AngeliA/AngeliA Framework/src/Entity/Character/Bodypart.cs
    startLine: 70
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Which bodypart does this bodypart attached on. Set to null if it's not a limb
  example: []
  syntax:
    content: public BodyPart LimbParent { get; init; }
    parameters: []
    return:
      type: AngeliA.BodyPart
    content.vb: Public Property LimbParent As BodyPart
  overload: AngeliA.BodyPart.LimbParent*
- uid: AngeliA.BodyPart.RotateWithBody
  commentId: P:AngeliA.BodyPart.RotateWithBody
  id: RotateWithBody
  parent: AngeliA.BodyPart
  langs:
  - csharp
  - vb
  name: RotateWithBody
  nameWithType: BodyPart.RotateWithBody
  fullName: AngeliA.BodyPart.RotateWithBody
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Entity/Character/Bodypart.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: RotateWithBody
    path: ../../AngeliA/AngeliA Framework/src/Entity/Character/Bodypart.cs
    startLine: 74
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: True if the limb apply rotation from body of the character
  example: []
  syntax:
    content: public bool RotateWithBody { get; init; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property RotateWithBody As Boolean
  overload: AngeliA.BodyPart.RotateWithBody*
- uid: AngeliA.BodyPart.IsFullCovered
  commentId: P:AngeliA.BodyPart.IsFullCovered
  id: IsFullCovered
  parent: AngeliA.BodyPart
  langs:
  - csharp
  - vb
  name: IsFullCovered
  nameWithType: BodyPart.IsFullCovered
  fullName: AngeliA.BodyPart.IsFullCovered
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Entity/Character/Bodypart.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IsFullCovered
    path: ../../AngeliA/AngeliA Framework/src/Entity/Character/Bodypart.cs
    startLine: 78
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: True if this bodypart is totaly covered by cloth
  example: []
  syntax:
    content: public bool IsFullCovered { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsFullCovered As Boolean
  overload: AngeliA.BodyPart.IsFullCovered*
- uid: AngeliA.BodyPart.FacingSign
  commentId: P:AngeliA.BodyPart.FacingSign
  id: FacingSign
  parent: AngeliA.BodyPart
  langs:
  - csharp
  - vb
  name: FacingSign
  nameWithType: BodyPart.FacingSign
  fullName: AngeliA.BodyPart.FacingSign
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Entity/Character/Bodypart.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: FacingSign
    path: ../../AngeliA/AngeliA Framework/src/Entity/Character/Bodypart.cs
    startLine: 82
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Return 1 if this bodypart is facing right
  example: []
  syntax:
    content: public int FacingSign { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property FacingSign As Integer
  overload: AngeliA.BodyPart.FacingSign*
- uid: AngeliA.BodyPart.FacingRight
  commentId: P:AngeliA.BodyPart.FacingRight
  id: FacingRight
  parent: AngeliA.BodyPart
  langs:
  - csharp
  - vb
  name: FacingRight
  nameWithType: BodyPart.FacingRight
  fullName: AngeliA.BodyPart.FacingRight
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Entity/Character/Bodypart.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: FacingRight
    path: ../../AngeliA/AngeliA Framework/src/Entity/Character/Bodypart.cs
    startLine: 86
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: True if this bodypart is facing right
  example: []
  syntax:
    content: public bool FacingRight { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property FacingRight As Boolean
  overload: AngeliA.BodyPart.FacingRight*
- uid: AngeliA.BodyPart.GlobalX
  commentId: F:AngeliA.BodyPart.GlobalX
  id: GlobalX
  parent: AngeliA.BodyPart
  langs:
  - csharp
  - vb
  name: GlobalX
  nameWithType: BodyPart.GlobalX
  fullName: AngeliA.BodyPart.GlobalX
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Entity/Character/Bodypart.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GlobalX
    path: ../../AngeliA/AngeliA Framework/src/Entity/Character/Bodypart.cs
    startLine: 91
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Position X in global space
  example: []
  syntax:
    content: public int GlobalX
    return:
      type: System.Int32
    content.vb: Public GlobalX As Integer
- uid: AngeliA.BodyPart.GlobalY
  commentId: F:AngeliA.BodyPart.GlobalY
  id: GlobalY
  parent: AngeliA.BodyPart
  langs:
  - csharp
  - vb
  name: GlobalY
  nameWithType: BodyPart.GlobalY
  fullName: AngeliA.BodyPart.GlobalY
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Entity/Character/Bodypart.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GlobalY
    path: ../../AngeliA/AngeliA Framework/src/Entity/Character/Bodypart.cs
    startLine: 95
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Position Y in global space
  example: []
  syntax:
    content: public int GlobalY
    return:
      type: System.Int32
    content.vb: Public GlobalY As Integer
- uid: AngeliA.BodyPart.X
  commentId: F:AngeliA.BodyPart.X
  id: X
  parent: AngeliA.BodyPart
  langs:
  - csharp
  - vb
  name: X
  nameWithType: BodyPart.X
  fullName: AngeliA.BodyPart.X
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Entity/Character/Bodypart.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: X
    path: ../../AngeliA/AngeliA Framework/src/Entity/Character/Bodypart.cs
    startLine: 99
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Position X in local space
  example: []
  syntax:
    content: public int X
    return:
      type: System.Int32
    content.vb: Public X As Integer
- uid: AngeliA.BodyPart.Y
  commentId: F:AngeliA.BodyPart.Y
  id: Y
  parent: AngeliA.BodyPart
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: BodyPart.Y
  fullName: AngeliA.BodyPart.Y
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Entity/Character/Bodypart.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Y
    path: ../../AngeliA/AngeliA Framework/src/Entity/Character/Bodypart.cs
    startLine: 103
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Position Y in local space
  example: []
  syntax:
    content: public int Y
    return:
      type: System.Int32
    content.vb: Public Y As Integer
- uid: AngeliA.BodyPart.Z
  commentId: F:AngeliA.BodyPart.Z
  id: Z
  parent: AngeliA.BodyPart
  langs:
  - csharp
  - vb
  name: Z
  nameWithType: BodyPart.Z
  fullName: AngeliA.BodyPart.Z
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Entity/Character/Bodypart.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Z
    path: ../../AngeliA/AngeliA Framework/src/Entity/Character/Bodypart.cs
    startLine: 107
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Z value for sort rendering cells
  example: []
  syntax:
    content: public int Z
    return:
      type: System.Int32
    content.vb: Public Z As Integer
- uid: AngeliA.BodyPart.Rotation
  commentId: F:AngeliA.BodyPart.Rotation
  id: Rotation
  parent: AngeliA.BodyPart
  langs:
  - csharp
  - vb
  name: Rotation
  nameWithType: BodyPart.Rotation
  fullName: AngeliA.BodyPart.Rotation
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Entity/Character/Bodypart.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Rotation
    path: ../../AngeliA/AngeliA Framework/src/Entity/Character/Bodypart.cs
    startLine: 111
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Angle of this bodypart
  example: []
  syntax:
    content: public int Rotation
    return:
      type: System.Int32
    content.vb: Public Rotation As Integer
- uid: AngeliA.BodyPart.Width
  commentId: F:AngeliA.BodyPart.Width
  id: Width
  parent: AngeliA.BodyPart
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: BodyPart.Width
  fullName: AngeliA.BodyPart.Width
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Entity/Character/Bodypart.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Width
    path: ../../AngeliA/AngeliA Framework/src/Entity/Character/Bodypart.cs
    startLine: 115
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Horizontal size of this bodypart
  example: []
  syntax:
    content: public int Width
    return:
      type: System.Int32
    content.vb: Public Width As Integer
- uid: AngeliA.BodyPart.Height
  commentId: F:AngeliA.BodyPart.Height
  id: Height
  parent: AngeliA.BodyPart
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: BodyPart.Height
  fullName: AngeliA.BodyPart.Height
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Entity/Character/Bodypart.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Height
    path: ../../AngeliA/AngeliA Framework/src/Entity/Character/Bodypart.cs
    startLine: 119
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Vertical size of this bodypart
  example: []
  syntax:
    content: public int Height
    return:
      type: System.Int32
    content.vb: Public Height As Integer
- uid: AngeliA.BodyPart.PivotX
  commentId: F:AngeliA.BodyPart.PivotX
  id: PivotX
  parent: AngeliA.BodyPart
  langs:
  - csharp
  - vb
  name: PivotX
  nameWithType: BodyPart.PivotX
  fullName: AngeliA.BodyPart.PivotX
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Entity/Character/Bodypart.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: PivotX
    path: ../../AngeliA/AngeliA Framework/src/Entity/Character/Bodypart.cs
    startLine: 123
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Current pivot X of this bodypart (0 means left, 1000 means right)
  example: []
  syntax:
    content: public int PivotX
    return:
      type: System.Int32
    content.vb: Public PivotX As Integer
- uid: AngeliA.BodyPart.PivotY
  commentId: F:AngeliA.BodyPart.PivotY
  id: PivotY
  parent: AngeliA.BodyPart
  langs:
  - csharp
  - vb
  name: PivotY
  nameWithType: BodyPart.PivotY
  fullName: AngeliA.BodyPart.PivotY
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Entity/Character/Bodypart.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: PivotY
    path: ../../AngeliA/AngeliA Framework/src/Entity/Character/Bodypart.cs
    startLine: 127
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Current pivot Y of this bodypart (0 means bottom, 1000 means top)
  example: []
  syntax:
    content: public int PivotY
    return:
      type: System.Int32
    content.vb: Public PivotY As Integer
- uid: AngeliA.BodyPart.FrontSide
  commentId: F:AngeliA.BodyPart.FrontSide
  id: FrontSide
  parent: AngeliA.BodyPart
  langs:
  - csharp
  - vb
  name: FrontSide
  nameWithType: BodyPart.FrontSide
  fullName: AngeliA.BodyPart.FrontSide
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Entity/Character/Bodypart.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: FrontSide
    path: ../../AngeliA/AngeliA Framework/src/Entity/Character/Bodypart.cs
    startLine: 131
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: True if the bodypart is facing front
  example: []
  syntax:
    content: public bool FrontSide
    return:
      type: System.Boolean
    content.vb: Public FrontSide As Boolean
- uid: AngeliA.BodyPart.Covered
  commentId: F:AngeliA.BodyPart.Covered
  id: Covered
  parent: AngeliA.BodyPart
  langs:
  - csharp
  - vb
  name: Covered
  nameWithType: BodyPart.Covered
  fullName: AngeliA.BodyPart.Covered
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Entity/Character/Bodypart.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Covered
    path: ../../AngeliA/AngeliA Framework/src/Entity/Character/Bodypart.cs
    startLine: 135
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: How this bodypart is being covered by cloths
  example: []
  syntax:
    content: public BodyPart.CoverMode Covered
    return:
      type: AngeliA.BodyPart.CoverMode
    content.vb: Public Covered As BodyPart.CoverMode
- uid: AngeliA.BodyPart.Tint
  commentId: F:AngeliA.BodyPart.Tint
  id: Tint
  parent: AngeliA.BodyPart
  langs:
  - csharp
  - vb
  name: Tint
  nameWithType: BodyPart.Tint
  fullName: AngeliA.BodyPart.Tint
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Entity/Character/Bodypart.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Tint
    path: ../../AngeliA/AngeliA Framework/src/Entity/Character/Bodypart.cs
    startLine: 139
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Color tint
  example: []
  syntax:
    content: public Color32 Tint
    return:
      type: AngeliA.Color32
    content.vb: Public Tint As Color32
- uid: AngeliA.BodyPart.#ctor(AngeliA.BodyPart,System.Boolean,System.Boolean,System.Int32,System.Int32)
  commentId: M:AngeliA.BodyPart.#ctor(AngeliA.BodyPart,System.Boolean,System.Boolean,System.Int32,System.Int32)
  id: '#ctor(AngeliA.BodyPart,System.Boolean,System.Boolean,System.Int32,System.Int32)'
  parent: AngeliA.BodyPart
  langs:
  - csharp
  - vb
  name: BodyPart(BodyPart, bool, bool, int, int)
  nameWithType: BodyPart.BodyPart(BodyPart, bool, bool, int, int)
  fullName: AngeliA.BodyPart.BodyPart(AngeliA.BodyPart, bool, bool, int, int)
  type: Constructor
  source:
    remote:
      path: AngeliA Framework/src/Entity/Character/Bodypart.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: .ctor
    path: ../../AngeliA/AngeliA Framework/src/Entity/Character/Bodypart.cs
    startLine: 154
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Representation of a bodypart for a pose-style character
  example: []
  syntax:
    content: public BodyPart(BodyPart parent, bool useLimbFlip, bool rotateWithBody, int defaultPivotX, int defaultPivotY)
    parameters:
    - id: parent
      type: AngeliA.BodyPart
      description: Which bodypart does this bodypart attached on. Set to null if it's not a limb
    - id: useLimbFlip
      type: System.Boolean
      description: True if the limb flip horizontaly when rotate over specified angle
    - id: rotateWithBody
      type: System.Boolean
      description: True if the limb apply rotation from body of the character
    - id: defaultPivotX
      type: System.Int32
      description: ''
    - id: defaultPivotY
      type: System.Int32
      description: ''
    content.vb: Public Sub New(parent As BodyPart, useLimbFlip As Boolean, rotateWithBody As Boolean, defaultPivotX As Integer, defaultPivotY As Integer)
  overload: AngeliA.BodyPart.#ctor*
  nameWithType.vb: BodyPart.New(BodyPart, Boolean, Boolean, Integer, Integer)
  fullName.vb: AngeliA.BodyPart.New(AngeliA.BodyPart, Boolean, Boolean, Integer, Integer)
  name.vb: New(BodyPart, Boolean, Boolean, Integer, Integer)
- uid: AngeliA.BodyPart.TryGetSpriteIdFromSheet(System.Type,System.String,System.Boolean,System.Int32@)
  commentId: M:AngeliA.BodyPart.TryGetSpriteIdFromSheet(System.Type,System.String,System.Boolean,System.Int32@)
  id: TryGetSpriteIdFromSheet(System.Type,System.String,System.Boolean,System.Int32@)
  parent: AngeliA.BodyPart
  langs:
  - csharp
  - vb
  name: TryGetSpriteIdFromSheet(Type, string, bool, out int)
  nameWithType: BodyPart.TryGetSpriteIdFromSheet(Type, string, bool, out int)
  fullName: AngeliA.BodyPart.TryGetSpriteIdFromSheet(System.Type, string, bool, out int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Entity/Character/Bodypart.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TryGetSpriteIdFromSheet
    path: ../../AngeliA/AngeliA Framework/src/Entity/Character/Bodypart.cs
    startLine: 172
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get sprite id to rendering bodypart for given type of character
  example: []
  syntax:
    content: public static bool TryGetSpriteIdFromSheet(Type characterType, string bodyPartName, bool checkForGroup, out int id)
    parameters:
    - id: characterType
      type: System.Type
      description: Target type of character
    - id: bodyPartName
      type: System.String
      description: Basic name of this bodypart
    - id: checkForGroup
      type: System.Boolean
      description: True if the sprite can be get from sprite group
    - id: id
      type: System.Int32
      description: Global ID of the result bodypart
    return:
      type: System.Boolean
      description: True if the id is found
    content.vb: Public Shared Function TryGetSpriteIdFromSheet(characterType As Type, bodyPartName As String, checkForGroup As Boolean, id As Integer) As Boolean
  overload: AngeliA.BodyPart.TryGetSpriteIdFromSheet*
  nameWithType.vb: BodyPart.TryGetSpriteIdFromSheet(Type, String, Boolean, Integer)
  fullName.vb: AngeliA.BodyPart.TryGetSpriteIdFromSheet(System.Type, String, Boolean, Integer)
  name.vb: TryGetSpriteIdFromSheet(Type, String, Boolean, Integer)
- uid: AngeliA.BodyPart.SetData(System.Int32)
  commentId: M:AngeliA.BodyPart.SetData(System.Int32)
  id: SetData(System.Int32)
  parent: AngeliA.BodyPart
  langs:
  - csharp
  - vb
  name: SetData(int)
  nameWithType: BodyPart.SetData(int)
  fullName: AngeliA.BodyPart.SetData(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Entity/Character/Bodypart.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SetData
    path: ../../AngeliA/AngeliA Framework/src/Entity/Character/Bodypart.cs
    startLine: 196
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Set bodypart data by giving a sprite ID
  example: []
  syntax:
    content: public void SetData(int id)
    parameters:
    - id: id
      type: System.Int32
    content.vb: Public Sub SetData(id As Integer)
  overload: AngeliA.BodyPart.SetData*
  nameWithType.vb: BodyPart.SetData(Integer)
  fullName.vb: AngeliA.BodyPart.SetData(Integer)
  name.vb: SetData(Integer)
- uid: AngeliA.BodyPart.Imitate(AngeliA.BodyPart)
  commentId: M:AngeliA.BodyPart.Imitate(AngeliA.BodyPart)
  id: Imitate(AngeliA.BodyPart)
  parent: AngeliA.BodyPart
  langs:
  - csharp
  - vb
  name: Imitate(BodyPart)
  nameWithType: BodyPart.Imitate(BodyPart)
  fullName: AngeliA.BodyPart.Imitate(AngeliA.BodyPart)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Entity/Character/Bodypart.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Imitate
    path: ../../AngeliA/AngeliA Framework/src/Entity/Character/Bodypart.cs
    startLine: 217
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Copy motion data from another bodypart without changing anything about data about source sprite
  example: []
  syntax:
    content: public void Imitate(BodyPart other)
    parameters:
    - id: other
      type: AngeliA.BodyPart
    content.vb: Public Sub Imitate(other As BodyPart)
  overload: AngeliA.BodyPart.Imitate*
- uid: AngeliA.BodyPart.GetGlobalRect
  commentId: M:AngeliA.BodyPart.GetGlobalRect
  id: GetGlobalRect
  parent: AngeliA.BodyPart
  langs:
  - csharp
  - vb
  name: GetGlobalRect()
  nameWithType: BodyPart.GetGlobalRect()
  fullName: AngeliA.BodyPart.GetGlobalRect()
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Entity/Character/Bodypart.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetGlobalRect
    path: ../../AngeliA/AngeliA Framework/src/Entity/Character/Bodypart.cs
    startLine: 234
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get current position rect in global space
  example: []
  syntax:
    content: public IRect GetGlobalRect()
    return:
      type: AngeliA.IRect
      description: ''
    content.vb: Public Function GetGlobalRect() As IRect
  overload: AngeliA.BodyPart.GetGlobalRect*
- uid: AngeliA.BodyPart.GetLocalCenter
  commentId: M:AngeliA.BodyPart.GetLocalCenter
  id: GetLocalCenter
  parent: AngeliA.BodyPart
  langs:
  - csharp
  - vb
  name: GetLocalCenter()
  nameWithType: BodyPart.GetLocalCenter()
  fullName: AngeliA.BodyPart.GetLocalCenter()
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Entity/Character/Bodypart.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetLocalCenter
    path: ../../AngeliA/AngeliA Framework/src/Entity/Character/Bodypart.cs
    startLine: 246
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get current center position in local space
  example: []
  syntax:
    content: public Int2 GetLocalCenter()
    return:
      type: AngeliA.Int2
    content.vb: Public Function GetLocalCenter() As Int2
  overload: AngeliA.BodyPart.GetLocalCenter*
- uid: AngeliA.BodyPart.GetGlobalCenter
  commentId: M:AngeliA.BodyPart.GetGlobalCenter
  id: GetGlobalCenter
  parent: AngeliA.BodyPart
  langs:
  - csharp
  - vb
  name: GetGlobalCenter()
  nameWithType: BodyPart.GetGlobalCenter()
  fullName: AngeliA.BodyPart.GetGlobalCenter()
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Entity/Character/Bodypart.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetGlobalCenter
    path: ../../AngeliA/AngeliA Framework/src/Entity/Character/Bodypart.cs
    startLine: 258
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get current center position in global space
  example: []
  syntax:
    content: public Int2 GetGlobalCenter()
    return:
      type: AngeliA.Int2
    content.vb: Public Function GetGlobalCenter() As Int2
  overload: AngeliA.BodyPart.GetGlobalCenter*
- uid: AngeliA.BodyPart.GlobalLerp(System.Single,System.Single,System.Boolean)
  commentId: M:AngeliA.BodyPart.GlobalLerp(System.Single,System.Single,System.Boolean)
  id: GlobalLerp(System.Single,System.Single,System.Boolean)
  parent: AngeliA.BodyPart
  langs:
  - csharp
  - vb
  name: GlobalLerp(float, float, bool)
  nameWithType: BodyPart.GlobalLerp(float, float, bool)
  fullName: AngeliA.BodyPart.GlobalLerp(float, float, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Entity/Character/Bodypart.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GlobalLerp
    path: ../../AngeliA/AngeliA Framework/src/Entity/Character/Bodypart.cs
    startLine: 273
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get global position that lerp from given value
  example: []
  syntax:
    content: public Int2 GlobalLerp(float x01, float y01, bool natural = false)
    parameters:
    - id: x01
      type: System.Single
      description: X lerp value (0 means left, 1 means right)
    - id: y01
      type: System.Single
      description: Y lerp value (0 means bottom, 1 means top)
    - id: natural
      type: System.Boolean
      description: True if this lerping logic respect character's natural orientation (like Tokino Sora's hairpin should always on her left side)
    return:
      type: AngeliA.Int2
    content.vb: Public Function GlobalLerp(x01 As Single, y01 As Single, natural As Boolean = False) As Int2
  overload: AngeliA.BodyPart.GlobalLerp*
  nameWithType.vb: BodyPart.GlobalLerp(Single, Single, Boolean)
  fullName.vb: AngeliA.BodyPart.GlobalLerp(Single, Single, Boolean)
  name.vb: GlobalLerp(Single, Single, Boolean)
- uid: AngeliA.BodyPart.LimbRotate(System.Int32,System.Int32)
  commentId: M:AngeliA.BodyPart.LimbRotate(System.Int32,System.Int32)
  id: LimbRotate(System.Int32,System.Int32)
  parent: AngeliA.BodyPart
  langs:
  - csharp
  - vb
  name: LimbRotate(int, int)
  nameWithType: BodyPart.LimbRotate(int, int)
  fullName: AngeliA.BodyPart.LimbRotate(int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Entity/Character/Bodypart.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: LimbRotate
    path: ../../AngeliA/AngeliA Framework/src/Entity/Character/Bodypart.cs
    startLine: 293
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Rotate the bodypart with "LimbRotate" logic
  example: []
  syntax:
    content: public void LimbRotate(int rotation, int grow = 1000)
    parameters:
    - id: rotation
      type: System.Int32
      description: ''
    - id: grow
      type: System.Int32
      description: How much does the limb grow it's size from the rotation (0 means don't grow. 1000 means general amount)
    content.vb: Public Sub LimbRotate(rotation As Integer, grow As Integer = 1000)
  overload: AngeliA.BodyPart.LimbRotate*
  nameWithType.vb: BodyPart.LimbRotate(Integer, Integer)
  fullName.vb: AngeliA.BodyPart.LimbRotate(Integer, Integer)
  name.vb: LimbRotate(Integer, Integer)
references:
- uid: AngeliA
  commentId: N:AngeliA
  href: AngeliA.html
  name: AngeliA
  nameWithType: AngeliA
  fullName: AngeliA
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.AngeliA.Extension.ForAllFields``1(System.Reflection.BindingFlags,System.Boolean)
  commentId: M:AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
  parent: AngeliA.Extension
  definition: AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
  href: AngeliA.Extension.html#AngeliA_Extension_ForAllFields__1_System_Object_System_Reflection_BindingFlags_System_Boolean_
  name: ForAllFields<T>(object, BindingFlags, bool)
  nameWithType: Extension.ForAllFields<T>(object, BindingFlags, bool)
  fullName: AngeliA.Extension.ForAllFields<T>(object, System.Reflection.BindingFlags, bool)
  nameWithType.vb: Extension.ForAllFields(Of T)(Object, BindingFlags, Boolean)
  fullName.vb: AngeliA.Extension.ForAllFields(Of T)(Object, System.Reflection.BindingFlags, Boolean)
  name.vb: ForAllFields(Of T)(Object, BindingFlags, Boolean)
  spec.csharp:
  - uid: AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
    name: ForAllFields
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllFields__1_System_Object_System_Reflection_BindingFlags_System_Boolean_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
    name: ForAllFields
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllFields__1_System_Object_System_Reflection_BindingFlags_System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Object.AngeliA.Extension.ForAllProperties``1
  commentId: M:AngeliA.Extension.ForAllProperties``1(System.Object)
  parent: AngeliA.Extension
  definition: AngeliA.Extension.ForAllProperties``1(System.Object)
  href: AngeliA.Extension.html#AngeliA_Extension_ForAllProperties__1_System_Object_
  name: ForAllProperties<T>(object)
  nameWithType: Extension.ForAllProperties<T>(object)
  fullName: AngeliA.Extension.ForAllProperties<T>(object)
  nameWithType.vb: Extension.ForAllProperties(Of T)(Object)
  fullName.vb: AngeliA.Extension.ForAllProperties(Of T)(Object)
  name.vb: ForAllProperties(Of T)(Object)
  spec.csharp:
  - uid: AngeliA.Extension.ForAllProperties``1(System.Object)
    name: ForAllProperties
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllProperties__1_System_Object_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: AngeliA.Extension.ForAllProperties``1(System.Object)
    name: ForAllProperties
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllProperties__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
  commentId: M:AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
  isExternal: true
  href: AngeliA.Extension.html#AngeliA_Extension_ForAllFields__1_System_Object_System_Reflection_BindingFlags_System_Boolean_
  name: ForAllFields<T>(object, BindingFlags, bool)
  nameWithType: Extension.ForAllFields<T>(object, BindingFlags, bool)
  fullName: AngeliA.Extension.ForAllFields<T>(object, System.Reflection.BindingFlags, bool)
  nameWithType.vb: Extension.ForAllFields(Of T)(Object, BindingFlags, Boolean)
  fullName.vb: AngeliA.Extension.ForAllFields(Of T)(Object, System.Reflection.BindingFlags, Boolean)
  name.vb: ForAllFields(Of T)(Object, BindingFlags, Boolean)
  spec.csharp:
  - uid: AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
    name: ForAllFields
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllFields__1_System_Object_System_Reflection_BindingFlags_System_Boolean_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
    name: ForAllFields
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllFields__1_System_Object_System_Reflection_BindingFlags_System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: AngeliA.Extension
  commentId: T:AngeliA.Extension
  parent: AngeliA
  href: AngeliA.Extension.html
  name: Extension
  nameWithType: Extension
  fullName: AngeliA.Extension
- uid: AngeliA.Extension.ForAllProperties``1(System.Object)
  commentId: M:AngeliA.Extension.ForAllProperties``1(System.Object)
  isExternal: true
  href: AngeliA.Extension.html#AngeliA_Extension_ForAllProperties__1_System_Object_
  name: ForAllProperties<T>(object)
  nameWithType: Extension.ForAllProperties<T>(object)
  fullName: AngeliA.Extension.ForAllProperties<T>(object)
  nameWithType.vb: Extension.ForAllProperties(Of T)(Object)
  fullName.vb: AngeliA.Extension.ForAllProperties(Of T)(Object)
  name.vb: ForAllProperties(Of T)(Object)
  spec.csharp:
  - uid: AngeliA.Extension.ForAllProperties``1(System.Object)
    name: ForAllProperties
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllProperties__1_System_Object_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: AngeliA.Extension.ForAllProperties``1(System.Object)
    name: ForAllProperties
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllProperties__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: AngeliA.BodyPart.ID*
  commentId: Overload:AngeliA.BodyPart.ID
  href: AngeliA.BodyPart.html#AngeliA_BodyPart_ID
  name: ID
  nameWithType: BodyPart.ID
  fullName: AngeliA.BodyPart.ID
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: AngeliA.BodyPart.Border*
  commentId: Overload:AngeliA.BodyPart.Border
  href: AngeliA.BodyPart.html#AngeliA_BodyPart_Border
  name: Border
  nameWithType: BodyPart.Border
  fullName: AngeliA.BodyPart.Border
- uid: AngeliA.Int4
  commentId: T:AngeliA.Int4
  parent: AngeliA
  href: AngeliA.Int4.html
  name: Int4
  nameWithType: Int4
  fullName: AngeliA.Int4
- uid: AngeliA.BodyPart.SpritePivotX*
  commentId: Overload:AngeliA.BodyPart.SpritePivotX
  href: AngeliA.BodyPart.html#AngeliA_BodyPart_SpritePivotX
  name: SpritePivotX
  nameWithType: BodyPart.SpritePivotX
  fullName: AngeliA.BodyPart.SpritePivotX
- uid: AngeliA.BodyPart.SpritePivotY*
  commentId: Overload:AngeliA.BodyPart.SpritePivotY
  href: AngeliA.BodyPart.html#AngeliA_BodyPart_SpritePivotY
  name: SpritePivotY
  nameWithType: BodyPart.SpritePivotY
  fullName: AngeliA.BodyPart.SpritePivotY
- uid: AngeliA.BodyPart.SizeX*
  commentId: Overload:AngeliA.BodyPart.SizeX
  href: AngeliA.BodyPart.html#AngeliA_BodyPart_SizeX
  name: SizeX
  nameWithType: BodyPart.SizeX
  fullName: AngeliA.BodyPart.SizeX
- uid: AngeliA.BodyPart.SizeY*
  commentId: Overload:AngeliA.BodyPart.SizeY
  href: AngeliA.BodyPart.html#AngeliA_BodyPart_SizeY
  name: SizeY
  nameWithType: BodyPart.SizeY
  fullName: AngeliA.BodyPart.SizeY
- uid: AngeliA.BodyPart.FlexableSizeY*
  commentId: Overload:AngeliA.BodyPart.FlexableSizeY
  href: AngeliA.BodyPart.html#AngeliA_BodyPart_FlexableSizeY
  name: FlexableSizeY
  nameWithType: BodyPart.FlexableSizeY
  fullName: AngeliA.BodyPart.FlexableSizeY
- uid: AngeliA.BodyPart.UseLimbFlip*
  commentId: Overload:AngeliA.BodyPart.UseLimbFlip
  href: AngeliA.BodyPart.html#AngeliA_BodyPart_UseLimbFlip
  name: UseLimbFlip
  nameWithType: BodyPart.UseLimbFlip
  fullName: AngeliA.BodyPart.UseLimbFlip
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: AngeliA.BodyPart.LimbParent*
  commentId: Overload:AngeliA.BodyPart.LimbParent
  href: AngeliA.BodyPart.html#AngeliA_BodyPart_LimbParent
  name: LimbParent
  nameWithType: BodyPart.LimbParent
  fullName: AngeliA.BodyPart.LimbParent
- uid: AngeliA.BodyPart
  commentId: T:AngeliA.BodyPart
  parent: AngeliA
  href: AngeliA.BodyPart.html
  name: BodyPart
  nameWithType: BodyPart
  fullName: AngeliA.BodyPart
- uid: AngeliA.BodyPart.RotateWithBody*
  commentId: Overload:AngeliA.BodyPart.RotateWithBody
  href: AngeliA.BodyPart.html#AngeliA_BodyPart_RotateWithBody
  name: RotateWithBody
  nameWithType: BodyPart.RotateWithBody
  fullName: AngeliA.BodyPart.RotateWithBody
- uid: AngeliA.BodyPart.IsFullCovered*
  commentId: Overload:AngeliA.BodyPart.IsFullCovered
  href: AngeliA.BodyPart.html#AngeliA_BodyPart_IsFullCovered
  name: IsFullCovered
  nameWithType: BodyPart.IsFullCovered
  fullName: AngeliA.BodyPart.IsFullCovered
- uid: AngeliA.BodyPart.FacingSign*
  commentId: Overload:AngeliA.BodyPart.FacingSign
  href: AngeliA.BodyPart.html#AngeliA_BodyPart_FacingSign
  name: FacingSign
  nameWithType: BodyPart.FacingSign
  fullName: AngeliA.BodyPart.FacingSign
- uid: AngeliA.BodyPart.FacingRight*
  commentId: Overload:AngeliA.BodyPart.FacingRight
  href: AngeliA.BodyPart.html#AngeliA_BodyPart_FacingRight
  name: FacingRight
  nameWithType: BodyPart.FacingRight
  fullName: AngeliA.BodyPart.FacingRight
- uid: AngeliA.BodyPart.CoverMode
  commentId: T:AngeliA.BodyPart.CoverMode
  parent: AngeliA
  href: AngeliA.BodyPart.html
  name: BodyPart.CoverMode
  nameWithType: BodyPart.CoverMode
  fullName: AngeliA.BodyPart.CoverMode
  spec.csharp:
  - uid: AngeliA.BodyPart
    name: BodyPart
    href: AngeliA.BodyPart.html
  - name: .
  - uid: AngeliA.BodyPart.CoverMode
    name: CoverMode
    href: AngeliA.BodyPart.CoverMode.html
  spec.vb:
  - uid: AngeliA.BodyPart
    name: BodyPart
    href: AngeliA.BodyPart.html
  - name: .
  - uid: AngeliA.BodyPart.CoverMode
    name: CoverMode
    href: AngeliA.BodyPart.CoverMode.html
- uid: AngeliA.Color32
  commentId: T:AngeliA.Color32
  parent: AngeliA
  href: AngeliA.Color32.html
  name: Color32
  nameWithType: Color32
  fullName: AngeliA.Color32
- uid: AngeliA.BodyPart.#ctor*
  commentId: Overload:AngeliA.BodyPart.#ctor
  href: AngeliA.BodyPart.html#AngeliA_BodyPart__ctor_AngeliA_BodyPart_System_Boolean_System_Boolean_System_Int32_System_Int32_
  name: BodyPart
  nameWithType: BodyPart.BodyPart
  fullName: AngeliA.BodyPart.BodyPart
  nameWithType.vb: BodyPart.New
  fullName.vb: AngeliA.BodyPart.New
  name.vb: New
- uid: AngeliA.BodyPart.TryGetSpriteIdFromSheet*
  commentId: Overload:AngeliA.BodyPart.TryGetSpriteIdFromSheet
  href: AngeliA.BodyPart.html#AngeliA_BodyPart_TryGetSpriteIdFromSheet_System_Type_System_String_System_Boolean_System_Int32__
  name: TryGetSpriteIdFromSheet
  nameWithType: BodyPart.TryGetSpriteIdFromSheet
  fullName: AngeliA.BodyPart.TryGetSpriteIdFromSheet
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AngeliA.BodyPart.SetData*
  commentId: Overload:AngeliA.BodyPart.SetData
  href: AngeliA.BodyPart.html#AngeliA_BodyPart_SetData_System_Int32_
  name: SetData
  nameWithType: BodyPart.SetData
  fullName: AngeliA.BodyPart.SetData
- uid: AngeliA.BodyPart.Imitate*
  commentId: Overload:AngeliA.BodyPart.Imitate
  href: AngeliA.BodyPart.html#AngeliA_BodyPart_Imitate_AngeliA_BodyPart_
  name: Imitate
  nameWithType: BodyPart.Imitate
  fullName: AngeliA.BodyPart.Imitate
- uid: AngeliA.BodyPart.GetGlobalRect*
  commentId: Overload:AngeliA.BodyPart.GetGlobalRect
  href: AngeliA.BodyPart.html#AngeliA_BodyPart_GetGlobalRect
  name: GetGlobalRect
  nameWithType: BodyPart.GetGlobalRect
  fullName: AngeliA.BodyPart.GetGlobalRect
- uid: AngeliA.IRect
  commentId: T:AngeliA.IRect
  parent: AngeliA
  href: AngeliA.IRect.html
  name: IRect
  nameWithType: IRect
  fullName: AngeliA.IRect
- uid: AngeliA.BodyPart.GetLocalCenter*
  commentId: Overload:AngeliA.BodyPart.GetLocalCenter
  href: AngeliA.BodyPart.html#AngeliA_BodyPart_GetLocalCenter
  name: GetLocalCenter
  nameWithType: BodyPart.GetLocalCenter
  fullName: AngeliA.BodyPart.GetLocalCenter
- uid: AngeliA.Int2
  commentId: T:AngeliA.Int2
  parent: AngeliA
  href: AngeliA.Int2.html
  name: Int2
  nameWithType: Int2
  fullName: AngeliA.Int2
- uid: AngeliA.BodyPart.GetGlobalCenter*
  commentId: Overload:AngeliA.BodyPart.GetGlobalCenter
  href: AngeliA.BodyPart.html#AngeliA_BodyPart_GetGlobalCenter
  name: GetGlobalCenter
  nameWithType: BodyPart.GetGlobalCenter
  fullName: AngeliA.BodyPart.GetGlobalCenter
- uid: AngeliA.BodyPart.GlobalLerp*
  commentId: Overload:AngeliA.BodyPart.GlobalLerp
  href: AngeliA.BodyPart.html#AngeliA_BodyPart_GlobalLerp_System_Single_System_Single_System_Boolean_
  name: GlobalLerp
  nameWithType: BodyPart.GlobalLerp
  fullName: AngeliA.BodyPart.GlobalLerp
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: AngeliA.BodyPart.LimbRotate*
  commentId: Overload:AngeliA.BodyPart.LimbRotate
  href: AngeliA.BodyPart.html#AngeliA_BodyPart_LimbRotate_System_Int32_System_Int32_
  name: LimbRotate
  nameWithType: BodyPart.LimbRotate
  fullName: AngeliA.BodyPart.LimbRotate
