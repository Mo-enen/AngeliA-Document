### YamlMime:ManagedReference
items:
- uid: AngeliA.Extension
  commentId: T:AngeliA.Extension
  id: Extension
  parent: AngeliA
  children:
  - AngeliA.Extension.Abs(System.Int32)
  - AngeliA.Extension.Abs(System.Single)
  - AngeliA.Extension.Adjust(AngeliA.Color32,System.Single,System.Single,System.Single,System.Single)
  - AngeliA.Extension.Almost(AngeliA.ColorF,AngeliA.ColorF)
  - AngeliA.Extension.Almost(AngeliA.FRect,AngeliA.FRect)
  - AngeliA.Extension.Almost(AngeliA.Float2,AngeliA.Float2)
  - AngeliA.Extension.Almost(AngeliA.Float3,AngeliA.Float3)
  - AngeliA.Extension.Almost(System.Single,System.Single)
  - AngeliA.Extension.AlmostZero(AngeliA.Float4)
  - AngeliA.Extension.AlmostZero(System.Single)
  - AngeliA.Extension.AngeHash(System.String)
  - AngeliA.Extension.AngeHash(System.String,System.Int32,System.Int32)
  - AngeliA.Extension.AngeHash(System.Type)
  - AngeliA.Extension.AngeName(System.Type)
  - AngeliA.Extension.AngeReverseHash(System.Char[],System.Int32,System.Int32)
  - AngeliA.Extension.AntiClockwise(AngeliA.Direction4)
  - AngeliA.Extension.AntiClockwise(AngeliA.Direction5)
  - AngeliA.Extension.AntiClockwise(AngeliA.Direction8,System.Int32)
  - AngeliA.Extension.AppendWithDoubleQuotes(System.Text.StringBuilder,System.String)
  - AngeliA.Extension.BottomHalf(AngeliA.IRect)
  - AngeliA.Extension.BottomLeft(AngeliA.FRect)
  - AngeliA.Extension.BottomLeft(AngeliA.IRect)
  - AngeliA.Extension.BottomMid(AngeliA.IRect)
  - AngeliA.Extension.BottomRight(AngeliA.FRect)
  - AngeliA.Extension.BottomRight(AngeliA.IRect)
  - AngeliA.Extension.Bytes_to_Pixels(System.Byte[],System.Int32,System.Int32)
  - AngeliA.Extension.Ceil(System.Single)
  - AngeliA.Extension.CeilDivide(System.Int32,System.Int32)
  - AngeliA.Extension.CeilToInt(AngeliA.Float2)
  - AngeliA.Extension.CeilToInt(System.Single)
  - AngeliA.Extension.CenterInt(AngeliA.IRect)
  - AngeliA.Extension.CenterX(AngeliA.IRect)
  - AngeliA.Extension.CenterY(AngeliA.IRect)
  - AngeliA.Extension.Clamp(AngeliA.FRect@,AngeliA.FRect)
  - AngeliA.Extension.Clamp(AngeliA.Float2@,System.Single,System.Single,System.Single,System.Single)
  - AngeliA.Extension.Clamp(AngeliA.IRect,AngeliA.IRect)
  - AngeliA.Extension.Clamp(AngeliA.Int2@,AngeliA.IRect)
  - AngeliA.Extension.Clamp(AngeliA.Int2@,System.Int32,System.Int32,System.Int32,System.Int32)
  - AngeliA.Extension.Clamp(System.Int32,System.Int32,System.Int32)
  - AngeliA.Extension.Clamp(System.Single,System.Single,System.Single)
  - AngeliA.Extension.Clamp01(System.Single)
  - AngeliA.Extension.ClampDisorder(System.Int32,System.Int32,System.Int32)
  - AngeliA.Extension.ClampPositionInside(AngeliA.IRect@,AngeliA.IRect)
  - AngeliA.Extension.Clamped(AngeliA.Int2,AngeliA.IRect)
  - AngeliA.Extension.Clamped(AngeliA.Int2,System.Int32,System.Int32,System.Int32,System.Int32)
  - AngeliA.Extension.Clockwise(AngeliA.Direction4)
  - AngeliA.Extension.Clockwise(AngeliA.Direction5)
  - AngeliA.Extension.Clockwise(AngeliA.Direction8,System.Int32)
  - AngeliA.Extension.CompleteInside(AngeliA.FRect,AngeliA.FRect)
  - AngeliA.Extension.CompleteInside(AngeliA.IRect,AngeliA.IRect)
  - AngeliA.Extension.Contains(AngeliA.IRect,System.Int32,System.Int32)
  - AngeliA.Extension.CornerInside(AngeliA.IRect,AngeliA.Alignment,System.Int32)
  - AngeliA.Extension.CornerInside(AngeliA.IRect,AngeliA.Alignment,System.Int32,System.Int32)
  - AngeliA.Extension.CornerOutside(AngeliA.IRect,AngeliA.Alignment,System.Int32)
  - AngeliA.Extension.CornerOutside(AngeliA.IRect,AngeliA.Alignment,System.Int32,System.Int32)
  - AngeliA.Extension.DigitCount(System.Int32)
  - AngeliA.Extension.Distance(System.Int32,System.Int32)
  - AngeliA.Extension.Dodge(AngeliA.IRect,AngeliA.IRect,System.Nullable{AngeliA.IRect}@,System.Nullable{AngeliA.IRect}@,System.Nullable{AngeliA.IRect}@,System.Nullable{AngeliA.IRect}@)
  - AngeliA.Extension.Edge(AngeliA.FRect,AngeliA.Direction4,System.Single)
  - AngeliA.Extension.EdgeExact(AngeliA.IRect,AngeliA.Direction4,System.Int32)
  - AngeliA.Extension.EdgeInside(AngeliA.IRect,AngeliA.Direction4,System.Int32)
  - AngeliA.Extension.EdgeInsideDown(AngeliA.IRect,System.Int32)
  - AngeliA.Extension.EdgeInsideLeft(AngeliA.IRect,System.Int32)
  - AngeliA.Extension.EdgeInsideRight(AngeliA.IRect,System.Int32)
  - AngeliA.Extension.EdgeInsideSquareDown(AngeliA.IRect)
  - AngeliA.Extension.EdgeInsideSquareLeft(AngeliA.IRect)
  - AngeliA.Extension.EdgeInsideSquareRight(AngeliA.IRect)
  - AngeliA.Extension.EdgeInsideSquareUp(AngeliA.IRect)
  - AngeliA.Extension.EdgeInsideUp(AngeliA.IRect,System.Int32)
  - AngeliA.Extension.EdgeOutside(AngeliA.IRect,AngeliA.Direction4,System.Int32)
  - AngeliA.Extension.EdgeOutsideDown(AngeliA.IRect,System.Int32)
  - AngeliA.Extension.EdgeOutsideLeft(AngeliA.IRect,System.Int32)
  - AngeliA.Extension.EdgeOutsideRight(AngeliA.IRect,System.Int32)
  - AngeliA.Extension.EdgeOutsideUp(AngeliA.IRect,System.Int32)
  - AngeliA.Extension.EnumLength(System.Type)
  - AngeliA.Extension.Envelope(AngeliA.FRect,System.Single)
  - AngeliA.Extension.Envelope(AngeliA.IRect,System.Int32,System.Int32)
  - AngeliA.Extension.Expand(AngeliA.FRect,System.Single)
  - AngeliA.Extension.Expand(AngeliA.FRect,System.Single,System.Single,System.Single,System.Single)
  - AngeliA.Extension.Expand(AngeliA.IRect,AngeliA.Int4)
  - AngeliA.Extension.Expand(AngeliA.IRect,System.Int32)
  - AngeliA.Extension.Expand(AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32)
  - AngeliA.Extension.ExpandHorizontal(AngeliA.IRect,System.Int32)
  - AngeliA.Extension.ExpandToIRect(AngeliA.FRect)
  - AngeliA.Extension.ExpandVertical(AngeliA.IRect,System.Int32)
  - AngeliA.Extension.FillWithNewValue``1(``0[])
  - AngeliA.Extension.FillWithValue``1(``0[],``0)
  - AngeliA.Extension.Fit(AngeliA.FRect,System.Single,System.Single,System.Single)
  - AngeliA.Extension.Fit(AngeliA.IRect,AngeliA.AngeSprite,System.Int32,System.Int32)
  - AngeliA.Extension.Fit(AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32)
  - AngeliA.Extension.FlipHorizontal(AngeliA.IRect@)
  - AngeliA.Extension.FlipNegative(AngeliA.IRect@)
  - AngeliA.Extension.FlipVertical(AngeliA.IRect@)
  - AngeliA.Extension.Floor(System.Single)
  - AngeliA.Extension.FloorToInt(AngeliA.Float2)
  - AngeliA.Extension.FloorToInt(System.Single)
  - AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
  - AngeliA.Extension.ForAllFields``1(System.Type,System.Reflection.BindingFlags,System.Boolean)
  - AngeliA.Extension.ForAllProperties``1(System.Object)
  - AngeliA.Extension.ForAllStaticFieldValue``1(System.Type,System.Reflection.BindingFlags,System.Boolean)
  - AngeliA.Extension.ForceSquare(AngeliA.IRect,System.Boolean,System.Boolean,System.Boolean)
  - AngeliA.Extension.GetBit(System.Byte,System.Int32)
  - AngeliA.Extension.GetBit(System.Int32,System.Int32)
  - AngeliA.Extension.GetBit(System.UInt16,System.Int32)
  - AngeliA.Extension.GetBit(System.UInt32,System.Int32)
  - AngeliA.Extension.GetBit(System.UInt64,System.Int32)
  - AngeliA.Extension.GetClamp(AngeliA.FRect,AngeliA.FRect)
  - AngeliA.Extension.GetDirection(AngeliA.Gamekey)
  - AngeliA.Extension.GetFlipHorizontal(AngeliA.IRect)
  - AngeliA.Extension.GetFlipNegative(AngeliA.IRect)
  - AngeliA.Extension.GetFlipVertical(AngeliA.IRect)
  - AngeliA.Extension.GetHorizontalDirection(AngeliA.Direction5)
  - AngeliA.Extension.GetReadOnlySpan``1(``0[])
  - AngeliA.Extension.GetRotation(AngeliA.Direction4)
  - AngeliA.Extension.GetRotation(AngeliA.Direction8)
  - AngeliA.Extension.GetRotation(AngeliA.Float2)
  - AngeliA.Extension.GetRotation(AngeliA.Int2)
  - AngeliA.Extension.GetSpan``1(System.Collections.Generic.List{``0})
  - AngeliA.Extension.GetSpan``1(``0[])
  - AngeliA.Extension.GetTypePath(System.Type,System.Type)
  - AngeliA.Extension.GetVerticalDirection(AngeliA.Direction5)
  - AngeliA.Extension.GreaterOrAlmost(System.Single,System.Single)
  - AngeliA.Extension.GreaterOrEquel(System.Int32,System.Int32)
  - AngeliA.Extension.GreaterOrEquel(System.Int64,System.Int64)
  - AngeliA.Extension.GreaterOrEquelThanZero(System.Int32)
  - AngeliA.Extension.HorizontalMidHalf(AngeliA.IRect)
  - AngeliA.Extension.InLength(System.Int32,System.Int32)
  - AngeliA.Extension.InRangeExclude(System.Int32,System.Int32,System.Int32)
  - AngeliA.Extension.InRangeInclude(System.Int32,System.Int32,System.Int32)
  - AngeliA.Extension.Inside(AngeliA.Float2,AngeliA.Float2,AngeliA.Float2)
  - AngeliA.Extension.Inside(AngeliA.Float2,System.Single,System.Single,System.Single,System.Single)
  - AngeliA.Extension.Inside01(AngeliA.Float2)
  - AngeliA.Extension.Intersection(AngeliA.IRect,AngeliA.IRect)
  - AngeliA.Extension.InvokeSafe(System.Action)
  - AngeliA.Extension.InvokeSafe``1(System.Action{``0},``0)
  - AngeliA.Extension.InvokeSafe``2(System.Action{``0,``1},``0,``1)
  - AngeliA.Extension.InvokeSafe``3(System.Action{``0,``1,``2},``0,``1,``2)
  - AngeliA.Extension.IsBottom(AngeliA.Alignment)
  - AngeliA.Extension.IsBottom(AngeliA.Direction8)
  - AngeliA.Extension.IsHorizontal(AngeliA.Direction4)
  - AngeliA.Extension.IsHorizontal(AngeliA.Direction5)
  - AngeliA.Extension.IsHorizontal(AngeliA.Direction8)
  - AngeliA.Extension.IsLeft(AngeliA.Alignment)
  - AngeliA.Extension.IsLeft(AngeliA.Direction8)
  - AngeliA.Extension.IsLyingDown(AngeliA.CharacterAnimationType)
  - AngeliA.Extension.IsMidX(AngeliA.Alignment)
  - AngeliA.Extension.IsMidY(AngeliA.Alignment)
  - AngeliA.Extension.IsNotSame(AngeliA.IRect,AngeliA.IRect)
  - AngeliA.Extension.IsPositive(AngeliA.Direction4)
  - AngeliA.Extension.IsPositive(AngeliA.Direction5)
  - AngeliA.Extension.IsPositive(AngeliA.Direction8)
  - AngeliA.Extension.IsRight(AngeliA.Alignment)
  - AngeliA.Extension.IsRight(AngeliA.Direction8)
  - AngeliA.Extension.IsSame(AngeliA.Color32,AngeliA.Color32,System.Boolean)
  - AngeliA.Extension.IsSame(AngeliA.IRect,AngeliA.IRect)
  - AngeliA.Extension.IsTilted(AngeliA.Direction8)
  - AngeliA.Extension.IsTop(AngeliA.Alignment)
  - AngeliA.Extension.IsTop(AngeliA.Direction8)
  - AngeliA.Extension.IsVertical(AngeliA.Direction4)
  - AngeliA.Extension.IsVertical(AngeliA.Direction5)
  - AngeliA.Extension.IsVertical(AngeliA.Direction8)
  - AngeliA.Extension.JoinArray``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.Char)
  - AngeliA.Extension.LeftHalf(AngeliA.IRect)
  - AngeliA.Extension.LerpTo(AngeliA.IRect,AngeliA.IRect,System.Int32)
  - AngeliA.Extension.LerpTo(AngeliA.IRect,AngeliA.IRect,System.Single)
  - AngeliA.Extension.LerpTo(System.Int32,System.Int32,System.Int32)
  - AngeliA.Extension.LerpTo(System.Int32,System.Int32,System.Single)
  - AngeliA.Extension.LerpWithGap(System.Single,System.Single,System.Single,System.Single)
  - AngeliA.Extension.LessOrAlmost(System.Single,System.Single)
  - AngeliA.Extension.LessOrEquel(System.Int32,System.Int32)
  - AngeliA.Extension.LessOrEquelThanZero(System.Int32)
  - AngeliA.Extension.LookDifferent(AngeliA.Color32,AngeliA.Color32)
  - AngeliA.Extension.MidLeft(AngeliA.IRect)
  - AngeliA.Extension.MidRight(AngeliA.IRect)
  - AngeliA.Extension.MouseInside(AngeliA.IRect)
  - AngeliA.Extension.MoveTowards(AngeliA.Int2,AngeliA.Int2,AngeliA.Int2)
  - AngeliA.Extension.MoveTowards(AngeliA.Int2,AngeliA.Int2,System.Int32)
  - AngeliA.Extension.MoveTowards(System.Int32,System.Int32,System.Int32)
  - AngeliA.Extension.MoveTowards(System.Int32,System.Int32,System.Int32,System.Int32)
  - AngeliA.Extension.Mult(AngeliA.Color32,AngeliA.Color32)
  - AngeliA.Extension.Next``1(``0)
  - AngeliA.Extension.Normal(AngeliA.Alignment)
  - AngeliA.Extension.Normal(AngeliA.Direction4)
  - AngeliA.Extension.Normal(AngeliA.Direction5)
  - AngeliA.Extension.Normal(AngeliA.Direction8)
  - AngeliA.Extension.NotAlmost(AngeliA.FRect,AngeliA.FRect)
  - AngeliA.Extension.NotAlmost(AngeliA.Float2,AngeliA.Float2)
  - AngeliA.Extension.NotAlmost(AngeliA.Float3,AngeliA.Float3)
  - AngeliA.Extension.NotAlmost(System.Single,System.Single)
  - AngeliA.Extension.NotAlmostZero(System.Single)
  - AngeliA.Extension.NotEnd(System.IO.BinaryReader)
  - AngeliA.Extension.Opposite(AngeliA.Direction3)
  - AngeliA.Extension.Opposite(AngeliA.Direction4)
  - AngeliA.Extension.Opposite(AngeliA.Direction5)
  - AngeliA.Extension.Opposite(AngeliA.Direction8)
  - AngeliA.Extension.PartHorizontal(AngeliA.IRect,System.Int32,System.Int32)
  - AngeliA.Extension.PartVertical(AngeliA.IRect,System.Int32,System.Int32)
  - AngeliA.Extension.PingPong(System.Int32,System.Int32)
  - AngeliA.Extension.PingPong(System.Int32,System.Int32,System.Int32)
  - AngeliA.Extension.Pixels_to_Bytes(AngeliA.Color32[])
  - AngeliA.Extension.Prev``1(``0)
  - AngeliA.Extension.ResizeFrom(AngeliA.FRect,System.Single,System.Single,System.Single,System.Single)
  - AngeliA.Extension.ResizeFrom(AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32)
  - AngeliA.Extension.ReverseClamp(System.Int32,System.Int32,System.Int32)
  - AngeliA.Extension.RightHalf(AngeliA.IRect)
  - AngeliA.Extension.Rotate(AngeliA.Float2,System.Single)
  - AngeliA.Extension.Rotate(AngeliA.Float3,System.Single)
  - AngeliA.Extension.Round(System.Single)
  - AngeliA.Extension.RoundToInt(AngeliA.Float2)
  - AngeliA.Extension.RoundToInt(System.Single)
  - AngeliA.Extension.ScaleFrom(AngeliA.FRect,System.Single,System.Single,System.Single)
  - AngeliA.Extension.ScaleFrom(AngeliA.IRect,System.Int32,System.Int32,System.Int32)
  - AngeliA.Extension.ScaleFrom(AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32)
  - AngeliA.Extension.ScaleFrom(AngeliA.IRect,System.Single,System.Int32,System.Int32)
  - AngeliA.Extension.ScaleFrom(AngeliA.IRect,System.Single,System.Single,System.Int32,System.Int32)
  - AngeliA.Extension.SetBit(System.Byte@,System.Int32,System.Boolean)
  - AngeliA.Extension.SetBit(System.Int32@,System.Int32,System.Boolean)
  - AngeliA.Extension.SetBit(System.UInt32@,System.Int32,System.Boolean)
  - AngeliA.Extension.SetBit(System.UInt64@,System.Int32,System.Boolean)
  - AngeliA.Extension.SetMinMax(AngeliA.IRect@,System.Int32,System.Int32,System.Int32,System.Int32)
  - AngeliA.Extension.Shift(AngeliA.FRect,System.Single,System.Single)
  - AngeliA.Extension.Shift(AngeliA.IRect,AngeliA.Int2)
  - AngeliA.Extension.Shift(AngeliA.IRect,System.Int32,System.Int32)
  - AngeliA.Extension.Shift(AngeliA.Int2,System.Int32,System.Int32)
  - AngeliA.Extension.ShiftX(AngeliA.Int2,System.Int32)
  - AngeliA.Extension.ShiftY(AngeliA.Int2,System.Int32)
  - AngeliA.Extension.Shrink(AngeliA.FRect,System.Single)
  - AngeliA.Extension.Shrink(AngeliA.FRect,System.Single,System.Single,System.Single,System.Single)
  - AngeliA.Extension.Shrink(AngeliA.IRect,AngeliA.Int4)
  - AngeliA.Extension.Shrink(AngeliA.IRect,System.Int32)
  - AngeliA.Extension.Shrink(AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32)
  - AngeliA.Extension.ShrinkDown(AngeliA.IRect,System.Int32)
  - AngeliA.Extension.ShrinkLeft(AngeliA.IRect,System.Int32)
  - AngeliA.Extension.ShrinkRight(AngeliA.IRect,System.Int32)
  - AngeliA.Extension.ShrinkUp(AngeliA.IRect,System.Int32)
  - AngeliA.Extension.Sign(System.Boolean)
  - AngeliA.Extension.Sign(System.Int32)
  - AngeliA.Extension.Sign3(System.Int32)
  - AngeliA.Extension.SlideDown(AngeliA.IRect@,System.Int32)
  - AngeliA.Extension.SlideLeft(AngeliA.IRect@,System.Int32)
  - AngeliA.Extension.SlideRight(AngeliA.IRect@,System.Int32)
  - AngeliA.Extension.SlideUp(AngeliA.IRect@,System.Int32)
  - AngeliA.Extension.StartsWith(System.String,System.Char,System.Char)
  - AngeliA.Extension.StartsWith_IgnoreWhiteSpace(System.String,System.Char)
  - AngeliA.Extension.StartsWith_IgnoreWhiteSpace(System.String,System.Char,System.Int32@)
  - AngeliA.Extension.ToAlignment(AngeliA.Direction4)
  - AngeliA.Extension.ToAlignment(AngeliA.Direction5)
  - AngeliA.Extension.ToColor32(AngeliA.ColorF)
  - AngeliA.Extension.ToColorF(AngeliA.Color32)
  - AngeliA.Extension.ToDirection4(AngeliA.Direction5,AngeliA.Direction4)
  - AngeliA.Extension.ToDirection5(AngeliA.Direction4)
  - AngeliA.Extension.ToDirection8(AngeliA.Direction4)
  - AngeliA.Extension.ToFRect(AngeliA.IRect)
  - AngeliA.Extension.ToGlobal(AngeliA.IRect)
  - AngeliA.Extension.ToGlobal(AngeliA.Int2)
  - AngeliA.Extension.ToGlobal(AngeliA.Int3)
  - AngeliA.Extension.ToGlobal(System.Int32)
  - AngeliA.Extension.ToIRect(AngeliA.FRect)
  - AngeliA.Extension.ToStringWithDoubleQuotes(System.String)
  - AngeliA.Extension.ToStringWithDoubleQuotes(System.Text.StringBuilder)
  - AngeliA.Extension.ToUnifyGlobal(AngeliA.Int2)
  - AngeliA.Extension.ToUnifyGlobal(AngeliA.Int3)
  - AngeliA.Extension.ToUnifyGlobal(System.Int32)
  - AngeliA.Extension.ToUnit(AngeliA.IRect)
  - AngeliA.Extension.ToUnit(AngeliA.Int2)
  - AngeliA.Extension.ToUnit(AngeliA.Int3)
  - AngeliA.Extension.ToUnit(System.Int32)
  - AngeliA.Extension.ToUnit(System.Int32,System.Int32@)
  - AngeliA.Extension.ToVector3Int(AngeliA.Int2,System.Int32)
  - AngeliA.Extension.TopHalf(AngeliA.IRect)
  - AngeliA.Extension.TopLeft(AngeliA.FRect)
  - AngeliA.Extension.TopLeft(AngeliA.IRect)
  - AngeliA.Extension.TopMid(AngeliA.IRect)
  - AngeliA.Extension.TopRight(AngeliA.FRect)
  - AngeliA.Extension.TopRight(AngeliA.IRect)
  - AngeliA.Extension.TrimEnd_IfEndWith(System.String,System.String,System.Char[])
  - AngeliA.Extension.TrimEnd_Numbers(System.String)
  - AngeliA.Extension.TrimEnd_NumbersEmpty(System.String)
  - AngeliA.Extension.TrimEnd_NumbersEmpty_(System.String)
  - AngeliA.Extension.TrimStart_Numbers(System.String)
  - AngeliA.Extension.TrimWhiteForStartAndEnd(System.String)
  - AngeliA.Extension.TryGetDirection8(AngeliA.Int2,AngeliA.Direction8@)
  - AngeliA.Extension.UCeil(System.Int32,System.Int32)
  - AngeliA.Extension.UCeil(System.Single,System.Single)
  - AngeliA.Extension.UDivide(AngeliA.IRect,System.Int32)
  - AngeliA.Extension.UDivide(AngeliA.Int2,System.Int32)
  - AngeliA.Extension.UDivide(System.Int32,System.Int32)
  - AngeliA.Extension.UFloor(System.Int32,System.Int32)
  - AngeliA.Extension.UFloor(System.Single,System.Single)
  - AngeliA.Extension.UMod(System.Int32,System.Int32)
  - AngeliA.Extension.UMod(System.Int64,System.Int64)
  - AngeliA.Extension.UMod(System.Single,System.Single)
  - AngeliA.Extension.VerticalMidHalf(AngeliA.IRect)
  - AngeliA.Extension.WithNewA(AngeliA.Color32,System.Int32)
  - AngeliA.Extension.WithNewA(AngeliA.ColorF,System.Single)
  - AngeliA.Extension.WithNewHeight(AngeliA.IRect,System.Int32)
  - AngeliA.Extension.WithNewWidth(AngeliA.IRect,System.Int32)
  langs:
  - csharp
  - vb
  name: Extension
  nameWithType: Extension
  fullName: AngeliA.Extension
  type: Class
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Extension
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 13
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Extension method for AngeliA projects
  example: []
  syntax:
    content: public static class Extension
    content.vb: Public Module Extension
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: AngeliA.Extension.AngeName(System.Type)
  commentId: M:AngeliA.Extension.AngeName(System.Type)
  id: AngeName(System.Type)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: AngeName(Type)
  nameWithType: Extension.AngeName(Type)
  fullName: AngeliA.Extension.AngeName(System.Type)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: AngeName
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 24
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Name of this type that used inside AngeliA
  example: []
  syntax:
    content: public static string AngeName(this Type type)
    parameters:
    - id: type
      type: System.Type
    return:
      type: System.String
    content.vb: Public Shared Function AngeName(type As Type) As String
  overload: AngeliA.Extension.AngeName*
- uid: AngeliA.Extension.AngeHash(System.Type)
  commentId: M:AngeliA.Extension.AngeHash(System.Type)
  id: AngeHash(System.Type)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: AngeHash(Type)
  nameWithType: Extension.AngeHash(Type)
  fullName: AngeliA.Extension.AngeHash(System.Type)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: AngeHash
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 33
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Hash code that used inside AngeliA
  example: []
  syntax:
    content: public static int AngeHash(this Type type)
    parameters:
    - id: type
      type: System.Type
    return:
      type: System.Int32
    content.vb: Public Shared Function AngeHash(type As Type) As Integer
  overload: AngeliA.Extension.AngeHash*
- uid: AngeliA.Extension.AngeHash(System.String)
  commentId: M:AngeliA.Extension.AngeHash(System.String)
  id: AngeHash(System.String)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: AngeHash(string)
  nameWithType: Extension.AngeHash(string)
  fullName: AngeliA.Extension.AngeHash(string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: AngeHash
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 38
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Hash code that used inside AngeliA
  example: []
  syntax:
    content: public static int AngeHash(this string str)
    parameters:
    - id: str
      type: System.String
    return:
      type: System.Int32
    content.vb: Public Shared Function AngeHash(str As String) As Integer
  overload: AngeliA.Extension.AngeHash*
  nameWithType.vb: Extension.AngeHash(String)
  fullName.vb: AngeliA.Extension.AngeHash(String)
  name.vb: AngeHash(String)
- uid: AngeliA.Extension.AngeHash(System.String,System.Int32,System.Int32)
  commentId: M:AngeliA.Extension.AngeHash(System.String,System.Int32,System.Int32)
  id: AngeHash(System.String,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: AngeHash(string, int, int)
  nameWithType: Extension.AngeHash(string, int, int)
  fullName: AngeliA.Extension.AngeHash(string, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: AngeHash
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 54
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Hash code that used inside AngeliA
  example: []
  syntax:
    content: public static int AngeHash(this string str, int start, int length)
    parameters:
    - id: str
      type: System.String
    - id: start
      type: System.Int32
    - id: length
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function AngeHash(str As String, start As Integer, length As Integer) As Integer
  overload: AngeliA.Extension.AngeHash*
  nameWithType.vb: Extension.AngeHash(String, Integer, Integer)
  fullName.vb: AngeliA.Extension.AngeHash(String, Integer, Integer)
  name.vb: AngeHash(String, Integer, Integer)
- uid: AngeliA.Extension.AngeReverseHash(System.Char[],System.Int32,System.Int32)
  commentId: M:AngeliA.Extension.AngeReverseHash(System.Char[],System.Int32,System.Int32)
  id: AngeReverseHash(System.Char[],System.Int32,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: AngeReverseHash(char[], int, int)
  nameWithType: Extension.AngeReverseHash(char[], int, int)
  fullName: AngeliA.Extension.AngeReverseHash(char[], int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: AngeReverseHash
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 72
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Hash code that used inside AngeliA but generate with the reversed string data
  example: []
  syntax:
    content: public static int AngeReverseHash(this char[] arr, int start, int length)
    parameters:
    - id: arr
      type: System.Char[]
    - id: start
      type: System.Int32
    - id: length
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function AngeReverseHash(arr As Char(), start As Integer, length As Integer) As Integer
  overload: AngeliA.Extension.AngeReverseHash*
  nameWithType.vb: Extension.AngeReverseHash(Char(), Integer, Integer)
  fullName.vb: AngeliA.Extension.AngeReverseHash(Char(), Integer, Integer)
  name.vb: AngeReverseHash(Char(), Integer, Integer)
- uid: AngeliA.Extension.IsLyingDown(AngeliA.CharacterAnimationType)
  commentId: M:AngeliA.Extension.IsLyingDown(AngeliA.CharacterAnimationType)
  id: IsLyingDown(AngeliA.CharacterAnimationType)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: IsLyingDown(CharacterAnimationType)
  nameWithType: Extension.IsLyingDown(CharacterAnimationType)
  fullName: AngeliA.Extension.IsLyingDown(AngeliA.CharacterAnimationType)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IsLyingDown
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 92
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: True if the character should be rendered lying down
  example: []
  syntax:
    content: public static bool IsLyingDown(this CharacterAnimationType aniType)
    parameters:
    - id: aniType
      type: AngeliA.CharacterAnimationType
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsLyingDown(aniType As CharacterAnimationType) As Boolean
  overload: AngeliA.Extension.IsLyingDown*
- uid: AngeliA.Extension.MouseInside(AngeliA.IRect)
  commentId: M:AngeliA.Extension.MouseInside(AngeliA.IRect)
  id: MouseInside(AngeliA.IRect)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: MouseInside(IRect)
  nameWithType: Extension.MouseInside(IRect)
  fullName: AngeliA.Extension.MouseInside(AngeliA.IRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: MouseInside
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 97
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: True if mouse currently inside the given rectangle
  example: []
  syntax:
    content: public static bool MouseInside(this IRect rect)
    parameters:
    - id: rect
      type: AngeliA.IRect
    return:
      type: System.Boolean
    content.vb: Public Shared Function MouseInside(rect As IRect) As Boolean
  overload: AngeliA.Extension.MouseInside*
- uid: AngeliA.Extension.GetSpan``1(System.Collections.Generic.List{``0})
  commentId: M:AngeliA.Extension.GetSpan``1(System.Collections.Generic.List{``0})
  id: GetSpan``1(System.Collections.Generic.List{``0})
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: GetSpan<T>(List<T>)
  nameWithType: Extension.GetSpan<T>(List<T>)
  fullName: AngeliA.Extension.GetSpan<T>(System.Collections.Generic.List<T>)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetSpan
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 99
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Span<T> GetSpan<T>(this List<T> list)
    parameters:
    - id: list
      type: System.Collections.Generic.List{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Span{{T}}
    content.vb: Public Shared Function GetSpan(Of T)(list As List(Of T)) As Span(Of T)
  overload: AngeliA.Extension.GetSpan*
  nameWithType.vb: Extension.GetSpan(Of T)(List(Of T))
  fullName.vb: AngeliA.Extension.GetSpan(Of T)(System.Collections.Generic.List(Of T))
  name.vb: GetSpan(Of T)(List(Of T))
- uid: AngeliA.Extension.GetSpan``1(``0[])
  commentId: M:AngeliA.Extension.GetSpan``1(``0[])
  id: GetSpan``1(``0[])
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: GetSpan<T>(T[])
  nameWithType: Extension.GetSpan<T>(T[])
  fullName: AngeliA.Extension.GetSpan<T>(T[])
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetSpan
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 100
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Span<T> GetSpan<T>(this T[] arr)
    parameters:
    - id: arr
      type: '{T}[]'
    typeParameters:
    - id: T
    return:
      type: System.Span{{T}}
    content.vb: Public Shared Function GetSpan(Of T)(arr As T()) As Span(Of T)
  overload: AngeliA.Extension.GetSpan*
  nameWithType.vb: Extension.GetSpan(Of T)(T())
  fullName.vb: AngeliA.Extension.GetSpan(Of T)(T())
  name.vb: GetSpan(Of T)(T())
- uid: AngeliA.Extension.GetReadOnlySpan``1(``0[])
  commentId: M:AngeliA.Extension.GetReadOnlySpan``1(``0[])
  id: GetReadOnlySpan``1(``0[])
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: GetReadOnlySpan<T>(T[])
  nameWithType: Extension.GetReadOnlySpan<T>(T[])
  fullName: AngeliA.Extension.GetReadOnlySpan<T>(T[])
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetReadOnlySpan
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 101
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static ReadOnlySpan<T> GetReadOnlySpan<T>(this T[] arr)
    parameters:
    - id: arr
      type: '{T}[]'
    typeParameters:
    - id: T
    return:
      type: System.ReadOnlySpan{{T}}
    content.vb: Public Shared Function GetReadOnlySpan(Of T)(arr As T()) As ReadOnlySpan(Of T)
  overload: AngeliA.Extension.GetReadOnlySpan*
  nameWithType.vb: Extension.GetReadOnlySpan(Of T)(T())
  fullName.vb: AngeliA.Extension.GetReadOnlySpan(Of T)(T())
  name.vb: GetReadOnlySpan(Of T)(T())
- uid: AngeliA.Extension.ToStringWithDoubleQuotes(System.String)
  commentId: M:AngeliA.Extension.ToStringWithDoubleQuotes(System.String)
  id: ToStringWithDoubleQuotes(System.String)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: ToStringWithDoubleQuotes(string)
  nameWithType: Extension.ToStringWithDoubleQuotes(string)
  fullName: AngeliA.Extension.ToStringWithDoubleQuotes(string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ToStringWithDoubleQuotes
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 103
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static string ToStringWithDoubleQuotes(this string str)
    parameters:
    - id: str
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function ToStringWithDoubleQuotes(str As String) As String
  overload: AngeliA.Extension.ToStringWithDoubleQuotes*
  nameWithType.vb: Extension.ToStringWithDoubleQuotes(String)
  fullName.vb: AngeliA.Extension.ToStringWithDoubleQuotes(String)
  name.vb: ToStringWithDoubleQuotes(String)
- uid: AngeliA.Extension.ToStringWithDoubleQuotes(System.Text.StringBuilder)
  commentId: M:AngeliA.Extension.ToStringWithDoubleQuotes(System.Text.StringBuilder)
  id: ToStringWithDoubleQuotes(System.Text.StringBuilder)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: ToStringWithDoubleQuotes(StringBuilder)
  nameWithType: Extension.ToStringWithDoubleQuotes(StringBuilder)
  fullName: AngeliA.Extension.ToStringWithDoubleQuotes(System.Text.StringBuilder)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ToStringWithDoubleQuotes
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 104
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static string ToStringWithDoubleQuotes(this StringBuilder builder)
    parameters:
    - id: builder
      type: System.Text.StringBuilder
    return:
      type: System.String
    content.vb: Public Shared Function ToStringWithDoubleQuotes(builder As StringBuilder) As String
  overload: AngeliA.Extension.ToStringWithDoubleQuotes*
- uid: AngeliA.Extension.AppendWithDoubleQuotes(System.Text.StringBuilder,System.String)
  commentId: M:AngeliA.Extension.AppendWithDoubleQuotes(System.Text.StringBuilder,System.String)
  id: AppendWithDoubleQuotes(System.Text.StringBuilder,System.String)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: AppendWithDoubleQuotes(StringBuilder, string)
  nameWithType: Extension.AppendWithDoubleQuotes(StringBuilder, string)
  fullName: AngeliA.Extension.AppendWithDoubleQuotes(System.Text.StringBuilder, string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: AppendWithDoubleQuotes
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 106
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void AppendWithDoubleQuotes(this StringBuilder builder, string content)
    parameters:
    - id: builder
      type: System.Text.StringBuilder
    - id: content
      type: System.String
    content.vb: Public Shared Sub AppendWithDoubleQuotes(builder As StringBuilder, content As String)
  overload: AngeliA.Extension.AppendWithDoubleQuotes*
  nameWithType.vb: Extension.AppendWithDoubleQuotes(StringBuilder, String)
  fullName.vb: AngeliA.Extension.AppendWithDoubleQuotes(System.Text.StringBuilder, String)
  name.vb: AppendWithDoubleQuotes(StringBuilder, String)
- uid: AngeliA.Extension.Pixels_to_Bytes(AngeliA.Color32[])
  commentId: M:AngeliA.Extension.Pixels_to_Bytes(AngeliA.Color32[])
  id: Pixels_to_Bytes(AngeliA.Color32[])
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Pixels_to_Bytes(Color32[])
  nameWithType: Extension.Pixels_to_Bytes(Color32[])
  fullName: AngeliA.Extension.Pixels_to_Bytes(AngeliA.Color32[])
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Pixels_to_Bytes
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 112
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static byte[] Pixels_to_Bytes(this Color32[] pixels)
    parameters:
    - id: pixels
      type: AngeliA.Color32[]
    return:
      type: System.Byte[]
    content.vb: Public Shared Function Pixels_to_Bytes(pixels As Color32()) As Byte()
  overload: AngeliA.Extension.Pixels_to_Bytes*
  nameWithType.vb: Extension.Pixels_to_Bytes(Color32())
  fullName.vb: AngeliA.Extension.Pixels_to_Bytes(AngeliA.Color32())
  name.vb: Pixels_to_Bytes(Color32())
- uid: AngeliA.Extension.Bytes_to_Pixels(System.Byte[],System.Int32,System.Int32)
  commentId: M:AngeliA.Extension.Bytes_to_Pixels(System.Byte[],System.Int32,System.Int32)
  id: Bytes_to_Pixels(System.Byte[],System.Int32,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Bytes_to_Pixels(byte[], int, int)
  nameWithType: Extension.Bytes_to_Pixels(byte[], int, int)
  fullName: AngeliA.Extension.Bytes_to_Pixels(byte[], int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Bytes_to_Pixels
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 127
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Color32[] Bytes_to_Pixels(this byte[] bytes, int width, int height)
    parameters:
    - id: bytes
      type: System.Byte[]
    - id: width
      type: System.Int32
    - id: height
      type: System.Int32
    return:
      type: AngeliA.Color32[]
    content.vb: Public Shared Function Bytes_to_Pixels(bytes As Byte(), width As Integer, height As Integer) As Color32()
  overload: AngeliA.Extension.Bytes_to_Pixels*
  nameWithType.vb: Extension.Bytes_to_Pixels(Byte(), Integer, Integer)
  fullName.vb: AngeliA.Extension.Bytes_to_Pixels(Byte(), Integer, Integer)
  name.vb: Bytes_to_Pixels(Byte(), Integer, Integer)
- uid: AngeliA.Extension.GetBit(System.UInt64,System.Int32)
  commentId: M:AngeliA.Extension.GetBit(System.UInt64,System.Int32)
  id: GetBit(System.UInt64,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: GetBit(ulong, int)
  nameWithType: Extension.GetBit(ulong, int)
  fullName: AngeliA.Extension.GetBit(ulong, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetBit
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 145
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool GetBit(this ulong value, int index)
    parameters:
    - id: value
      type: System.UInt64
    - id: index
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function GetBit(value As ULong, index As Integer) As Boolean
  overload: AngeliA.Extension.GetBit*
  nameWithType.vb: Extension.GetBit(ULong, Integer)
  fullName.vb: AngeliA.Extension.GetBit(ULong, Integer)
  name.vb: GetBit(ULong, Integer)
- uid: AngeliA.Extension.GetBit(System.Int32,System.Int32)
  commentId: M:AngeliA.Extension.GetBit(System.Int32,System.Int32)
  id: GetBit(System.Int32,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: GetBit(int, int)
  nameWithType: Extension.GetBit(int, int)
  fullName: AngeliA.Extension.GetBit(int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetBit
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 146
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool GetBit(this int value, int index)
    parameters:
    - id: value
      type: System.Int32
    - id: index
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function GetBit(value As Integer, index As Integer) As Boolean
  overload: AngeliA.Extension.GetBit*
  nameWithType.vb: Extension.GetBit(Integer, Integer)
  fullName.vb: AngeliA.Extension.GetBit(Integer, Integer)
  name.vb: GetBit(Integer, Integer)
- uid: AngeliA.Extension.GetBit(System.UInt32,System.Int32)
  commentId: M:AngeliA.Extension.GetBit(System.UInt32,System.Int32)
  id: GetBit(System.UInt32,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: GetBit(uint, int)
  nameWithType: Extension.GetBit(uint, int)
  fullName: AngeliA.Extension.GetBit(uint, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetBit
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 147
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool GetBit(this uint value, int index)
    parameters:
    - id: value
      type: System.UInt32
    - id: index
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function GetBit(value As UInteger, index As Integer) As Boolean
  overload: AngeliA.Extension.GetBit*
  nameWithType.vb: Extension.GetBit(UInteger, Integer)
  fullName.vb: AngeliA.Extension.GetBit(UInteger, Integer)
  name.vb: GetBit(UInteger, Integer)
- uid: AngeliA.Extension.GetBit(System.UInt16,System.Int32)
  commentId: M:AngeliA.Extension.GetBit(System.UInt16,System.Int32)
  id: GetBit(System.UInt16,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: GetBit(ushort, int)
  nameWithType: Extension.GetBit(ushort, int)
  fullName: AngeliA.Extension.GetBit(ushort, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetBit
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 148
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool GetBit(this ushort value, int index)
    parameters:
    - id: value
      type: System.UInt16
    - id: index
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function GetBit(value As UShort, index As Integer) As Boolean
  overload: AngeliA.Extension.GetBit*
  nameWithType.vb: Extension.GetBit(UShort, Integer)
  fullName.vb: AngeliA.Extension.GetBit(UShort, Integer)
  name.vb: GetBit(UShort, Integer)
- uid: AngeliA.Extension.GetBit(System.Byte,System.Int32)
  commentId: M:AngeliA.Extension.GetBit(System.Byte,System.Int32)
  id: GetBit(System.Byte,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: GetBit(byte, int)
  nameWithType: Extension.GetBit(byte, int)
  fullName: AngeliA.Extension.GetBit(byte, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetBit
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 149
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool GetBit(this byte value, int index)
    parameters:
    - id: value
      type: System.Byte
    - id: index
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function GetBit(value As Byte, index As Integer) As Boolean
  overload: AngeliA.Extension.GetBit*
  nameWithType.vb: Extension.GetBit(Byte, Integer)
  fullName.vb: AngeliA.Extension.GetBit(Byte, Integer)
  name.vb: GetBit(Byte, Integer)
- uid: AngeliA.Extension.SetBit(System.UInt64@,System.Int32,System.Boolean)
  commentId: M:AngeliA.Extension.SetBit(System.UInt64@,System.Int32,System.Boolean)
  id: SetBit(System.UInt64@,System.Int32,System.Boolean)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: SetBit(ref ulong, int, bool)
  nameWithType: Extension.SetBit(ref ulong, int, bool)
  fullName: AngeliA.Extension.SetBit(ref ulong, int, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SetBit
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 151
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void SetBit(this ref ulong value, int index, bool bitValue)
    parameters:
    - id: value
      type: System.UInt64
    - id: index
      type: System.Int32
    - id: bitValue
      type: System.Boolean
    content.vb: Public Shared Sub SetBit(value As ULong, index As Integer, bitValue As Boolean)
  overload: AngeliA.Extension.SetBit*
  nameWithType.vb: Extension.SetBit(ULong, Integer, Boolean)
  fullName.vb: AngeliA.Extension.SetBit(ULong, Integer, Boolean)
  name.vb: SetBit(ULong, Integer, Boolean)
- uid: AngeliA.Extension.SetBit(System.Int32@,System.Int32,System.Boolean)
  commentId: M:AngeliA.Extension.SetBit(System.Int32@,System.Int32,System.Boolean)
  id: SetBit(System.Int32@,System.Int32,System.Boolean)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: SetBit(ref int, int, bool)
  nameWithType: Extension.SetBit(ref int, int, bool)
  fullName: AngeliA.Extension.SetBit(ref int, int, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SetBit
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 156
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void SetBit(this ref int value, int index, bool bitValue)
    parameters:
    - id: value
      type: System.Int32
    - id: index
      type: System.Int32
    - id: bitValue
      type: System.Boolean
    content.vb: Public Shared Sub SetBit(value As Integer, index As Integer, bitValue As Boolean)
  overload: AngeliA.Extension.SetBit*
  nameWithType.vb: Extension.SetBit(Integer, Integer, Boolean)
  fullName.vb: AngeliA.Extension.SetBit(Integer, Integer, Boolean)
  name.vb: SetBit(Integer, Integer, Boolean)
- uid: AngeliA.Extension.SetBit(System.UInt32@,System.Int32,System.Boolean)
  commentId: M:AngeliA.Extension.SetBit(System.UInt32@,System.Int32,System.Boolean)
  id: SetBit(System.UInt32@,System.Int32,System.Boolean)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: SetBit(ref uint, int, bool)
  nameWithType: Extension.SetBit(ref uint, int, bool)
  fullName: AngeliA.Extension.SetBit(ref uint, int, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SetBit
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 161
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void SetBit(this ref uint value, int index, bool bitValue)
    parameters:
    - id: value
      type: System.UInt32
    - id: index
      type: System.Int32
    - id: bitValue
      type: System.Boolean
    content.vb: Public Shared Sub SetBit(value As UInteger, index As Integer, bitValue As Boolean)
  overload: AngeliA.Extension.SetBit*
  nameWithType.vb: Extension.SetBit(UInteger, Integer, Boolean)
  fullName.vb: AngeliA.Extension.SetBit(UInteger, Integer, Boolean)
  name.vb: SetBit(UInteger, Integer, Boolean)
- uid: AngeliA.Extension.SetBit(System.Byte@,System.Int32,System.Boolean)
  commentId: M:AngeliA.Extension.SetBit(System.Byte@,System.Int32,System.Boolean)
  id: SetBit(System.Byte@,System.Int32,System.Boolean)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: SetBit(ref byte, int, bool)
  nameWithType: Extension.SetBit(ref byte, int, bool)
  fullName: AngeliA.Extension.SetBit(ref byte, int, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SetBit
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 166
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void SetBit(this ref byte value, int index, bool bitValue)
    parameters:
    - id: value
      type: System.Byte
    - id: index
      type: System.Int32
    - id: bitValue
      type: System.Boolean
    content.vb: Public Shared Sub SetBit(value As Byte, index As Integer, bitValue As Boolean)
  overload: AngeliA.Extension.SetBit*
  nameWithType.vb: Extension.SetBit(Byte, Integer, Boolean)
  fullName.vb: AngeliA.Extension.SetBit(Byte, Integer, Boolean)
  name.vb: SetBit(Byte, Integer, Boolean)
- uid: AngeliA.Extension.Almost(System.Single,System.Single)
  commentId: M:AngeliA.Extension.Almost(System.Single,System.Single)
  id: Almost(System.Single,System.Single)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Almost(float, float)
  nameWithType: Extension.Almost(float, float)
  fullName: AngeliA.Extension.Almost(float, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Almost
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 172
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool Almost(this float a, float b)
    parameters:
    - id: a
      type: System.Single
    - id: b
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Shared Function Almost(a As Single, b As Single) As Boolean
  overload: AngeliA.Extension.Almost*
  nameWithType.vb: Extension.Almost(Single, Single)
  fullName.vb: AngeliA.Extension.Almost(Single, Single)
  name.vb: Almost(Single, Single)
- uid: AngeliA.Extension.AlmostZero(System.Single)
  commentId: M:AngeliA.Extension.AlmostZero(System.Single)
  id: AlmostZero(System.Single)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: AlmostZero(float)
  nameWithType: Extension.AlmostZero(float)
  fullName: AngeliA.Extension.AlmostZero(float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: AlmostZero
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 173
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool AlmostZero(this float a)
    parameters:
    - id: a
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Shared Function AlmostZero(a As Single) As Boolean
  overload: AngeliA.Extension.AlmostZero*
  nameWithType.vb: Extension.AlmostZero(Single)
  fullName.vb: AngeliA.Extension.AlmostZero(Single)
  name.vb: AlmostZero(Single)
- uid: AngeliA.Extension.NotAlmost(System.Single,System.Single)
  commentId: M:AngeliA.Extension.NotAlmost(System.Single,System.Single)
  id: NotAlmost(System.Single,System.Single)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: NotAlmost(float, float)
  nameWithType: Extension.NotAlmost(float, float)
  fullName: AngeliA.Extension.NotAlmost(float, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: NotAlmost
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 174
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool NotAlmost(this float a, float b)
    parameters:
    - id: a
      type: System.Single
    - id: b
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Shared Function NotAlmost(a As Single, b As Single) As Boolean
  overload: AngeliA.Extension.NotAlmost*
  nameWithType.vb: Extension.NotAlmost(Single, Single)
  fullName.vb: AngeliA.Extension.NotAlmost(Single, Single)
  name.vb: NotAlmost(Single, Single)
- uid: AngeliA.Extension.NotAlmostZero(System.Single)
  commentId: M:AngeliA.Extension.NotAlmostZero(System.Single)
  id: NotAlmostZero(System.Single)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: NotAlmostZero(float)
  nameWithType: Extension.NotAlmostZero(float)
  fullName: AngeliA.Extension.NotAlmostZero(float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: NotAlmostZero
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 175
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool NotAlmostZero(this float a)
    parameters:
    - id: a
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Shared Function NotAlmostZero(a As Single) As Boolean
  overload: AngeliA.Extension.NotAlmostZero*
  nameWithType.vb: Extension.NotAlmostZero(Single)
  fullName.vb: AngeliA.Extension.NotAlmostZero(Single)
  name.vb: NotAlmostZero(Single)
- uid: AngeliA.Extension.GreaterOrAlmost(System.Single,System.Single)
  commentId: M:AngeliA.Extension.GreaterOrAlmost(System.Single,System.Single)
  id: GreaterOrAlmost(System.Single,System.Single)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: GreaterOrAlmost(float, float)
  nameWithType: Extension.GreaterOrAlmost(float, float)
  fullName: AngeliA.Extension.GreaterOrAlmost(float, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GreaterOrAlmost
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 177
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool GreaterOrAlmost(this float a, float b)
    parameters:
    - id: a
      type: System.Single
    - id: b
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Shared Function GreaterOrAlmost(a As Single, b As Single) As Boolean
  overload: AngeliA.Extension.GreaterOrAlmost*
  nameWithType.vb: Extension.GreaterOrAlmost(Single, Single)
  fullName.vb: AngeliA.Extension.GreaterOrAlmost(Single, Single)
  name.vb: GreaterOrAlmost(Single, Single)
- uid: AngeliA.Extension.LessOrAlmost(System.Single,System.Single)
  commentId: M:AngeliA.Extension.LessOrAlmost(System.Single,System.Single)
  id: LessOrAlmost(System.Single,System.Single)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: LessOrAlmost(float, float)
  nameWithType: Extension.LessOrAlmost(float, float)
  fullName: AngeliA.Extension.LessOrAlmost(float, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: LessOrAlmost
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 178
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool LessOrAlmost(this float a, float b)
    parameters:
    - id: a
      type: System.Single
    - id: b
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Shared Function LessOrAlmost(a As Single, b As Single) As Boolean
  overload: AngeliA.Extension.LessOrAlmost*
  nameWithType.vb: Extension.LessOrAlmost(Single, Single)
  fullName.vb: AngeliA.Extension.LessOrAlmost(Single, Single)
  name.vb: LessOrAlmost(Single, Single)
- uid: AngeliA.Extension.UDivide(System.Int32,System.Int32)
  commentId: M:AngeliA.Extension.UDivide(System.Int32,System.Int32)
  id: UDivide(System.Int32,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: UDivide(int, int)
  nameWithType: Extension.UDivide(int, int)
  fullName: AngeliA.Extension.UDivide(int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: UDivide
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 180
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int UDivide(this int value, int step)
    parameters:
    - id: value
      type: System.Int32
    - id: step
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function UDivide(value As Integer, [step] As Integer) As Integer
  overload: AngeliA.Extension.UDivide*
  nameWithType.vb: Extension.UDivide(Integer, Integer)
  fullName.vb: AngeliA.Extension.UDivide(Integer, Integer)
  name.vb: UDivide(Integer, Integer)
- uid: AngeliA.Extension.UMod(System.Int32,System.Int32)
  commentId: M:AngeliA.Extension.UMod(System.Int32,System.Int32)
  id: UMod(System.Int32,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: UMod(int, int)
  nameWithType: Extension.UMod(int, int)
  fullName: AngeliA.Extension.UMod(int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: UMod
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 185
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int UMod(this int value, int step)
    parameters:
    - id: value
      type: System.Int32
    - id: step
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function UMod(value As Integer, [step] As Integer) As Integer
  overload: AngeliA.Extension.UMod*
  nameWithType.vb: Extension.UMod(Integer, Integer)
  fullName.vb: AngeliA.Extension.UMod(Integer, Integer)
  name.vb: UMod(Integer, Integer)
- uid: AngeliA.Extension.UMod(System.Int64,System.Int64)
  commentId: M:AngeliA.Extension.UMod(System.Int64,System.Int64)
  id: UMod(System.Int64,System.Int64)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: UMod(long, long)
  nameWithType: Extension.UMod(long, long)
  fullName: AngeliA.Extension.UMod(long, long)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: UMod
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 190
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static long UMod(this long value, long step)
    parameters:
    - id: value
      type: System.Int64
    - id: step
      type: System.Int64
    return:
      type: System.Int64
    content.vb: Public Shared Function UMod(value As Long, [step] As Long) As Long
  overload: AngeliA.Extension.UMod*
  nameWithType.vb: Extension.UMod(Long, Long)
  fullName.vb: AngeliA.Extension.UMod(Long, Long)
  name.vb: UMod(Long, Long)
- uid: AngeliA.Extension.UCeil(System.Int32,System.Int32)
  commentId: M:AngeliA.Extension.UCeil(System.Int32,System.Int32)
  id: UCeil(System.Int32,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: UCeil(int, int)
  nameWithType: Extension.UCeil(int, int)
  fullName: AngeliA.Extension.UCeil(int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: UCeil
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 195
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int UCeil(this int value, int step)
    parameters:
    - id: value
      type: System.Int32
    - id: step
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function UCeil(value As Integer, [step] As Integer) As Integer
  overload: AngeliA.Extension.UCeil*
  nameWithType.vb: Extension.UCeil(Integer, Integer)
  fullName.vb: AngeliA.Extension.UCeil(Integer, Integer)
  name.vb: UCeil(Integer, Integer)
- uid: AngeliA.Extension.UFloor(System.Int32,System.Int32)
  commentId: M:AngeliA.Extension.UFloor(System.Int32,System.Int32)
  id: UFloor(System.Int32,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: UFloor(int, int)
  nameWithType: Extension.UFloor(int, int)
  fullName: AngeliA.Extension.UFloor(int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: UFloor
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 200
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int UFloor(this int value, int step)
    parameters:
    - id: value
      type: System.Int32
    - id: step
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function UFloor(value As Integer, [step] As Integer) As Integer
  overload: AngeliA.Extension.UFloor*
  nameWithType.vb: Extension.UFloor(Integer, Integer)
  fullName.vb: AngeliA.Extension.UFloor(Integer, Integer)
  name.vb: UFloor(Integer, Integer)
- uid: AngeliA.Extension.Distance(System.Int32,System.Int32)
  commentId: M:AngeliA.Extension.Distance(System.Int32,System.Int32)
  id: Distance(System.Int32,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Distance(int, int)
  nameWithType: Extension.Distance(int, int)
  fullName: AngeliA.Extension.Distance(int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Distance
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 205
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int Distance(this int value, int target)
    parameters:
    - id: value
      type: System.Int32
    - id: target
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function Distance(value As Integer, target As Integer) As Integer
  overload: AngeliA.Extension.Distance*
  nameWithType.vb: Extension.Distance(Integer, Integer)
  fullName.vb: AngeliA.Extension.Distance(Integer, Integer)
  name.vb: Distance(Integer, Integer)
- uid: AngeliA.Extension.CeilDivide(System.Int32,System.Int32)
  commentId: M:AngeliA.Extension.CeilDivide(System.Int32,System.Int32)
  id: CeilDivide(System.Int32,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: CeilDivide(int, int)
  nameWithType: Extension.CeilDivide(int, int)
  fullName: AngeliA.Extension.CeilDivide(int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: CeilDivide
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 207
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int CeilDivide(this int value, int target)
    parameters:
    - id: value
      type: System.Int32
    - id: target
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function CeilDivide(value As Integer, target As Integer) As Integer
  overload: AngeliA.Extension.CeilDivide*
  nameWithType.vb: Extension.CeilDivide(Integer, Integer)
  fullName.vb: AngeliA.Extension.CeilDivide(Integer, Integer)
  name.vb: CeilDivide(Integer, Integer)
- uid: AngeliA.Extension.Abs(System.Int32)
  commentId: M:AngeliA.Extension.Abs(System.Int32)
  id: Abs(System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Abs(int)
  nameWithType: Extension.Abs(int)
  fullName: AngeliA.Extension.Abs(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Abs
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 209
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int Abs(this int value)
    parameters:
    - id: value
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function Abs(value As Integer) As Integer
  overload: AngeliA.Extension.Abs*
  nameWithType.vb: Extension.Abs(Integer)
  fullName.vb: AngeliA.Extension.Abs(Integer)
  name.vb: Abs(Integer)
- uid: AngeliA.Extension.Abs(System.Single)
  commentId: M:AngeliA.Extension.Abs(System.Single)
  id: Abs(System.Single)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Abs(float)
  nameWithType: Extension.Abs(float)
  fullName: AngeliA.Extension.Abs(float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Abs
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 210
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static float Abs(this float value)
    parameters:
    - id: value
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function Abs(value As Single) As Single
  overload: AngeliA.Extension.Abs*
  nameWithType.vb: Extension.Abs(Single)
  fullName.vb: AngeliA.Extension.Abs(Single)
  name.vb: Abs(Single)
- uid: AngeliA.Extension.RoundToInt(System.Single)
  commentId: M:AngeliA.Extension.RoundToInt(System.Single)
  id: RoundToInt(System.Single)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: RoundToInt(float)
  nameWithType: Extension.RoundToInt(float)
  fullName: AngeliA.Extension.RoundToInt(float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: RoundToInt
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 212
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int RoundToInt(this float a)
    parameters:
    - id: a
      type: System.Single
    return:
      type: System.Int32
    content.vb: Public Shared Function RoundToInt(a As Single) As Integer
  overload: AngeliA.Extension.RoundToInt*
  nameWithType.vb: Extension.RoundToInt(Single)
  fullName.vb: AngeliA.Extension.RoundToInt(Single)
  name.vb: RoundToInt(Single)
- uid: AngeliA.Extension.CeilToInt(System.Single)
  commentId: M:AngeliA.Extension.CeilToInt(System.Single)
  id: CeilToInt(System.Single)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: CeilToInt(float)
  nameWithType: Extension.CeilToInt(float)
  fullName: AngeliA.Extension.CeilToInt(float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: CeilToInt
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 213
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int CeilToInt(this float a)
    parameters:
    - id: a
      type: System.Single
    return:
      type: System.Int32
    content.vb: Public Shared Function CeilToInt(a As Single) As Integer
  overload: AngeliA.Extension.CeilToInt*
  nameWithType.vb: Extension.CeilToInt(Single)
  fullName.vb: AngeliA.Extension.CeilToInt(Single)
  name.vb: CeilToInt(Single)
- uid: AngeliA.Extension.FloorToInt(System.Single)
  commentId: M:AngeliA.Extension.FloorToInt(System.Single)
  id: FloorToInt(System.Single)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: FloorToInt(float)
  nameWithType: Extension.FloorToInt(float)
  fullName: AngeliA.Extension.FloorToInt(float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: FloorToInt
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 214
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int FloorToInt(this float a)
    parameters:
    - id: a
      type: System.Single
    return:
      type: System.Int32
    content.vb: Public Shared Function FloorToInt(a As Single) As Integer
  overload: AngeliA.Extension.FloorToInt*
  nameWithType.vb: Extension.FloorToInt(Single)
  fullName.vb: AngeliA.Extension.FloorToInt(Single)
  name.vb: FloorToInt(Single)
- uid: AngeliA.Extension.Floor(System.Single)
  commentId: M:AngeliA.Extension.Floor(System.Single)
  id: Floor(System.Single)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Floor(float)
  nameWithType: Extension.Floor(float)
  fullName: AngeliA.Extension.Floor(float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Floor
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 215
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static float Floor(this float a)
    parameters:
    - id: a
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function Floor(a As Single) As Single
  overload: AngeliA.Extension.Floor*
  nameWithType.vb: Extension.Floor(Single)
  fullName.vb: AngeliA.Extension.Floor(Single)
  name.vb: Floor(Single)
- uid: AngeliA.Extension.Ceil(System.Single)
  commentId: M:AngeliA.Extension.Ceil(System.Single)
  id: Ceil(System.Single)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Ceil(float)
  nameWithType: Extension.Ceil(float)
  fullName: AngeliA.Extension.Ceil(float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Ceil
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 216
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static float Ceil(this float a)
    parameters:
    - id: a
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function Ceil(a As Single) As Single
  overload: AngeliA.Extension.Ceil*
  nameWithType.vb: Extension.Ceil(Single)
  fullName.vb: AngeliA.Extension.Ceil(Single)
  name.vb: Ceil(Single)
- uid: AngeliA.Extension.Round(System.Single)
  commentId: M:AngeliA.Extension.Round(System.Single)
  id: Round(System.Single)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Round(float)
  nameWithType: Extension.Round(float)
  fullName: AngeliA.Extension.Round(float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Round
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 217
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static float Round(this float a)
    parameters:
    - id: a
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function Round(a As Single) As Single
  overload: AngeliA.Extension.Round*
  nameWithType.vb: Extension.Round(Single)
  fullName.vb: AngeliA.Extension.Round(Single)
  name.vb: Round(Single)
- uid: AngeliA.Extension.UMod(System.Single,System.Single)
  commentId: M:AngeliA.Extension.UMod(System.Single,System.Single)
  id: UMod(System.Single,System.Single)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: UMod(float, float)
  nameWithType: Extension.UMod(float, float)
  fullName: AngeliA.Extension.UMod(float, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: UMod
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 220
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static float UMod(this float value, float gap)
    parameters:
    - id: value
      type: System.Single
    - id: gap
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function UMod(value As Single, gap As Single) As Single
  overload: AngeliA.Extension.UMod*
  nameWithType.vb: Extension.UMod(Single, Single)
  fullName.vb: AngeliA.Extension.UMod(Single, Single)
  name.vb: UMod(Single, Single)
- uid: AngeliA.Extension.UCeil(System.Single,System.Single)
  commentId: M:AngeliA.Extension.UCeil(System.Single,System.Single)
  id: UCeil(System.Single,System.Single)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: UCeil(float, float)
  nameWithType: Extension.UCeil(float, float)
  fullName: AngeliA.Extension.UCeil(float, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: UCeil
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 225
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static float UCeil(this float value, float gap)
    parameters:
    - id: value
      type: System.Single
    - id: gap
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function UCeil(value As Single, gap As Single) As Single
  overload: AngeliA.Extension.UCeil*
  nameWithType.vb: Extension.UCeil(Single, Single)
  fullName.vb: AngeliA.Extension.UCeil(Single, Single)
  name.vb: UCeil(Single, Single)
- uid: AngeliA.Extension.UFloor(System.Single,System.Single)
  commentId: M:AngeliA.Extension.UFloor(System.Single,System.Single)
  id: UFloor(System.Single,System.Single)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: UFloor(float, float)
  nameWithType: Extension.UFloor(float, float)
  fullName: AngeliA.Extension.UFloor(float, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: UFloor
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 229
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static float UFloor(this float value, float gap)
    parameters:
    - id: value
      type: System.Single
    - id: gap
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function UFloor(value As Single, gap As Single) As Single
  overload: AngeliA.Extension.UFloor*
  nameWithType.vb: Extension.UFloor(Single, Single)
  fullName.vb: AngeliA.Extension.UFloor(Single, Single)
  name.vb: UFloor(Single, Single)
- uid: AngeliA.Extension.ClampDisorder(System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Extension.ClampDisorder(System.Int32,System.Int32,System.Int32)
  id: ClampDisorder(System.Int32,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: ClampDisorder(int, int, int)
  nameWithType: Extension.ClampDisorder(int, int, int)
  fullName: AngeliA.Extension.ClampDisorder(int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ClampDisorder
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 234
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int ClampDisorder(this int a, int rangeA, int rangeB)
    parameters:
    - id: a
      type: System.Int32
    - id: rangeA
      type: System.Int32
    - id: rangeB
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function ClampDisorder(a As Integer, rangeA As Integer, rangeB As Integer) As Integer
  overload: AngeliA.Extension.ClampDisorder*
  nameWithType.vb: Extension.ClampDisorder(Integer, Integer, Integer)
  fullName.vb: AngeliA.Extension.ClampDisorder(Integer, Integer, Integer)
  name.vb: ClampDisorder(Integer, Integer, Integer)
- uid: AngeliA.Extension.Clamp(System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Extension.Clamp(System.Int32,System.Int32,System.Int32)
  id: Clamp(System.Int32,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Clamp(int, int, int)
  nameWithType: Extension.Clamp(int, int, int)
  fullName: AngeliA.Extension.Clamp(int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Clamp
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 241
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int Clamp(this int a, int min, int max)
    parameters:
    - id: a
      type: System.Int32
    - id: min
      type: System.Int32
    - id: max
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function Clamp(a As Integer, min As Integer, max As Integer) As Integer
  overload: AngeliA.Extension.Clamp*
  nameWithType.vb: Extension.Clamp(Integer, Integer, Integer)
  fullName.vb: AngeliA.Extension.Clamp(Integer, Integer, Integer)
  name.vb: Clamp(Integer, Integer, Integer)
- uid: AngeliA.Extension.ReverseClamp(System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Extension.ReverseClamp(System.Int32,System.Int32,System.Int32)
  id: ReverseClamp(System.Int32,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: ReverseClamp(int, int, int)
  nameWithType: Extension.ReverseClamp(int, int, int)
  fullName: AngeliA.Extension.ReverseClamp(int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ReverseClamp
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 242
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int ReverseClamp(this int a, int min, int max)
    parameters:
    - id: a
      type: System.Int32
    - id: min
      type: System.Int32
    - id: max
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function ReverseClamp(a As Integer, min As Integer, max As Integer) As Integer
  overload: AngeliA.Extension.ReverseClamp*
  nameWithType.vb: Extension.ReverseClamp(Integer, Integer, Integer)
  fullName.vb: AngeliA.Extension.ReverseClamp(Integer, Integer, Integer)
  name.vb: ReverseClamp(Integer, Integer, Integer)
- uid: AngeliA.Extension.Clamp(System.Single,System.Single,System.Single)
  commentId: M:AngeliA.Extension.Clamp(System.Single,System.Single,System.Single)
  id: Clamp(System.Single,System.Single,System.Single)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Clamp(float, float, float)
  nameWithType: Extension.Clamp(float, float, float)
  fullName: AngeliA.Extension.Clamp(float, float, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Clamp
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 249
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static float Clamp(this float a, float min, float max)
    parameters:
    - id: a
      type: System.Single
    - id: min
      type: System.Single
    - id: max
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function Clamp(a As Single, min As Single, max As Single) As Single
  overload: AngeliA.Extension.Clamp*
  nameWithType.vb: Extension.Clamp(Single, Single, Single)
  fullName.vb: AngeliA.Extension.Clamp(Single, Single, Single)
  name.vb: Clamp(Single, Single, Single)
- uid: AngeliA.Extension.Clamp01(System.Single)
  commentId: M:AngeliA.Extension.Clamp01(System.Single)
  id: Clamp01(System.Single)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Clamp01(float)
  nameWithType: Extension.Clamp01(float)
  fullName: AngeliA.Extension.Clamp01(float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Clamp01
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 250
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static float Clamp01(this float value)
    parameters:
    - id: value
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function Clamp01(value As Single) As Single
  overload: AngeliA.Extension.Clamp01*
  nameWithType.vb: Extension.Clamp01(Single)
  fullName.vb: AngeliA.Extension.Clamp01(Single)
  name.vb: Clamp01(Single)
- uid: AngeliA.Extension.GreaterOrEquel(System.Int32,System.Int32)
  commentId: M:AngeliA.Extension.GreaterOrEquel(System.Int32,System.Int32)
  id: GreaterOrEquel(System.Int32,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: GreaterOrEquel(int, int)
  nameWithType: Extension.GreaterOrEquel(int, int)
  fullName: AngeliA.Extension.GreaterOrEquel(int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GreaterOrEquel
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 252
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int GreaterOrEquel(this int value, int target)
    parameters:
    - id: value
      type: System.Int32
    - id: target
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function GreaterOrEquel(value As Integer, target As Integer) As Integer
  overload: AngeliA.Extension.GreaterOrEquel*
  nameWithType.vb: Extension.GreaterOrEquel(Integer, Integer)
  fullName.vb: AngeliA.Extension.GreaterOrEquel(Integer, Integer)
  name.vb: GreaterOrEquel(Integer, Integer)
- uid: AngeliA.Extension.GreaterOrEquel(System.Int64,System.Int64)
  commentId: M:AngeliA.Extension.GreaterOrEquel(System.Int64,System.Int64)
  id: GreaterOrEquel(System.Int64,System.Int64)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: GreaterOrEquel(long, long)
  nameWithType: Extension.GreaterOrEquel(long, long)
  fullName: AngeliA.Extension.GreaterOrEquel(long, long)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GreaterOrEquel
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 253
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static long GreaterOrEquel(this long value, long target)
    parameters:
    - id: value
      type: System.Int64
    - id: target
      type: System.Int64
    return:
      type: System.Int64
    content.vb: Public Shared Function GreaterOrEquel(value As Long, target As Long) As Long
  overload: AngeliA.Extension.GreaterOrEquel*
  nameWithType.vb: Extension.GreaterOrEquel(Long, Long)
  fullName.vb: AngeliA.Extension.GreaterOrEquel(Long, Long)
  name.vb: GreaterOrEquel(Long, Long)
- uid: AngeliA.Extension.LessOrEquel(System.Int32,System.Int32)
  commentId: M:AngeliA.Extension.LessOrEquel(System.Int32,System.Int32)
  id: LessOrEquel(System.Int32,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: LessOrEquel(int, int)
  nameWithType: Extension.LessOrEquel(int, int)
  fullName: AngeliA.Extension.LessOrEquel(int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: LessOrEquel
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 254
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int LessOrEquel(this int value, int target)
    parameters:
    - id: value
      type: System.Int32
    - id: target
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function LessOrEquel(value As Integer, target As Integer) As Integer
  overload: AngeliA.Extension.LessOrEquel*
  nameWithType.vb: Extension.LessOrEquel(Integer, Integer)
  fullName.vb: AngeliA.Extension.LessOrEquel(Integer, Integer)
  name.vb: LessOrEquel(Integer, Integer)
- uid: AngeliA.Extension.GreaterOrEquelThanZero(System.Int32)
  commentId: M:AngeliA.Extension.GreaterOrEquelThanZero(System.Int32)
  id: GreaterOrEquelThanZero(System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: GreaterOrEquelThanZero(int)
  nameWithType: Extension.GreaterOrEquelThanZero(int)
  fullName: AngeliA.Extension.GreaterOrEquelThanZero(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GreaterOrEquelThanZero
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 256
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int GreaterOrEquelThanZero(this int value)
    parameters:
    - id: value
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function GreaterOrEquelThanZero(value As Integer) As Integer
  overload: AngeliA.Extension.GreaterOrEquelThanZero*
  nameWithType.vb: Extension.GreaterOrEquelThanZero(Integer)
  fullName.vb: AngeliA.Extension.GreaterOrEquelThanZero(Integer)
  name.vb: GreaterOrEquelThanZero(Integer)
- uid: AngeliA.Extension.LessOrEquelThanZero(System.Int32)
  commentId: M:AngeliA.Extension.LessOrEquelThanZero(System.Int32)
  id: LessOrEquelThanZero(System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: LessOrEquelThanZero(int)
  nameWithType: Extension.LessOrEquelThanZero(int)
  fullName: AngeliA.Extension.LessOrEquelThanZero(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: LessOrEquelThanZero
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 257
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int LessOrEquelThanZero(this int value)
    parameters:
    - id: value
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function LessOrEquelThanZero(value As Integer) As Integer
  overload: AngeliA.Extension.LessOrEquelThanZero*
  nameWithType.vb: Extension.LessOrEquelThanZero(Integer)
  fullName.vb: AngeliA.Extension.LessOrEquelThanZero(Integer)
  name.vb: LessOrEquelThanZero(Integer)
- uid: AngeliA.Extension.Sign(System.Int32)
  commentId: M:AngeliA.Extension.Sign(System.Int32)
  id: Sign(System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Sign(int)
  nameWithType: Extension.Sign(int)
  fullName: AngeliA.Extension.Sign(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Sign
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 259
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int Sign(this int i)
    parameters:
    - id: i
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function Sign(i As Integer) As Integer
  overload: AngeliA.Extension.Sign*
  nameWithType.vb: Extension.Sign(Integer)
  fullName.vb: AngeliA.Extension.Sign(Integer)
  name.vb: Sign(Integer)
- uid: AngeliA.Extension.Sign3(System.Int32)
  commentId: M:AngeliA.Extension.Sign3(System.Int32)
  id: Sign3(System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Sign3(int)
  nameWithType: Extension.Sign3(int)
  fullName: AngeliA.Extension.Sign3(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Sign3
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 260
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int Sign3(this int i)
    parameters:
    - id: i
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function Sign3(i As Integer) As Integer
  overload: AngeliA.Extension.Sign3*
  nameWithType.vb: Extension.Sign3(Integer)
  fullName.vb: AngeliA.Extension.Sign3(Integer)
  name.vb: Sign3(Integer)
- uid: AngeliA.Extension.MoveTowards(System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Extension.MoveTowards(System.Int32,System.Int32,System.Int32)
  id: MoveTowards(System.Int32,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: MoveTowards(int, int, int)
  nameWithType: Extension.MoveTowards(int, int, int)
  fullName: AngeliA.Extension.MoveTowards(int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: MoveTowards
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 262
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int MoveTowards(this int current, int target, int maxDelta)
    parameters:
    - id: current
      type: System.Int32
    - id: target
      type: System.Int32
    - id: maxDelta
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function MoveTowards(current As Integer, target As Integer, maxDelta As Integer) As Integer
  overload: AngeliA.Extension.MoveTowards*
  nameWithType.vb: Extension.MoveTowards(Integer, Integer, Integer)
  fullName.vb: AngeliA.Extension.MoveTowards(Integer, Integer, Integer)
  name.vb: MoveTowards(Integer, Integer, Integer)
- uid: AngeliA.Extension.MoveTowards(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Extension.MoveTowards(System.Int32,System.Int32,System.Int32,System.Int32)
  id: MoveTowards(System.Int32,System.Int32,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: MoveTowards(int, int, int, int)
  nameWithType: Extension.MoveTowards(int, int, int, int)
  fullName: AngeliA.Extension.MoveTowards(int, int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: MoveTowards
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 269
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int MoveTowards(this int current, int target, int positiveDelta, int negativeDelta)
    parameters:
    - id: current
      type: System.Int32
    - id: target
      type: System.Int32
    - id: positiveDelta
      type: System.Int32
    - id: negativeDelta
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function MoveTowards(current As Integer, target As Integer, positiveDelta As Integer, negativeDelta As Integer) As Integer
  overload: AngeliA.Extension.MoveTowards*
  nameWithType.vb: Extension.MoveTowards(Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.Extension.MoveTowards(Integer, Integer, Integer, Integer)
  name.vb: MoveTowards(Integer, Integer, Integer, Integer)
- uid: AngeliA.Extension.InRangeInclude(System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Extension.InRangeInclude(System.Int32,System.Int32,System.Int32)
  id: InRangeInclude(System.Int32,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: InRangeInclude(int, int, int)
  nameWithType: Extension.InRangeInclude(int, int, int)
  fullName: AngeliA.Extension.InRangeInclude(int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: InRangeInclude
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 274
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool InRangeInclude(this int value, int min, int max)
    parameters:
    - id: value
      type: System.Int32
    - id: min
      type: System.Int32
    - id: max
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function InRangeInclude(value As Integer, min As Integer, max As Integer) As Boolean
  overload: AngeliA.Extension.InRangeInclude*
  nameWithType.vb: Extension.InRangeInclude(Integer, Integer, Integer)
  fullName.vb: AngeliA.Extension.InRangeInclude(Integer, Integer, Integer)
  name.vb: InRangeInclude(Integer, Integer, Integer)
- uid: AngeliA.Extension.InRangeExclude(System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Extension.InRangeExclude(System.Int32,System.Int32,System.Int32)
  id: InRangeExclude(System.Int32,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: InRangeExclude(int, int, int)
  nameWithType: Extension.InRangeExclude(int, int, int)
  fullName: AngeliA.Extension.InRangeExclude(int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: InRangeExclude
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 275
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool InRangeExclude(this int value, int min, int max)
    parameters:
    - id: value
      type: System.Int32
    - id: min
      type: System.Int32
    - id: max
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function InRangeExclude(value As Integer, min As Integer, max As Integer) As Boolean
  overload: AngeliA.Extension.InRangeExclude*
  nameWithType.vb: Extension.InRangeExclude(Integer, Integer, Integer)
  fullName.vb: AngeliA.Extension.InRangeExclude(Integer, Integer, Integer)
  name.vb: InRangeExclude(Integer, Integer, Integer)
- uid: AngeliA.Extension.InLength(System.Int32,System.Int32)
  commentId: M:AngeliA.Extension.InLength(System.Int32,System.Int32)
  id: InLength(System.Int32,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: InLength(int, int)
  nameWithType: Extension.InLength(int, int)
  fullName: AngeliA.Extension.InLength(int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: InLength
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 276
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool InLength(this int value, int length)
    parameters:
    - id: value
      type: System.Int32
    - id: length
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function InLength(value As Integer, length As Integer) As Boolean
  overload: AngeliA.Extension.InLength*
  nameWithType.vb: Extension.InLength(Integer, Integer)
  fullName.vb: AngeliA.Extension.InLength(Integer, Integer)
  name.vb: InLength(Integer, Integer)
- uid: AngeliA.Extension.LerpTo(System.Int32,System.Int32,System.Single)
  commentId: M:AngeliA.Extension.LerpTo(System.Int32,System.Int32,System.Single)
  id: LerpTo(System.Int32,System.Int32,System.Single)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: LerpTo(int, int, float)
  nameWithType: Extension.LerpTo(int, int, float)
  fullName: AngeliA.Extension.LerpTo(int, int, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: LerpTo
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 278
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int LerpTo(this int from, int to, float lerp01)
    parameters:
    - id: from
      type: System.Int32
    - id: to
      type: System.Int32
    - id: lerp01
      type: System.Single
    return:
      type: System.Int32
    content.vb: Public Shared Function LerpTo(from As Integer, [to] As Integer, lerp01 As Single) As Integer
  overload: AngeliA.Extension.LerpTo*
  nameWithType.vb: Extension.LerpTo(Integer, Integer, Single)
  fullName.vb: AngeliA.Extension.LerpTo(Integer, Integer, Single)
  name.vb: LerpTo(Integer, Integer, Single)
- uid: AngeliA.Extension.LerpTo(System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Extension.LerpTo(System.Int32,System.Int32,System.Int32)
  id: LerpTo(System.Int32,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: LerpTo(int, int, int)
  nameWithType: Extension.LerpTo(int, int, int)
  fullName: AngeliA.Extension.LerpTo(int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: LerpTo
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 280
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int LerpTo(this int from, int to, int lerpRate)
    parameters:
    - id: from
      type: System.Int32
    - id: to
      type: System.Int32
    - id: lerpRate
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function LerpTo(from As Integer, [to] As Integer, lerpRate As Integer) As Integer
  overload: AngeliA.Extension.LerpTo*
  nameWithType.vb: Extension.LerpTo(Integer, Integer, Integer)
  fullName.vb: AngeliA.Extension.LerpTo(Integer, Integer, Integer)
  name.vb: LerpTo(Integer, Integer, Integer)
- uid: AngeliA.Extension.LerpWithGap(System.Single,System.Single,System.Single,System.Single)
  commentId: M:AngeliA.Extension.LerpWithGap(System.Single,System.Single,System.Single,System.Single)
  id: LerpWithGap(System.Single,System.Single,System.Single,System.Single)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: LerpWithGap(float, float, float, float)
  nameWithType: Extension.LerpWithGap(float, float, float, float)
  fullName: AngeliA.Extension.LerpWithGap(float, float, float, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: LerpWithGap
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 289
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static float LerpWithGap(this float from, float to, float lerp, float gap)
    parameters:
    - id: from
      type: System.Single
    - id: to
      type: System.Single
    - id: lerp
      type: System.Single
    - id: gap
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function LerpWithGap(from As Single, [to] As Single, lerp As Single, gap As Single) As Single
  overload: AngeliA.Extension.LerpWithGap*
  nameWithType.vb: Extension.LerpWithGap(Single, Single, Single, Single)
  fullName.vb: AngeliA.Extension.LerpWithGap(Single, Single, Single, Single)
  name.vb: LerpWithGap(Single, Single, Single, Single)
- uid: AngeliA.Extension.PingPong(System.Int32,System.Int32)
  commentId: M:AngeliA.Extension.PingPong(System.Int32,System.Int32)
  id: PingPong(System.Int32,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: PingPong(int, int)
  nameWithType: Extension.PingPong(int, int)
  fullName: AngeliA.Extension.PingPong(int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: PingPong
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 291
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int PingPong(this int value, int length)
    parameters:
    - id: value
      type: System.Int32
    - id: length
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function PingPong(value As Integer, length As Integer) As Integer
  overload: AngeliA.Extension.PingPong*
  nameWithType.vb: Extension.PingPong(Integer, Integer)
  fullName.vb: AngeliA.Extension.PingPong(Integer, Integer)
  name.vb: PingPong(Integer, Integer)
- uid: AngeliA.Extension.PingPong(System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Extension.PingPong(System.Int32,System.Int32,System.Int32)
  id: PingPong(System.Int32,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: PingPong(int, int, int)
  nameWithType: Extension.PingPong(int, int, int)
  fullName: AngeliA.Extension.PingPong(int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: PingPong
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 297
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int PingPong(this int value, int min, int max)
    parameters:
    - id: value
      type: System.Int32
    - id: min
      type: System.Int32
    - id: max
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function PingPong(value As Integer, min As Integer, max As Integer) As Integer
  overload: AngeliA.Extension.PingPong*
  nameWithType.vb: Extension.PingPong(Integer, Integer, Integer)
  fullName.vb: AngeliA.Extension.PingPong(Integer, Integer, Integer)
  name.vb: PingPong(Integer, Integer, Integer)
- uid: AngeliA.Extension.DigitCount(System.Int32)
  commentId: M:AngeliA.Extension.DigitCount(System.Int32)
  id: DigitCount(System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: DigitCount(int)
  nameWithType: Extension.DigitCount(int)
  fullName: AngeliA.Extension.DigitCount(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DigitCount
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 304
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int DigitCount(this int n)
    parameters:
    - id: n
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function DigitCount(n As Integer) As Integer
  overload: AngeliA.Extension.DigitCount*
  nameWithType.vb: Extension.DigitCount(Integer)
  fullName.vb: AngeliA.Extension.DigitCount(Integer)
  name.vb: DigitCount(Integer)
- uid: AngeliA.Extension.ToUnit(System.Int32)
  commentId: M:AngeliA.Extension.ToUnit(System.Int32)
  id: ToUnit(System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: ToUnit(int)
  nameWithType: Extension.ToUnit(int)
  fullName: AngeliA.Extension.ToUnit(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ToUnit
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 331
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int ToUnit(this int globalPos)
    parameters:
    - id: globalPos
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function ToUnit(globalPos As Integer) As Integer
  overload: AngeliA.Extension.ToUnit*
  nameWithType.vb: Extension.ToUnit(Integer)
  fullName.vb: AngeliA.Extension.ToUnit(Integer)
  name.vb: ToUnit(Integer)
- uid: AngeliA.Extension.ToUnit(System.Int32,System.Int32@)
  commentId: M:AngeliA.Extension.ToUnit(System.Int32,System.Int32@)
  id: ToUnit(System.Int32,System.Int32@)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: ToUnit(int, out int)
  nameWithType: Extension.ToUnit(int, out int)
  fullName: AngeliA.Extension.ToUnit(int, out int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ToUnit
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 332
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int ToUnit(this int globalPos, out int remainder)
    parameters:
    - id: globalPos
      type: System.Int32
    - id: remainder
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function ToUnit(globalPos As Integer, remainder As Integer) As Integer
  overload: AngeliA.Extension.ToUnit*
  nameWithType.vb: Extension.ToUnit(Integer, Integer)
  fullName.vb: AngeliA.Extension.ToUnit(Integer, Integer)
  name.vb: ToUnit(Integer, Integer)
- uid: AngeliA.Extension.ToGlobal(System.Int32)
  commentId: M:AngeliA.Extension.ToGlobal(System.Int32)
  id: ToGlobal(System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: ToGlobal(int)
  nameWithType: Extension.ToGlobal(int)
  fullName: AngeliA.Extension.ToGlobal(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ToGlobal
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 338
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int ToGlobal(this int unitPos)
    parameters:
    - id: unitPos
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function ToGlobal(unitPos As Integer) As Integer
  overload: AngeliA.Extension.ToGlobal*
  nameWithType.vb: Extension.ToGlobal(Integer)
  fullName.vb: AngeliA.Extension.ToGlobal(Integer)
  name.vb: ToGlobal(Integer)
- uid: AngeliA.Extension.ToUnifyGlobal(System.Int32)
  commentId: M:AngeliA.Extension.ToUnifyGlobal(System.Int32)
  id: ToUnifyGlobal(System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: ToUnifyGlobal(int)
  nameWithType: Extension.ToUnifyGlobal(int)
  fullName: AngeliA.Extension.ToUnifyGlobal(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ToUnifyGlobal
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 339
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int ToUnifyGlobal(this int globalPos)
    parameters:
    - id: globalPos
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function ToUnifyGlobal(globalPos As Integer) As Integer
  overload: AngeliA.Extension.ToUnifyGlobal*
  nameWithType.vb: Extension.ToUnifyGlobal(Integer)
  fullName.vb: AngeliA.Extension.ToUnifyGlobal(Integer)
  name.vb: ToUnifyGlobal(Integer)
- uid: AngeliA.Extension.ToUnit(AngeliA.Int2)
  commentId: M:AngeliA.Extension.ToUnit(AngeliA.Int2)
  id: ToUnit(AngeliA.Int2)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: ToUnit(Int2)
  nameWithType: Extension.ToUnit(Int2)
  fullName: AngeliA.Extension.ToUnit(AngeliA.Int2)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ToUnit
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 341
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Int2 ToUnit(this Int2 globalPos)
    parameters:
    - id: globalPos
      type: AngeliA.Int2
    return:
      type: AngeliA.Int2
    content.vb: Public Shared Function ToUnit(globalPos As Int2) As Int2
  overload: AngeliA.Extension.ToUnit*
- uid: AngeliA.Extension.ToGlobal(AngeliA.Int2)
  commentId: M:AngeliA.Extension.ToGlobal(AngeliA.Int2)
  id: ToGlobal(AngeliA.Int2)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: ToGlobal(Int2)
  nameWithType: Extension.ToGlobal(Int2)
  fullName: AngeliA.Extension.ToGlobal(AngeliA.Int2)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ToGlobal
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 342
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Int2 ToGlobal(this Int2 unitPos)
    parameters:
    - id: unitPos
      type: AngeliA.Int2
    return:
      type: AngeliA.Int2
    content.vb: Public Shared Function ToGlobal(unitPos As Int2) As Int2
  overload: AngeliA.Extension.ToGlobal*
- uid: AngeliA.Extension.ToUnifyGlobal(AngeliA.Int2)
  commentId: M:AngeliA.Extension.ToUnifyGlobal(AngeliA.Int2)
  id: ToUnifyGlobal(AngeliA.Int2)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: ToUnifyGlobal(Int2)
  nameWithType: Extension.ToUnifyGlobal(Int2)
  fullName: AngeliA.Extension.ToUnifyGlobal(AngeliA.Int2)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ToUnifyGlobal
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 343
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Int2 ToUnifyGlobal(this Int2 globalPos)
    parameters:
    - id: globalPos
      type: AngeliA.Int2
    return:
      type: AngeliA.Int2
    content.vb: Public Shared Function ToUnifyGlobal(globalPos As Int2) As Int2
  overload: AngeliA.Extension.ToUnifyGlobal*
- uid: AngeliA.Extension.ToUnit(AngeliA.Int3)
  commentId: M:AngeliA.Extension.ToUnit(AngeliA.Int3)
  id: ToUnit(AngeliA.Int3)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: ToUnit(Int3)
  nameWithType: Extension.ToUnit(Int3)
  fullName: AngeliA.Extension.ToUnit(AngeliA.Int3)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ToUnit
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 345
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Int3 ToUnit(this Int3 globalPos)
    parameters:
    - id: globalPos
      type: AngeliA.Int3
    return:
      type: AngeliA.Int3
    content.vb: Public Shared Function ToUnit(globalPos As Int3) As Int3
  overload: AngeliA.Extension.ToUnit*
- uid: AngeliA.Extension.ToGlobal(AngeliA.Int3)
  commentId: M:AngeliA.Extension.ToGlobal(AngeliA.Int3)
  id: ToGlobal(AngeliA.Int3)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: ToGlobal(Int3)
  nameWithType: Extension.ToGlobal(Int3)
  fullName: AngeliA.Extension.ToGlobal(AngeliA.Int3)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ToGlobal
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 346
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Int3 ToGlobal(this Int3 unitPos)
    parameters:
    - id: unitPos
      type: AngeliA.Int3
    return:
      type: AngeliA.Int3
    content.vb: Public Shared Function ToGlobal(unitPos As Int3) As Int3
  overload: AngeliA.Extension.ToGlobal*
- uid: AngeliA.Extension.ToUnifyGlobal(AngeliA.Int3)
  commentId: M:AngeliA.Extension.ToUnifyGlobal(AngeliA.Int3)
  id: ToUnifyGlobal(AngeliA.Int3)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: ToUnifyGlobal(Int3)
  nameWithType: Extension.ToUnifyGlobal(Int3)
  fullName: AngeliA.Extension.ToUnifyGlobal(AngeliA.Int3)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ToUnifyGlobal
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 347
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Int3 ToUnifyGlobal(this Int3 globalPos)
    parameters:
    - id: globalPos
      type: AngeliA.Int3
    return:
      type: AngeliA.Int3
    content.vb: Public Shared Function ToUnifyGlobal(globalPos As Int3) As Int3
  overload: AngeliA.Extension.ToUnifyGlobal*
- uid: AngeliA.Extension.ToUnit(AngeliA.IRect)
  commentId: M:AngeliA.Extension.ToUnit(AngeliA.IRect)
  id: ToUnit(AngeliA.IRect)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: ToUnit(IRect)
  nameWithType: Extension.ToUnit(IRect)
  fullName: AngeliA.Extension.ToUnit(AngeliA.IRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ToUnit
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 349
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect ToUnit(this IRect global)
    parameters:
    - id: global
      type: AngeliA.IRect
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function ToUnit([global] As IRect) As IRect
  overload: AngeliA.Extension.ToUnit*
- uid: AngeliA.Extension.ToGlobal(AngeliA.IRect)
  commentId: M:AngeliA.Extension.ToGlobal(AngeliA.IRect)
  id: ToGlobal(AngeliA.IRect)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: ToGlobal(IRect)
  nameWithType: Extension.ToGlobal(IRect)
  fullName: AngeliA.Extension.ToGlobal(AngeliA.IRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ToGlobal
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 350
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect ToGlobal(this IRect unit)
    parameters:
    - id: unit
      type: AngeliA.IRect
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function ToGlobal(unit As IRect) As IRect
  overload: AngeliA.Extension.ToGlobal*
- uid: AngeliA.Extension.Sign(System.Boolean)
  commentId: M:AngeliA.Extension.Sign(System.Boolean)
  id: Sign(System.Boolean)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Sign(bool)
  nameWithType: Extension.Sign(bool)
  fullName: AngeliA.Extension.Sign(bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Sign
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 352
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int Sign(this bool value)
    parameters:
    - id: value
      type: System.Boolean
    return:
      type: System.Int32
    content.vb: Public Shared Function Sign(value As Boolean) As Integer
  overload: AngeliA.Extension.Sign*
  nameWithType.vb: Extension.Sign(Boolean)
  fullName.vb: AngeliA.Extension.Sign(Boolean)
  name.vb: Sign(Boolean)
- uid: AngeliA.Extension.Clamp(AngeliA.Int2@,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Extension.Clamp(AngeliA.Int2@,System.Int32,System.Int32,System.Int32,System.Int32)
  id: Clamp(AngeliA.Int2@,System.Int32,System.Int32,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Clamp(ref Int2, int, int, int, int)
  nameWithType: Extension.Clamp(ref Int2, int, int, int, int)
  fullName: AngeliA.Extension.Clamp(ref AngeliA.Int2, int, int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Clamp
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 355
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void Clamp(this ref Int2 v, int minX, int minY, int maxX, int maxY)
    parameters:
    - id: v
      type: AngeliA.Int2
    - id: minX
      type: System.Int32
    - id: minY
      type: System.Int32
    - id: maxX
      type: System.Int32
    - id: maxY
      type: System.Int32
    content.vb: Public Shared Sub Clamp(v As Int2, minX As Integer, minY As Integer, maxX As Integer, maxY As Integer)
  overload: AngeliA.Extension.Clamp*
  nameWithType.vb: Extension.Clamp(Int2, Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.Extension.Clamp(AngeliA.Int2, Integer, Integer, Integer, Integer)
  name.vb: Clamp(Int2, Integer, Integer, Integer, Integer)
- uid: AngeliA.Extension.Clamp(AngeliA.Int2@,AngeliA.IRect)
  commentId: M:AngeliA.Extension.Clamp(AngeliA.Int2@,AngeliA.IRect)
  id: Clamp(AngeliA.Int2@,AngeliA.IRect)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Clamp(ref Int2, IRect)
  nameWithType: Extension.Clamp(ref Int2, IRect)
  fullName: AngeliA.Extension.Clamp(ref AngeliA.Int2, AngeliA.IRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Clamp
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 360
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void Clamp(this ref Int2 v, IRect range)
    parameters:
    - id: v
      type: AngeliA.Int2
    - id: range
      type: AngeliA.IRect
    content.vb: Public Shared Sub Clamp(v As Int2, range As IRect)
  overload: AngeliA.Extension.Clamp*
  nameWithType.vb: Extension.Clamp(Int2, IRect)
  fullName.vb: AngeliA.Extension.Clamp(AngeliA.Int2, AngeliA.IRect)
  name.vb: Clamp(Int2, IRect)
- uid: AngeliA.Extension.Clamp(AngeliA.Float2@,System.Single,System.Single,System.Single,System.Single)
  commentId: M:AngeliA.Extension.Clamp(AngeliA.Float2@,System.Single,System.Single,System.Single,System.Single)
  id: Clamp(AngeliA.Float2@,System.Single,System.Single,System.Single,System.Single)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Clamp(ref Float2, float, float, float, float)
  nameWithType: Extension.Clamp(ref Float2, float, float, float, float)
  fullName: AngeliA.Extension.Clamp(ref AngeliA.Float2, float, float, float, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Clamp
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 365
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void Clamp(this ref Float2 v, float minX, float minY, float maxX, float maxY)
    parameters:
    - id: v
      type: AngeliA.Float2
    - id: minX
      type: System.Single
    - id: minY
      type: System.Single
    - id: maxX
      type: System.Single
    - id: maxY
      type: System.Single
    content.vb: Public Shared Sub Clamp(v As Float2, minX As Single, minY As Single, maxX As Single, maxY As Single)
  overload: AngeliA.Extension.Clamp*
  nameWithType.vb: Extension.Clamp(Float2, Single, Single, Single, Single)
  fullName.vb: AngeliA.Extension.Clamp(AngeliA.Float2, Single, Single, Single, Single)
  name.vb: Clamp(Float2, Single, Single, Single, Single)
- uid: AngeliA.Extension.UDivide(AngeliA.Int2,System.Int32)
  commentId: M:AngeliA.Extension.UDivide(AngeliA.Int2,System.Int32)
  id: UDivide(AngeliA.Int2,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: UDivide(Int2, int)
  nameWithType: Extension.UDivide(Int2, int)
  fullName: AngeliA.Extension.UDivide(AngeliA.Int2, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: UDivide
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 370
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Int2 UDivide(this Int2 v, int gap)
    parameters:
    - id: v
      type: AngeliA.Int2
    - id: gap
      type: System.Int32
    return:
      type: AngeliA.Int2
    content.vb: Public Shared Function UDivide(v As Int2, gap As Integer) As Int2
  overload: AngeliA.Extension.UDivide*
  nameWithType.vb: Extension.UDivide(Int2, Integer)
  fullName.vb: AngeliA.Extension.UDivide(AngeliA.Int2, Integer)
  name.vb: UDivide(Int2, Integer)
- uid: AngeliA.Extension.Clamped(AngeliA.Int2,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Extension.Clamped(AngeliA.Int2,System.Int32,System.Int32,System.Int32,System.Int32)
  id: Clamped(AngeliA.Int2,System.Int32,System.Int32,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Clamped(Int2, int, int, int, int)
  nameWithType: Extension.Clamped(Int2, int, int, int, int)
  fullName: AngeliA.Extension.Clamped(AngeliA.Int2, int, int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Clamped
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 376
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Int2 Clamped(this Int2 v, int minX, int minY, int maxX, int maxY)
    parameters:
    - id: v
      type: AngeliA.Int2
    - id: minX
      type: System.Int32
    - id: minY
      type: System.Int32
    - id: maxX
      type: System.Int32
    - id: maxY
      type: System.Int32
    return:
      type: AngeliA.Int2
    content.vb: Public Shared Function Clamped(v As Int2, minX As Integer, minY As Integer, maxX As Integer, maxY As Integer) As Int2
  overload: AngeliA.Extension.Clamped*
  nameWithType.vb: Extension.Clamped(Int2, Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.Extension.Clamped(AngeliA.Int2, Integer, Integer, Integer, Integer)
  name.vb: Clamped(Int2, Integer, Integer, Integer, Integer)
- uid: AngeliA.Extension.Clamped(AngeliA.Int2,AngeliA.IRect)
  commentId: M:AngeliA.Extension.Clamped(AngeliA.Int2,AngeliA.IRect)
  id: Clamped(AngeliA.Int2,AngeliA.IRect)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Clamped(Int2, IRect)
  nameWithType: Extension.Clamped(Int2, IRect)
  fullName: AngeliA.Extension.Clamped(AngeliA.Int2, AngeliA.IRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Clamped
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 381
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Int2 Clamped(this Int2 v, IRect range)
    parameters:
    - id: v
      type: AngeliA.Int2
    - id: range
      type: AngeliA.IRect
    return:
      type: AngeliA.Int2
    content.vb: Public Shared Function Clamped(v As Int2, range As IRect) As Int2
  overload: AngeliA.Extension.Clamped*
- uid: AngeliA.Extension.ToVector3Int(AngeliA.Int2,System.Int32)
  commentId: M:AngeliA.Extension.ToVector3Int(AngeliA.Int2,System.Int32)
  id: ToVector3Int(AngeliA.Int2,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: ToVector3Int(Int2, int)
  nameWithType: Extension.ToVector3Int(Int2, int)
  fullName: AngeliA.Extension.ToVector3Int(AngeliA.Int2, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ToVector3Int
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 389
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Int3 ToVector3Int(this Int2 v, int z)
    parameters:
    - id: v
      type: AngeliA.Int2
    - id: z
      type: System.Int32
    return:
      type: AngeliA.Int3
    content.vb: Public Shared Function ToVector3Int(v As Int2, z As Integer) As Int3
  overload: AngeliA.Extension.ToVector3Int*
  nameWithType.vb: Extension.ToVector3Int(Int2, Integer)
  fullName.vb: AngeliA.Extension.ToVector3Int(AngeliA.Int2, Integer)
  name.vb: ToVector3Int(Int2, Integer)
- uid: AngeliA.Extension.MoveTowards(AngeliA.Int2,AngeliA.Int2,System.Int32)
  commentId: M:AngeliA.Extension.MoveTowards(AngeliA.Int2,AngeliA.Int2,System.Int32)
  id: MoveTowards(AngeliA.Int2,AngeliA.Int2,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: MoveTowards(Int2, Int2, int)
  nameWithType: Extension.MoveTowards(Int2, Int2, int)
  fullName: AngeliA.Extension.MoveTowards(AngeliA.Int2, AngeliA.Int2, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: MoveTowards
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 390
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Int2 MoveTowards(this Int2 v, Int2 target, int delta)
    parameters:
    - id: v
      type: AngeliA.Int2
    - id: target
      type: AngeliA.Int2
    - id: delta
      type: System.Int32
    return:
      type: AngeliA.Int2
    content.vb: Public Shared Function MoveTowards(v As Int2, target As Int2, delta As Integer) As Int2
  overload: AngeliA.Extension.MoveTowards*
  nameWithType.vb: Extension.MoveTowards(Int2, Int2, Integer)
  fullName.vb: AngeliA.Extension.MoveTowards(AngeliA.Int2, AngeliA.Int2, Integer)
  name.vb: MoveTowards(Int2, Int2, Integer)
- uid: AngeliA.Extension.MoveTowards(AngeliA.Int2,AngeliA.Int2,AngeliA.Int2)
  commentId: M:AngeliA.Extension.MoveTowards(AngeliA.Int2,AngeliA.Int2,AngeliA.Int2)
  id: MoveTowards(AngeliA.Int2,AngeliA.Int2,AngeliA.Int2)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: MoveTowards(Int2, Int2, Int2)
  nameWithType: Extension.MoveTowards(Int2, Int2, Int2)
  fullName: AngeliA.Extension.MoveTowards(AngeliA.Int2, AngeliA.Int2, AngeliA.Int2)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: MoveTowards
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 391
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Int2 MoveTowards(this Int2 v, Int2 target, Int2 delta)
    parameters:
    - id: v
      type: AngeliA.Int2
    - id: target
      type: AngeliA.Int2
    - id: delta
      type: AngeliA.Int2
    return:
      type: AngeliA.Int2
    content.vb: Public Shared Function MoveTowards(v As Int2, target As Int2, delta As Int2) As Int2
  overload: AngeliA.Extension.MoveTowards*
- uid: AngeliA.Extension.Shift(AngeliA.Int2,System.Int32,System.Int32)
  commentId: M:AngeliA.Extension.Shift(AngeliA.Int2,System.Int32,System.Int32)
  id: Shift(AngeliA.Int2,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Shift(Int2, int, int)
  nameWithType: Extension.Shift(Int2, int, int)
  fullName: AngeliA.Extension.Shift(AngeliA.Int2, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Shift
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 392
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Int2 Shift(this Int2 v, int x, int y)
    parameters:
    - id: v
      type: AngeliA.Int2
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    return:
      type: AngeliA.Int2
    content.vb: Public Shared Function Shift(v As Int2, x As Integer, y As Integer) As Int2
  overload: AngeliA.Extension.Shift*
  nameWithType.vb: Extension.Shift(Int2, Integer, Integer)
  fullName.vb: AngeliA.Extension.Shift(AngeliA.Int2, Integer, Integer)
  name.vb: Shift(Int2, Integer, Integer)
- uid: AngeliA.Extension.ShiftX(AngeliA.Int2,System.Int32)
  commentId: M:AngeliA.Extension.ShiftX(AngeliA.Int2,System.Int32)
  id: ShiftX(AngeliA.Int2,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: ShiftX(Int2, int)
  nameWithType: Extension.ShiftX(Int2, int)
  fullName: AngeliA.Extension.ShiftX(AngeliA.Int2, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ShiftX
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 393
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Int2 ShiftX(this Int2 v, int x)
    parameters:
    - id: v
      type: AngeliA.Int2
    - id: x
      type: System.Int32
    return:
      type: AngeliA.Int2
    content.vb: Public Shared Function ShiftX(v As Int2, x As Integer) As Int2
  overload: AngeliA.Extension.ShiftX*
  nameWithType.vb: Extension.ShiftX(Int2, Integer)
  fullName.vb: AngeliA.Extension.ShiftX(AngeliA.Int2, Integer)
  name.vb: ShiftX(Int2, Integer)
- uid: AngeliA.Extension.ShiftY(AngeliA.Int2,System.Int32)
  commentId: M:AngeliA.Extension.ShiftY(AngeliA.Int2,System.Int32)
  id: ShiftY(AngeliA.Int2,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: ShiftY(Int2, int)
  nameWithType: Extension.ShiftY(Int2, int)
  fullName: AngeliA.Extension.ShiftY(AngeliA.Int2, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ShiftY
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 394
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Int2 ShiftY(this Int2 v, int y)
    parameters:
    - id: v
      type: AngeliA.Int2
    - id: y
      type: System.Int32
    return:
      type: AngeliA.Int2
    content.vb: Public Shared Function ShiftY(v As Int2, y As Integer) As Int2
  overload: AngeliA.Extension.ShiftY*
  nameWithType.vb: Extension.ShiftY(Int2, Integer)
  fullName.vb: AngeliA.Extension.ShiftY(AngeliA.Int2, Integer)
  name.vb: ShiftY(Int2, Integer)
- uid: AngeliA.Extension.Almost(AngeliA.Float3,AngeliA.Float3)
  commentId: M:AngeliA.Extension.Almost(AngeliA.Float3,AngeliA.Float3)
  id: Almost(AngeliA.Float3,AngeliA.Float3)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Almost(Float3, Float3)
  nameWithType: Extension.Almost(Float3, Float3)
  fullName: AngeliA.Extension.Almost(AngeliA.Float3, AngeliA.Float3)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Almost
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 396
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool Almost(this Float3 a, Float3 b)
    parameters:
    - id: a
      type: AngeliA.Float3
    - id: b
      type: AngeliA.Float3
    return:
      type: System.Boolean
    content.vb: Public Shared Function Almost(a As Float3, b As Float3) As Boolean
  overload: AngeliA.Extension.Almost*
- uid: AngeliA.Extension.Almost(AngeliA.Float2,AngeliA.Float2)
  commentId: M:AngeliA.Extension.Almost(AngeliA.Float2,AngeliA.Float2)
  id: Almost(AngeliA.Float2,AngeliA.Float2)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Almost(Float2, Float2)
  nameWithType: Extension.Almost(Float2, Float2)
  fullName: AngeliA.Extension.Almost(AngeliA.Float2, AngeliA.Float2)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Almost
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 397
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool Almost(this Float2 a, Float2 b)
    parameters:
    - id: a
      type: AngeliA.Float2
    - id: b
      type: AngeliA.Float2
    return:
      type: System.Boolean
    content.vb: Public Shared Function Almost(a As Float2, b As Float2) As Boolean
  overload: AngeliA.Extension.Almost*
- uid: AngeliA.Extension.Almost(AngeliA.FRect,AngeliA.FRect)
  commentId: M:AngeliA.Extension.Almost(AngeliA.FRect,AngeliA.FRect)
  id: Almost(AngeliA.FRect,AngeliA.FRect)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Almost(FRect, FRect)
  nameWithType: Extension.Almost(FRect, FRect)
  fullName: AngeliA.Extension.Almost(AngeliA.FRect, AngeliA.FRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Almost
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 398
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool Almost(this FRect a, FRect b)
    parameters:
    - id: a
      type: AngeliA.FRect
    - id: b
      type: AngeliA.FRect
    return:
      type: System.Boolean
    content.vb: Public Shared Function Almost(a As FRect, b As FRect) As Boolean
  overload: AngeliA.Extension.Almost*
- uid: AngeliA.Extension.NotAlmost(AngeliA.Float3,AngeliA.Float3)
  commentId: M:AngeliA.Extension.NotAlmost(AngeliA.Float3,AngeliA.Float3)
  id: NotAlmost(AngeliA.Float3,AngeliA.Float3)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: NotAlmost(Float3, Float3)
  nameWithType: Extension.NotAlmost(Float3, Float3)
  fullName: AngeliA.Extension.NotAlmost(AngeliA.Float3, AngeliA.Float3)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: NotAlmost
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 399
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool NotAlmost(this Float3 a, Float3 b)
    parameters:
    - id: a
      type: AngeliA.Float3
    - id: b
      type: AngeliA.Float3
    return:
      type: System.Boolean
    content.vb: Public Shared Function NotAlmost(a As Float3, b As Float3) As Boolean
  overload: AngeliA.Extension.NotAlmost*
- uid: AngeliA.Extension.NotAlmost(AngeliA.Float2,AngeliA.Float2)
  commentId: M:AngeliA.Extension.NotAlmost(AngeliA.Float2,AngeliA.Float2)
  id: NotAlmost(AngeliA.Float2,AngeliA.Float2)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: NotAlmost(Float2, Float2)
  nameWithType: Extension.NotAlmost(Float2, Float2)
  fullName: AngeliA.Extension.NotAlmost(AngeliA.Float2, AngeliA.Float2)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: NotAlmost
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 400
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool NotAlmost(this Float2 a, Float2 b)
    parameters:
    - id: a
      type: AngeliA.Float2
    - id: b
      type: AngeliA.Float2
    return:
      type: System.Boolean
    content.vb: Public Shared Function NotAlmost(a As Float2, b As Float2) As Boolean
  overload: AngeliA.Extension.NotAlmost*
- uid: AngeliA.Extension.NotAlmost(AngeliA.FRect,AngeliA.FRect)
  commentId: M:AngeliA.Extension.NotAlmost(AngeliA.FRect,AngeliA.FRect)
  id: NotAlmost(AngeliA.FRect,AngeliA.FRect)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: NotAlmost(FRect, FRect)
  nameWithType: Extension.NotAlmost(FRect, FRect)
  fullName: AngeliA.Extension.NotAlmost(AngeliA.FRect, AngeliA.FRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: NotAlmost
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 401
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool NotAlmost(this FRect a, FRect b)
    parameters:
    - id: a
      type: AngeliA.FRect
    - id: b
      type: AngeliA.FRect
    return:
      type: System.Boolean
    content.vb: Public Shared Function NotAlmost(a As FRect, b As FRect) As Boolean
  overload: AngeliA.Extension.NotAlmost*
- uid: AngeliA.Extension.Inside01(AngeliA.Float2)
  commentId: M:AngeliA.Extension.Inside01(AngeliA.Float2)
  id: Inside01(AngeliA.Float2)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Inside01(Float2)
  nameWithType: Extension.Inside01(Float2)
  fullName: AngeliA.Extension.Inside01(AngeliA.Float2)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Inside01
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 402
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool Inside01(this Float2 v)
    parameters:
    - id: v
      type: AngeliA.Float2
    return:
      type: System.Boolean
    content.vb: Public Shared Function Inside01(v As Float2) As Boolean
  overload: AngeliA.Extension.Inside01*
- uid: AngeliA.Extension.Inside(AngeliA.Float2,AngeliA.Float2,AngeliA.Float2)
  commentId: M:AngeliA.Extension.Inside(AngeliA.Float2,AngeliA.Float2,AngeliA.Float2)
  id: Inside(AngeliA.Float2,AngeliA.Float2,AngeliA.Float2)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Inside(Float2, Float2, Float2)
  nameWithType: Extension.Inside(Float2, Float2, Float2)
  fullName: AngeliA.Extension.Inside(AngeliA.Float2, AngeliA.Float2, AngeliA.Float2)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Inside
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 403
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool Inside(this Float2 v, Float2 min, Float2 max)
    parameters:
    - id: v
      type: AngeliA.Float2
    - id: min
      type: AngeliA.Float2
    - id: max
      type: AngeliA.Float2
    return:
      type: System.Boolean
    content.vb: Public Shared Function Inside(v As Float2, min As Float2, max As Float2) As Boolean
  overload: AngeliA.Extension.Inside*
- uid: AngeliA.Extension.Inside(AngeliA.Float2,System.Single,System.Single,System.Single,System.Single)
  commentId: M:AngeliA.Extension.Inside(AngeliA.Float2,System.Single,System.Single,System.Single,System.Single)
  id: Inside(AngeliA.Float2,System.Single,System.Single,System.Single,System.Single)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Inside(Float2, float, float, float, float)
  nameWithType: Extension.Inside(Float2, float, float, float, float)
  fullName: AngeliA.Extension.Inside(AngeliA.Float2, float, float, float, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Inside
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 404
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool Inside(this Float2 v, float left, float right, float down, float up)
    parameters:
    - id: v
      type: AngeliA.Float2
    - id: left
      type: System.Single
    - id: right
      type: System.Single
    - id: down
      type: System.Single
    - id: up
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Shared Function Inside(v As Float2, left As Single, right As Single, down As Single, up As Single) As Boolean
  overload: AngeliA.Extension.Inside*
  nameWithType.vb: Extension.Inside(Float2, Single, Single, Single, Single)
  fullName.vb: AngeliA.Extension.Inside(AngeliA.Float2, Single, Single, Single, Single)
  name.vb: Inside(Float2, Single, Single, Single, Single)
- uid: AngeliA.Extension.RoundToInt(AngeliA.Float2)
  commentId: M:AngeliA.Extension.RoundToInt(AngeliA.Float2)
  id: RoundToInt(AngeliA.Float2)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: RoundToInt(Float2)
  nameWithType: Extension.RoundToInt(Float2)
  fullName: AngeliA.Extension.RoundToInt(AngeliA.Float2)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: RoundToInt
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 405
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Int2 RoundToInt(this Float2 v)
    parameters:
    - id: v
      type: AngeliA.Float2
    return:
      type: AngeliA.Int2
    content.vb: Public Shared Function RoundToInt(v As Float2) As Int2
  overload: AngeliA.Extension.RoundToInt*
- uid: AngeliA.Extension.CeilToInt(AngeliA.Float2)
  commentId: M:AngeliA.Extension.CeilToInt(AngeliA.Float2)
  id: CeilToInt(AngeliA.Float2)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: CeilToInt(Float2)
  nameWithType: Extension.CeilToInt(Float2)
  fullName: AngeliA.Extension.CeilToInt(AngeliA.Float2)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: CeilToInt
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 406
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Int2 CeilToInt(this Float2 v)
    parameters:
    - id: v
      type: AngeliA.Float2
    return:
      type: AngeliA.Int2
    content.vb: Public Shared Function CeilToInt(v As Float2) As Int2
  overload: AngeliA.Extension.CeilToInt*
- uid: AngeliA.Extension.FloorToInt(AngeliA.Float2)
  commentId: M:AngeliA.Extension.FloorToInt(AngeliA.Float2)
  id: FloorToInt(AngeliA.Float2)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: FloorToInt(Float2)
  nameWithType: Extension.FloorToInt(Float2)
  fullName: AngeliA.Extension.FloorToInt(AngeliA.Float2)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: FloorToInt
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 407
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Int2 FloorToInt(this Float2 v)
    parameters:
    - id: v
      type: AngeliA.Float2
    return:
      type: AngeliA.Int2
    content.vb: Public Shared Function FloorToInt(v As Float2) As Int2
  overload: AngeliA.Extension.FloorToInt*
- uid: AngeliA.Extension.AlmostZero(AngeliA.Float4)
  commentId: M:AngeliA.Extension.AlmostZero(AngeliA.Float4)
  id: AlmostZero(AngeliA.Float4)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: AlmostZero(Float4)
  nameWithType: Extension.AlmostZero(Float4)
  fullName: AngeliA.Extension.AlmostZero(AngeliA.Float4)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: AlmostZero
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 408
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool AlmostZero(this Float4 value)
    parameters:
    - id: value
      type: AngeliA.Float4
    return:
      type: System.Boolean
    content.vb: Public Shared Function AlmostZero(value As Float4) As Boolean
  overload: AngeliA.Extension.AlmostZero*
- uid: AngeliA.Extension.Rotate(AngeliA.Float3,System.Single)
  commentId: M:AngeliA.Extension.Rotate(AngeliA.Float3,System.Single)
  id: Rotate(AngeliA.Float3,System.Single)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Rotate(Float3, float)
  nameWithType: Extension.Rotate(Float3, float)
  fullName: AngeliA.Extension.Rotate(AngeliA.Float3, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Rotate
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 410
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Float3 Rotate(this Float3 vector, float angle)
    parameters:
    - id: vector
      type: AngeliA.Float3
    - id: angle
      type: System.Single
    return:
      type: AngeliA.Float3
    content.vb: Public Shared Function Rotate(vector As Float3, angle As Single) As Float3
  overload: AngeliA.Extension.Rotate*
  nameWithType.vb: Extension.Rotate(Float3, Single)
  fullName.vb: AngeliA.Extension.Rotate(AngeliA.Float3, Single)
  name.vb: Rotate(Float3, Single)
- uid: AngeliA.Extension.Rotate(AngeliA.Float2,System.Single)
  commentId: M:AngeliA.Extension.Rotate(AngeliA.Float2,System.Single)
  id: Rotate(AngeliA.Float2,System.Single)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Rotate(Float2, float)
  nameWithType: Extension.Rotate(Float2, float)
  fullName: AngeliA.Extension.Rotate(AngeliA.Float2, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Rotate
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 420
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Float2 Rotate(this Float2 vector, float angle)
    parameters:
    - id: vector
      type: AngeliA.Float2
    - id: angle
      type: System.Single
    return:
      type: AngeliA.Float2
    content.vb: Public Shared Function Rotate(vector As Float2, angle As Single) As Float2
  overload: AngeliA.Extension.Rotate*
  nameWithType.vb: Extension.Rotate(Float2, Single)
  fullName.vb: AngeliA.Extension.Rotate(AngeliA.Float2, Single)
  name.vb: Rotate(Float2, Single)
- uid: AngeliA.Extension.GetRotation(AngeliA.Float2)
  commentId: M:AngeliA.Extension.GetRotation(AngeliA.Float2)
  id: GetRotation(AngeliA.Float2)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: GetRotation(Float2)
  nameWithType: Extension.GetRotation(Float2)
  fullName: AngeliA.Extension.GetRotation(AngeliA.Float2)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetRotation
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 429
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int GetRotation(this Float2 vector)
    parameters:
    - id: vector
      type: AngeliA.Float2
    return:
      type: System.Int32
    content.vb: Public Shared Function GetRotation(vector As Float2) As Integer
  overload: AngeliA.Extension.GetRotation*
- uid: AngeliA.Extension.GetRotation(AngeliA.Int2)
  commentId: M:AngeliA.Extension.GetRotation(AngeliA.Int2)
  id: GetRotation(AngeliA.Int2)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: GetRotation(Int2)
  nameWithType: Extension.GetRotation(Int2)
  fullName: AngeliA.Extension.GetRotation(AngeliA.Int2)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetRotation
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 430
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int GetRotation(this Int2 vector)
    parameters:
    - id: vector
      type: AngeliA.Int2
    return:
      type: System.Int32
    content.vb: Public Shared Function GetRotation(vector As Int2) As Integer
  overload: AngeliA.Extension.GetRotation*
- uid: AngeliA.Extension.TryGetDirection8(AngeliA.Int2,AngeliA.Direction8@)
  commentId: M:AngeliA.Extension.TryGetDirection8(AngeliA.Int2,AngeliA.Direction8@)
  id: TryGetDirection8(AngeliA.Int2,AngeliA.Direction8@)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: TryGetDirection8(Int2, out Direction8)
  nameWithType: Extension.TryGetDirection8(Int2, out Direction8)
  fullName: AngeliA.Extension.TryGetDirection8(AngeliA.Int2, out AngeliA.Direction8)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TryGetDirection8
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 432
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool TryGetDirection8(this Int2 dir, out Direction8 result)
    parameters:
    - id: dir
      type: AngeliA.Int2
    - id: result
      type: AngeliA.Direction8
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryGetDirection8(dir As Int2, result As Direction8) As Boolean
  overload: AngeliA.Extension.TryGetDirection8*
  nameWithType.vb: Extension.TryGetDirection8(Int2, Direction8)
  fullName.vb: AngeliA.Extension.TryGetDirection8(AngeliA.Int2, AngeliA.Direction8)
  name.vb: TryGetDirection8(Int2, Direction8)
- uid: AngeliA.Extension.IsHorizontal(AngeliA.Direction4)
  commentId: M:AngeliA.Extension.IsHorizontal(AngeliA.Direction4)
  id: IsHorizontal(AngeliA.Direction4)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: IsHorizontal(Direction4)
  nameWithType: Extension.IsHorizontal(Direction4)
  fullName: AngeliA.Extension.IsHorizontal(AngeliA.Direction4)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IsHorizontal
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 442
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool IsHorizontal(this Direction4 dir)
    parameters:
    - id: dir
      type: AngeliA.Direction4
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsHorizontal(dir As Direction4) As Boolean
  overload: AngeliA.Extension.IsHorizontal*
- uid: AngeliA.Extension.IsVertical(AngeliA.Direction4)
  commentId: M:AngeliA.Extension.IsVertical(AngeliA.Direction4)
  id: IsVertical(AngeliA.Direction4)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: IsVertical(Direction4)
  nameWithType: Extension.IsVertical(Direction4)
  fullName: AngeliA.Extension.IsVertical(AngeliA.Direction4)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IsVertical
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 443
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool IsVertical(this Direction4 dir)
    parameters:
    - id: dir
      type: AngeliA.Direction4
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsVertical(dir As Direction4) As Boolean
  overload: AngeliA.Extension.IsVertical*
- uid: AngeliA.Extension.IsHorizontal(AngeliA.Direction5)
  commentId: M:AngeliA.Extension.IsHorizontal(AngeliA.Direction5)
  id: IsHorizontal(AngeliA.Direction5)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: IsHorizontal(Direction5)
  nameWithType: Extension.IsHorizontal(Direction5)
  fullName: AngeliA.Extension.IsHorizontal(AngeliA.Direction5)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IsHorizontal
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 445
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool IsHorizontal(this Direction5 dir)
    parameters:
    - id: dir
      type: AngeliA.Direction5
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsHorizontal(dir As Direction5) As Boolean
  overload: AngeliA.Extension.IsHorizontal*
- uid: AngeliA.Extension.IsVertical(AngeliA.Direction5)
  commentId: M:AngeliA.Extension.IsVertical(AngeliA.Direction5)
  id: IsVertical(AngeliA.Direction5)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: IsVertical(Direction5)
  nameWithType: Extension.IsVertical(Direction5)
  fullName: AngeliA.Extension.IsVertical(AngeliA.Direction5)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IsVertical
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 446
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool IsVertical(this Direction5 dir)
    parameters:
    - id: dir
      type: AngeliA.Direction5
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsVertical(dir As Direction5) As Boolean
  overload: AngeliA.Extension.IsVertical*
- uid: AngeliA.Extension.Opposite(AngeliA.Direction4)
  commentId: M:AngeliA.Extension.Opposite(AngeliA.Direction4)
  id: Opposite(AngeliA.Direction4)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Opposite(Direction4)
  nameWithType: Extension.Opposite(Direction4)
  fullName: AngeliA.Extension.Opposite(AngeliA.Direction4)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Opposite
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 448
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Direction4 Opposite(this Direction4 dir)
    parameters:
    - id: dir
      type: AngeliA.Direction4
    return:
      type: AngeliA.Direction4
    content.vb: Public Shared Function Opposite(dir As Direction4) As Direction4
  overload: AngeliA.Extension.Opposite*
- uid: AngeliA.Extension.Opposite(AngeliA.Direction5)
  commentId: M:AngeliA.Extension.Opposite(AngeliA.Direction5)
  id: Opposite(AngeliA.Direction5)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Opposite(Direction5)
  nameWithType: Extension.Opposite(Direction5)
  fullName: AngeliA.Extension.Opposite(AngeliA.Direction5)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Opposite
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 457
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Direction5 Opposite(this Direction5 dir)
    parameters:
    - id: dir
      type: AngeliA.Direction5
    return:
      type: AngeliA.Direction5
    content.vb: Public Shared Function Opposite(dir As Direction5) As Direction5
  overload: AngeliA.Extension.Opposite*
- uid: AngeliA.Extension.Opposite(AngeliA.Direction3)
  commentId: M:AngeliA.Extension.Opposite(AngeliA.Direction3)
  id: Opposite(AngeliA.Direction3)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Opposite(Direction3)
  nameWithType: Extension.Opposite(Direction3)
  fullName: AngeliA.Extension.Opposite(AngeliA.Direction3)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Opposite
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 466
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Direction3 Opposite(this Direction3 dir)
    parameters:
    - id: dir
      type: AngeliA.Direction3
    return:
      type: AngeliA.Direction3
    content.vb: Public Shared Function Opposite(dir As Direction3) As Direction3
  overload: AngeliA.Extension.Opposite*
- uid: AngeliA.Extension.Clockwise(AngeliA.Direction4)
  commentId: M:AngeliA.Extension.Clockwise(AngeliA.Direction4)
  id: Clockwise(AngeliA.Direction4)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Clockwise(Direction4)
  nameWithType: Extension.Clockwise(Direction4)
  fullName: AngeliA.Extension.Clockwise(AngeliA.Direction4)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Clockwise
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 474
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Direction4 Clockwise(this Direction4 dir)
    parameters:
    - id: dir
      type: AngeliA.Direction4
    return:
      type: AngeliA.Direction4
    content.vb: Public Shared Function Clockwise(dir As Direction4) As Direction4
  overload: AngeliA.Extension.Clockwise*
- uid: AngeliA.Extension.AntiClockwise(AngeliA.Direction4)
  commentId: M:AngeliA.Extension.AntiClockwise(AngeliA.Direction4)
  id: AntiClockwise(AngeliA.Direction4)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: AntiClockwise(Direction4)
  nameWithType: Extension.AntiClockwise(Direction4)
  fullName: AngeliA.Extension.AntiClockwise(AngeliA.Direction4)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: AntiClockwise
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 483
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Direction4 AntiClockwise(this Direction4 dir)
    parameters:
    - id: dir
      type: AngeliA.Direction4
    return:
      type: AngeliA.Direction4
    content.vb: Public Shared Function AntiClockwise(dir As Direction4) As Direction4
  overload: AngeliA.Extension.AntiClockwise*
- uid: AngeliA.Extension.Clockwise(AngeliA.Direction5)
  commentId: M:AngeliA.Extension.Clockwise(AngeliA.Direction5)
  id: Clockwise(AngeliA.Direction5)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Clockwise(Direction5)
  nameWithType: Extension.Clockwise(Direction5)
  fullName: AngeliA.Extension.Clockwise(AngeliA.Direction5)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Clockwise
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 492
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Direction5 Clockwise(this Direction5 dir)
    parameters:
    - id: dir
      type: AngeliA.Direction5
    return:
      type: AngeliA.Direction5
    content.vb: Public Shared Function Clockwise(dir As Direction5) As Direction5
  overload: AngeliA.Extension.Clockwise*
- uid: AngeliA.Extension.AntiClockwise(AngeliA.Direction5)
  commentId: M:AngeliA.Extension.AntiClockwise(AngeliA.Direction5)
  id: AntiClockwise(AngeliA.Direction5)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: AntiClockwise(Direction5)
  nameWithType: Extension.AntiClockwise(Direction5)
  fullName: AngeliA.Extension.AntiClockwise(AngeliA.Direction5)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: AntiClockwise
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 501
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Direction5 AntiClockwise(this Direction5 dir)
    parameters:
    - id: dir
      type: AngeliA.Direction5
    return:
      type: AngeliA.Direction5
    content.vb: Public Shared Function AntiClockwise(dir As Direction5) As Direction5
  overload: AngeliA.Extension.AntiClockwise*
- uid: AngeliA.Extension.Normal(AngeliA.Direction4)
  commentId: M:AngeliA.Extension.Normal(AngeliA.Direction4)
  id: Normal(AngeliA.Direction4)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Normal(Direction4)
  nameWithType: Extension.Normal(Direction4)
  fullName: AngeliA.Extension.Normal(AngeliA.Direction4)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Normal
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 510
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Int2 Normal(this Direction4 dir)
    parameters:
    - id: dir
      type: AngeliA.Direction4
    return:
      type: AngeliA.Int2
    content.vb: Public Shared Function Normal(dir As Direction4) As Int2
  overload: AngeliA.Extension.Normal*
- uid: AngeliA.Extension.Normal(AngeliA.Direction5)
  commentId: M:AngeliA.Extension.Normal(AngeliA.Direction5)
  id: Normal(AngeliA.Direction5)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Normal(Direction5)
  nameWithType: Extension.Normal(Direction5)
  fullName: AngeliA.Extension.Normal(AngeliA.Direction5)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Normal
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 519
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Int2 Normal(this Direction5 dir)
    parameters:
    - id: dir
      type: AngeliA.Direction5
    return:
      type: AngeliA.Int2
    content.vb: Public Shared Function Normal(dir As Direction5) As Int2
  overload: AngeliA.Extension.Normal*
- uid: AngeliA.Extension.Normal(AngeliA.Direction8)
  commentId: M:AngeliA.Extension.Normal(AngeliA.Direction8)
  id: Normal(AngeliA.Direction8)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Normal(Direction8)
  nameWithType: Extension.Normal(Direction8)
  fullName: AngeliA.Extension.Normal(AngeliA.Direction8)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Normal
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 528
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Int2 Normal(this Direction8 dir)
    parameters:
    - id: dir
      type: AngeliA.Direction8
    return:
      type: AngeliA.Int2
    content.vb: Public Shared Function Normal(dir As Direction8) As Int2
  overload: AngeliA.Extension.Normal*
- uid: AngeliA.Extension.GetRotation(AngeliA.Direction4)
  commentId: M:AngeliA.Extension.GetRotation(AngeliA.Direction4)
  id: GetRotation(AngeliA.Direction4)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: GetRotation(Direction4)
  nameWithType: Extension.GetRotation(Direction4)
  fullName: AngeliA.Extension.GetRotation(AngeliA.Direction4)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetRotation
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 541
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int GetRotation(this Direction4 dir)
    parameters:
    - id: dir
      type: AngeliA.Direction4
    return:
      type: System.Int32
    content.vb: Public Shared Function GetRotation(dir As Direction4) As Integer
  overload: AngeliA.Extension.GetRotation*
- uid: AngeliA.Extension.GetHorizontalDirection(AngeliA.Direction5)
  commentId: M:AngeliA.Extension.GetHorizontalDirection(AngeliA.Direction5)
  id: GetHorizontalDirection(AngeliA.Direction5)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: GetHorizontalDirection(Direction5)
  nameWithType: Extension.GetHorizontalDirection(Direction5)
  fullName: AngeliA.Extension.GetHorizontalDirection(AngeliA.Direction5)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetHorizontalDirection
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 550
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Direction3 GetHorizontalDirection(this Direction5 dir)
    parameters:
    - id: dir
      type: AngeliA.Direction5
    return:
      type: AngeliA.Direction3
    content.vb: Public Shared Function GetHorizontalDirection(dir As Direction5) As Direction3
  overload: AngeliA.Extension.GetHorizontalDirection*
- uid: AngeliA.Extension.GetVerticalDirection(AngeliA.Direction5)
  commentId: M:AngeliA.Extension.GetVerticalDirection(AngeliA.Direction5)
  id: GetVerticalDirection(AngeliA.Direction5)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: GetVerticalDirection(Direction5)
  nameWithType: Extension.GetVerticalDirection(Direction5)
  fullName: AngeliA.Extension.GetVerticalDirection(AngeliA.Direction5)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetVerticalDirection
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 557
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Direction3 GetVerticalDirection(this Direction5 dir)
    parameters:
    - id: dir
      type: AngeliA.Direction5
    return:
      type: AngeliA.Direction3
    content.vb: Public Shared Function GetVerticalDirection(dir As Direction5) As Direction3
  overload: AngeliA.Extension.GetVerticalDirection*
- uid: AngeliA.Extension.Clockwise(AngeliA.Direction8,System.Int32)
  commentId: M:AngeliA.Extension.Clockwise(AngeliA.Direction8,System.Int32)
  id: Clockwise(AngeliA.Direction8,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Clockwise(Direction8, int)
  nameWithType: Extension.Clockwise(Direction8, int)
  fullName: AngeliA.Extension.Clockwise(AngeliA.Direction8, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Clockwise
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 564
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Direction8 Clockwise(this Direction8 dir, int count = 1)
    parameters:
    - id: dir
      type: AngeliA.Direction8
    - id: count
      type: System.Int32
    return:
      type: AngeliA.Direction8
    content.vb: Public Shared Function Clockwise(dir As Direction8, count As Integer = 1) As Direction8
  overload: AngeliA.Extension.Clockwise*
  nameWithType.vb: Extension.Clockwise(Direction8, Integer)
  fullName.vb: AngeliA.Extension.Clockwise(AngeliA.Direction8, Integer)
  name.vb: Clockwise(Direction8, Integer)
- uid: AngeliA.Extension.AntiClockwise(AngeliA.Direction8,System.Int32)
  commentId: M:AngeliA.Extension.AntiClockwise(AngeliA.Direction8,System.Int32)
  id: AntiClockwise(AngeliA.Direction8,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: AntiClockwise(Direction8, int)
  nameWithType: Extension.AntiClockwise(Direction8, int)
  fullName: AngeliA.Extension.AntiClockwise(AngeliA.Direction8, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: AntiClockwise
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 567
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Direction8 AntiClockwise(this Direction8 dir, int count = 1)
    parameters:
    - id: dir
      type: AngeliA.Direction8
    - id: count
      type: System.Int32
    return:
      type: AngeliA.Direction8
    content.vb: Public Shared Function AntiClockwise(dir As Direction8, count As Integer = 1) As Direction8
  overload: AngeliA.Extension.AntiClockwise*
  nameWithType.vb: Extension.AntiClockwise(Direction8, Integer)
  fullName.vb: AngeliA.Extension.AntiClockwise(AngeliA.Direction8, Integer)
  name.vb: AntiClockwise(Direction8, Integer)
- uid: AngeliA.Extension.Opposite(AngeliA.Direction8)
  commentId: M:AngeliA.Extension.Opposite(AngeliA.Direction8)
  id: Opposite(AngeliA.Direction8)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Opposite(Direction8)
  nameWithType: Extension.Opposite(Direction8)
  fullName: AngeliA.Extension.Opposite(AngeliA.Direction8)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Opposite
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 570
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Direction8 Opposite(this Direction8 dir)
    parameters:
    - id: dir
      type: AngeliA.Direction8
    return:
      type: AngeliA.Direction8
    content.vb: Public Shared Function Opposite(dir As Direction8) As Direction8
  overload: AngeliA.Extension.Opposite*
- uid: AngeliA.Extension.GetRotation(AngeliA.Direction8)
  commentId: M:AngeliA.Extension.GetRotation(AngeliA.Direction8)
  id: GetRotation(AngeliA.Direction8)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: GetRotation(Direction8)
  nameWithType: Extension.GetRotation(Direction8)
  fullName: AngeliA.Extension.GetRotation(AngeliA.Direction8)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetRotation
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 573
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int GetRotation(this Direction8 dir)
    parameters:
    - id: dir
      type: AngeliA.Direction8
    return:
      type: System.Int32
    content.vb: Public Shared Function GetRotation(dir As Direction8) As Integer
  overload: AngeliA.Extension.GetRotation*
- uid: AngeliA.Extension.IsTilted(AngeliA.Direction8)
  commentId: M:AngeliA.Extension.IsTilted(AngeliA.Direction8)
  id: IsTilted(AngeliA.Direction8)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: IsTilted(Direction8)
  nameWithType: Extension.IsTilted(Direction8)
  fullName: AngeliA.Extension.IsTilted(AngeliA.Direction8)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IsTilted
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 576
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool IsTilted(this Direction8 dir)
    parameters:
    - id: dir
      type: AngeliA.Direction8
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsTilted(dir As Direction8) As Boolean
  overload: AngeliA.Extension.IsTilted*
- uid: AngeliA.Extension.IsPositive(AngeliA.Direction8)
  commentId: M:AngeliA.Extension.IsPositive(AngeliA.Direction8)
  id: IsPositive(AngeliA.Direction8)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: IsPositive(Direction8)
  nameWithType: Extension.IsPositive(Direction8)
  fullName: AngeliA.Extension.IsPositive(AngeliA.Direction8)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IsPositive
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 585
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool IsPositive(this Direction8 dir)
    parameters:
    - id: dir
      type: AngeliA.Direction8
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsPositive(dir As Direction8) As Boolean
  overload: AngeliA.Extension.IsPositive*
- uid: AngeliA.Extension.IsPositive(AngeliA.Direction4)
  commentId: M:AngeliA.Extension.IsPositive(AngeliA.Direction4)
  id: IsPositive(AngeliA.Direction4)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: IsPositive(Direction4)
  nameWithType: Extension.IsPositive(Direction4)
  fullName: AngeliA.Extension.IsPositive(AngeliA.Direction4)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IsPositive
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 594
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool IsPositive(this Direction4 dir)
    parameters:
    - id: dir
      type: AngeliA.Direction4
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsPositive(dir As Direction4) As Boolean
  overload: AngeliA.Extension.IsPositive*
- uid: AngeliA.Extension.IsPositive(AngeliA.Direction5)
  commentId: M:AngeliA.Extension.IsPositive(AngeliA.Direction5)
  id: IsPositive(AngeliA.Direction5)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: IsPositive(Direction5)
  nameWithType: Extension.IsPositive(Direction5)
  fullName: AngeliA.Extension.IsPositive(AngeliA.Direction5)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IsPositive
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 601
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool IsPositive(this Direction5 dir)
    parameters:
    - id: dir
      type: AngeliA.Direction5
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsPositive(dir As Direction5) As Boolean
  overload: AngeliA.Extension.IsPositive*
- uid: AngeliA.Extension.IsLeft(AngeliA.Direction8)
  commentId: M:AngeliA.Extension.IsLeft(AngeliA.Direction8)
  id: IsLeft(AngeliA.Direction8)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: IsLeft(Direction8)
  nameWithType: Extension.IsLeft(Direction8)
  fullName: AngeliA.Extension.IsLeft(AngeliA.Direction8)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IsLeft
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 608
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool IsLeft(this Direction8 dir)
    parameters:
    - id: dir
      type: AngeliA.Direction8
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsLeft(dir As Direction8) As Boolean
  overload: AngeliA.Extension.IsLeft*
- uid: AngeliA.Extension.IsRight(AngeliA.Direction8)
  commentId: M:AngeliA.Extension.IsRight(AngeliA.Direction8)
  id: IsRight(AngeliA.Direction8)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: IsRight(Direction8)
  nameWithType: Extension.IsRight(Direction8)
  fullName: AngeliA.Extension.IsRight(AngeliA.Direction8)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IsRight
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 609
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool IsRight(this Direction8 dir)
    parameters:
    - id: dir
      type: AngeliA.Direction8
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsRight(dir As Direction8) As Boolean
  overload: AngeliA.Extension.IsRight*
- uid: AngeliA.Extension.IsVertical(AngeliA.Direction8)
  commentId: M:AngeliA.Extension.IsVertical(AngeliA.Direction8)
  id: IsVertical(AngeliA.Direction8)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: IsVertical(Direction8)
  nameWithType: Extension.IsVertical(Direction8)
  fullName: AngeliA.Extension.IsVertical(AngeliA.Direction8)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IsVertical
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 610
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool IsVertical(this Direction8 dir)
    parameters:
    - id: dir
      type: AngeliA.Direction8
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsVertical(dir As Direction8) As Boolean
  overload: AngeliA.Extension.IsVertical*
- uid: AngeliA.Extension.IsHorizontal(AngeliA.Direction8)
  commentId: M:AngeliA.Extension.IsHorizontal(AngeliA.Direction8)
  id: IsHorizontal(AngeliA.Direction8)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: IsHorizontal(Direction8)
  nameWithType: Extension.IsHorizontal(Direction8)
  fullName: AngeliA.Extension.IsHorizontal(AngeliA.Direction8)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IsHorizontal
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 611
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool IsHorizontal(this Direction8 dir)
    parameters:
    - id: dir
      type: AngeliA.Direction8
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsHorizontal(dir As Direction8) As Boolean
  overload: AngeliA.Extension.IsHorizontal*
- uid: AngeliA.Extension.IsBottom(AngeliA.Direction8)
  commentId: M:AngeliA.Extension.IsBottom(AngeliA.Direction8)
  id: IsBottom(AngeliA.Direction8)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: IsBottom(Direction8)
  nameWithType: Extension.IsBottom(Direction8)
  fullName: AngeliA.Extension.IsBottom(AngeliA.Direction8)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IsBottom
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 612
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool IsBottom(this Direction8 dir)
    parameters:
    - id: dir
      type: AngeliA.Direction8
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsBottom(dir As Direction8) As Boolean
  overload: AngeliA.Extension.IsBottom*
- uid: AngeliA.Extension.IsTop(AngeliA.Direction8)
  commentId: M:AngeliA.Extension.IsTop(AngeliA.Direction8)
  id: IsTop(AngeliA.Direction8)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: IsTop(Direction8)
  nameWithType: Extension.IsTop(Direction8)
  fullName: AngeliA.Extension.IsTop(AngeliA.Direction8)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IsTop
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 613
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool IsTop(this Direction8 dir)
    parameters:
    - id: dir
      type: AngeliA.Direction8
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsTop(dir As Direction8) As Boolean
  overload: AngeliA.Extension.IsTop*
- uid: AngeliA.Extension.ToDirection4(AngeliA.Direction5,AngeliA.Direction4)
  commentId: M:AngeliA.Extension.ToDirection4(AngeliA.Direction5,AngeliA.Direction4)
  id: ToDirection4(AngeliA.Direction5,AngeliA.Direction4)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: ToDirection4(Direction5, Direction4)
  nameWithType: Extension.ToDirection4(Direction5, Direction4)
  fullName: AngeliA.Extension.ToDirection4(AngeliA.Direction5, AngeliA.Direction4)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ToDirection4
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 615
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Direction4 ToDirection4(this Direction5 dir5, Direction4 center = Direction4.Up)
    parameters:
    - id: dir5
      type: AngeliA.Direction5
    - id: center
      type: AngeliA.Direction4
    return:
      type: AngeliA.Direction4
    content.vb: Public Shared Function ToDirection4(dir5 As Direction5, center As Direction4 = Direction4.Up) As Direction4
  overload: AngeliA.Extension.ToDirection4*
- uid: AngeliA.Extension.ToDirection5(AngeliA.Direction4)
  commentId: M:AngeliA.Extension.ToDirection5(AngeliA.Direction4)
  id: ToDirection5(AngeliA.Direction4)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: ToDirection5(Direction4)
  nameWithType: Extension.ToDirection5(Direction4)
  fullName: AngeliA.Extension.ToDirection5(AngeliA.Direction4)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ToDirection5
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 624
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Direction5 ToDirection5(this Direction4 dir4)
    parameters:
    - id: dir4
      type: AngeliA.Direction4
    return:
      type: AngeliA.Direction5
    content.vb: Public Shared Function ToDirection5(dir4 As Direction4) As Direction5
  overload: AngeliA.Extension.ToDirection5*
- uid: AngeliA.Extension.ToDirection8(AngeliA.Direction4)
  commentId: M:AngeliA.Extension.ToDirection8(AngeliA.Direction4)
  id: ToDirection8(AngeliA.Direction4)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: ToDirection8(Direction4)
  nameWithType: Extension.ToDirection8(Direction4)
  fullName: AngeliA.Extension.ToDirection8(AngeliA.Direction4)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ToDirection8
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 632
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Direction8 ToDirection8(this Direction4 dir4)
    parameters:
    - id: dir4
      type: AngeliA.Direction4
    return:
      type: AngeliA.Direction8
    content.vb: Public Shared Function ToDirection8(dir4 As Direction4) As Direction8
  overload: AngeliA.Extension.ToDirection8*
- uid: AngeliA.Extension.ToAlignment(AngeliA.Direction5)
  commentId: M:AngeliA.Extension.ToAlignment(AngeliA.Direction5)
  id: ToAlignment(AngeliA.Direction5)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: ToAlignment(Direction5)
  nameWithType: Extension.ToAlignment(Direction5)
  fullName: AngeliA.Extension.ToAlignment(AngeliA.Direction5)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ToAlignment
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 640
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Alignment ToAlignment(this Direction5 dir5)
    parameters:
    - id: dir5
      type: AngeliA.Direction5
    return:
      type: AngeliA.Alignment
    content.vb: Public Shared Function ToAlignment(dir5 As Direction5) As Alignment
  overload: AngeliA.Extension.ToAlignment*
- uid: AngeliA.Extension.ToAlignment(AngeliA.Direction4)
  commentId: M:AngeliA.Extension.ToAlignment(AngeliA.Direction4)
  id: ToAlignment(AngeliA.Direction4)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: ToAlignment(Direction4)
  nameWithType: Extension.ToAlignment(Direction4)
  fullName: AngeliA.Extension.ToAlignment(AngeliA.Direction4)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ToAlignment
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 650
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Alignment ToAlignment(this Direction4 dir4)
    parameters:
    - id: dir4
      type: AngeliA.Direction4
    return:
      type: AngeliA.Alignment
    content.vb: Public Shared Function ToAlignment(dir4 As Direction4) As Alignment
  overload: AngeliA.Extension.ToAlignment*
- uid: AngeliA.Extension.Shift(AngeliA.FRect,System.Single,System.Single)
  commentId: M:AngeliA.Extension.Shift(AngeliA.FRect,System.Single,System.Single)
  id: Shift(AngeliA.FRect,System.Single,System.Single)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Shift(FRect, float, float)
  nameWithType: Extension.Shift(FRect, float, float)
  fullName: AngeliA.Extension.Shift(AngeliA.FRect, float, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Shift
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 660
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static FRect Shift(this FRect rect, float x, float y)
    parameters:
    - id: rect
      type: AngeliA.FRect
    - id: x
      type: System.Single
    - id: y
      type: System.Single
    return:
      type: AngeliA.FRect
    content.vb: Public Shared Function Shift(rect As FRect, x As Single, y As Single) As FRect
  overload: AngeliA.Extension.Shift*
  nameWithType.vb: Extension.Shift(FRect, Single, Single)
  fullName.vb: AngeliA.Extension.Shift(AngeliA.FRect, Single, Single)
  name.vb: Shift(FRect, Single, Single)
- uid: AngeliA.Extension.Expand(AngeliA.FRect,System.Single)
  commentId: M:AngeliA.Extension.Expand(AngeliA.FRect,System.Single)
  id: Expand(AngeliA.FRect,System.Single)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Expand(FRect, float)
  nameWithType: Extension.Expand(FRect, float)
  fullName: AngeliA.Extension.Expand(AngeliA.FRect, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Expand
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 666
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static FRect Expand(this FRect rect, float offset)
    parameters:
    - id: rect
      type: AngeliA.FRect
    - id: offset
      type: System.Single
    return:
      type: AngeliA.FRect
    content.vb: Public Shared Function Expand(rect As FRect, offset As Single) As FRect
  overload: AngeliA.Extension.Expand*
  nameWithType.vb: Extension.Expand(FRect, Single)
  fullName.vb: AngeliA.Extension.Expand(AngeliA.FRect, Single)
  name.vb: Expand(FRect, Single)
- uid: AngeliA.Extension.Expand(AngeliA.FRect,System.Single,System.Single,System.Single,System.Single)
  commentId: M:AngeliA.Extension.Expand(AngeliA.FRect,System.Single,System.Single,System.Single,System.Single)
  id: Expand(AngeliA.FRect,System.Single,System.Single,System.Single,System.Single)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Expand(FRect, float, float, float, float)
  nameWithType: Extension.Expand(FRect, float, float, float, float)
  fullName: AngeliA.Extension.Expand(AngeliA.FRect, float, float, float, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Expand
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 667
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static FRect Expand(this FRect rect, float l, float r, float d, float u)
    parameters:
    - id: rect
      type: AngeliA.FRect
    - id: l
      type: System.Single
    - id: r
      type: System.Single
    - id: d
      type: System.Single
    - id: u
      type: System.Single
    return:
      type: AngeliA.FRect
    content.vb: Public Shared Function Expand(rect As FRect, l As Single, r As Single, d As Single, u As Single) As FRect
  overload: AngeliA.Extension.Expand*
  nameWithType.vb: Extension.Expand(FRect, Single, Single, Single, Single)
  fullName.vb: AngeliA.Extension.Expand(AngeliA.FRect, Single, Single, Single, Single)
  name.vb: Expand(FRect, Single, Single, Single, Single)
- uid: AngeliA.Extension.Shrink(AngeliA.FRect,System.Single)
  commentId: M:AngeliA.Extension.Shrink(AngeliA.FRect,System.Single)
  id: Shrink(AngeliA.FRect,System.Single)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Shrink(FRect, float)
  nameWithType: Extension.Shrink(FRect, float)
  fullName: AngeliA.Extension.Shrink(AngeliA.FRect, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Shrink
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 675
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static FRect Shrink(this FRect rect, float offset)
    parameters:
    - id: rect
      type: AngeliA.FRect
    - id: offset
      type: System.Single
    return:
      type: AngeliA.FRect
    content.vb: Public Shared Function Shrink(rect As FRect, offset As Single) As FRect
  overload: AngeliA.Extension.Shrink*
  nameWithType.vb: Extension.Shrink(FRect, Single)
  fullName.vb: AngeliA.Extension.Shrink(AngeliA.FRect, Single)
  name.vb: Shrink(FRect, Single)
- uid: AngeliA.Extension.Shrink(AngeliA.FRect,System.Single,System.Single,System.Single,System.Single)
  commentId: M:AngeliA.Extension.Shrink(AngeliA.FRect,System.Single,System.Single,System.Single,System.Single)
  id: Shrink(AngeliA.FRect,System.Single,System.Single,System.Single,System.Single)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Shrink(FRect, float, float, float, float)
  nameWithType: Extension.Shrink(FRect, float, float, float, float)
  fullName: AngeliA.Extension.Shrink(AngeliA.FRect, float, float, float, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Shrink
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 676
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static FRect Shrink(this FRect rect, float l, float r, float d, float u)
    parameters:
    - id: rect
      type: AngeliA.FRect
    - id: l
      type: System.Single
    - id: r
      type: System.Single
    - id: d
      type: System.Single
    - id: u
      type: System.Single
    return:
      type: AngeliA.FRect
    content.vb: Public Shared Function Shrink(rect As FRect, l As Single, r As Single, d As Single, u As Single) As FRect
  overload: AngeliA.Extension.Shrink*
  nameWithType.vb: Extension.Shrink(FRect, Single, Single, Single, Single)
  fullName.vb: AngeliA.Extension.Shrink(AngeliA.FRect, Single, Single, Single, Single)
  name.vb: Shrink(FRect, Single, Single, Single, Single)
- uid: AngeliA.Extension.Fit(AngeliA.FRect,System.Single,System.Single,System.Single)
  commentId: M:AngeliA.Extension.Fit(AngeliA.FRect,System.Single,System.Single,System.Single)
  id: Fit(AngeliA.FRect,System.Single,System.Single,System.Single)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Fit(FRect, float, float, float)
  nameWithType: Extension.Fit(FRect, float, float, float)
  fullName: AngeliA.Extension.Fit(AngeliA.FRect, float, float, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Fit
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 678
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static FRect Fit(this FRect rect, float targetAspect, float pivotX = 0.5, float pivotY = 0.5)
    parameters:
    - id: rect
      type: AngeliA.FRect
    - id: targetAspect
      type: System.Single
    - id: pivotX
      type: System.Single
    - id: pivotY
      type: System.Single
    return:
      type: AngeliA.FRect
    content.vb: Public Shared Function Fit(rect As FRect, targetAspect As Single, pivotX As Single = 0.5, pivotY As Single = 0.5) As FRect
  overload: AngeliA.Extension.Fit*
  nameWithType.vb: Extension.Fit(FRect, Single, Single, Single)
  fullName.vb: AngeliA.Extension.Fit(AngeliA.FRect, Single, Single, Single)
  name.vb: Fit(FRect, Single, Single, Single)
- uid: AngeliA.Extension.Envelope(AngeliA.FRect,System.Single)
  commentId: M:AngeliA.Extension.Envelope(AngeliA.FRect,System.Single)
  id: Envelope(AngeliA.FRect,System.Single)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Envelope(FRect, float)
  nameWithType: Extension.Envelope(FRect, float)
  fullName: AngeliA.Extension.Envelope(AngeliA.FRect, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Envelope
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 693
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static FRect Envelope(this FRect rect, float targetAspect)
    parameters:
    - id: rect
      type: AngeliA.FRect
    - id: targetAspect
      type: System.Single
    return:
      type: AngeliA.FRect
    content.vb: Public Shared Function Envelope(rect As FRect, targetAspect As Single) As FRect
  overload: AngeliA.Extension.Envelope*
  nameWithType.vb: Extension.Envelope(FRect, Single)
  fullName.vb: AngeliA.Extension.Envelope(AngeliA.FRect, Single)
  name.vb: Envelope(FRect, Single)
- uid: AngeliA.Extension.Clamp(AngeliA.FRect@,AngeliA.FRect)
  commentId: M:AngeliA.Extension.Clamp(AngeliA.FRect@,AngeliA.FRect)
  id: Clamp(AngeliA.FRect@,AngeliA.FRect)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Clamp(ref FRect, FRect)
  nameWithType: Extension.Clamp(ref FRect, FRect)
  fullName: AngeliA.Extension.Clamp(ref AngeliA.FRect, AngeliA.FRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Clamp
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 707
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void Clamp(this ref FRect rect, FRect range)
    parameters:
    - id: rect
      type: AngeliA.FRect
    - id: range
      type: AngeliA.FRect
    content.vb: Public Shared Sub Clamp(rect As FRect, range As FRect)
  overload: AngeliA.Extension.Clamp*
  nameWithType.vb: Extension.Clamp(FRect, FRect)
  fullName.vb: AngeliA.Extension.Clamp(AngeliA.FRect, AngeliA.FRect)
  name.vb: Clamp(FRect, FRect)
- uid: AngeliA.Extension.GetClamp(AngeliA.FRect,AngeliA.FRect)
  commentId: M:AngeliA.Extension.GetClamp(AngeliA.FRect,AngeliA.FRect)
  id: GetClamp(AngeliA.FRect,AngeliA.FRect)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: GetClamp(FRect, FRect)
  nameWithType: Extension.GetClamp(FRect, FRect)
  fullName: AngeliA.Extension.GetClamp(AngeliA.FRect, AngeliA.FRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetClamp
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 714
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static FRect GetClamp(this FRect rect, FRect range)
    parameters:
    - id: rect
      type: AngeliA.FRect
    - id: range
      type: AngeliA.FRect
    return:
      type: AngeliA.FRect
    content.vb: Public Shared Function GetClamp(rect As FRect, range As FRect) As FRect
  overload: AngeliA.Extension.GetClamp*
- uid: AngeliA.Extension.BottomLeft(AngeliA.FRect)
  commentId: M:AngeliA.Extension.BottomLeft(AngeliA.FRect)
  id: BottomLeft(AngeliA.FRect)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: BottomLeft(FRect)
  nameWithType: Extension.BottomLeft(FRect)
  fullName: AngeliA.Extension.BottomLeft(AngeliA.FRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: BottomLeft
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 722
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Float2 BottomLeft(this FRect rect)
    parameters:
    - id: rect
      type: AngeliA.FRect
    return:
      type: AngeliA.Float2
    content.vb: Public Shared Function BottomLeft(rect As FRect) As Float2
  overload: AngeliA.Extension.BottomLeft*
- uid: AngeliA.Extension.BottomRight(AngeliA.FRect)
  commentId: M:AngeliA.Extension.BottomRight(AngeliA.FRect)
  id: BottomRight(AngeliA.FRect)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: BottomRight(FRect)
  nameWithType: Extension.BottomRight(FRect)
  fullName: AngeliA.Extension.BottomRight(AngeliA.FRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: BottomRight
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 723
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Float2 BottomRight(this FRect rect)
    parameters:
    - id: rect
      type: AngeliA.FRect
    return:
      type: AngeliA.Float2
    content.vb: Public Shared Function BottomRight(rect As FRect) As Float2
  overload: AngeliA.Extension.BottomRight*
- uid: AngeliA.Extension.TopLeft(AngeliA.FRect)
  commentId: M:AngeliA.Extension.TopLeft(AngeliA.FRect)
  id: TopLeft(AngeliA.FRect)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: TopLeft(FRect)
  nameWithType: Extension.TopLeft(FRect)
  fullName: AngeliA.Extension.TopLeft(AngeliA.FRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TopLeft
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 724
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Float2 TopLeft(this FRect rect)
    parameters:
    - id: rect
      type: AngeliA.FRect
    return:
      type: AngeliA.Float2
    content.vb: Public Shared Function TopLeft(rect As FRect) As Float2
  overload: AngeliA.Extension.TopLeft*
- uid: AngeliA.Extension.TopRight(AngeliA.FRect)
  commentId: M:AngeliA.Extension.TopRight(AngeliA.FRect)
  id: TopRight(AngeliA.FRect)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: TopRight(FRect)
  nameWithType: Extension.TopRight(FRect)
  fullName: AngeliA.Extension.TopRight(AngeliA.FRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TopRight
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 725
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Float2 TopRight(this FRect rect)
    parameters:
    - id: rect
      type: AngeliA.FRect
    return:
      type: AngeliA.Float2
    content.vb: Public Shared Function TopRight(rect As FRect) As Float2
  overload: AngeliA.Extension.TopRight*
- uid: AngeliA.Extension.Edge(AngeliA.FRect,AngeliA.Direction4,System.Single)
  commentId: M:AngeliA.Extension.Edge(AngeliA.FRect,AngeliA.Direction4,System.Single)
  id: Edge(AngeliA.FRect,AngeliA.Direction4,System.Single)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Edge(FRect, Direction4, float)
  nameWithType: Extension.Edge(FRect, Direction4, float)
  fullName: AngeliA.Extension.Edge(AngeliA.FRect, AngeliA.Direction4, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Edge
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 727
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static FRect Edge(this FRect rect, Direction4 edge, float thickness = 1)
    parameters:
    - id: rect
      type: AngeliA.FRect
    - id: edge
      type: AngeliA.Direction4
    - id: thickness
      type: System.Single
    return:
      type: AngeliA.FRect
    content.vb: Public Shared Function Edge(rect As FRect, edge As Direction4, thickness As Single = 1) As FRect
  overload: AngeliA.Extension.Edge*
  nameWithType.vb: Extension.Edge(FRect, Direction4, Single)
  fullName.vb: AngeliA.Extension.Edge(AngeliA.FRect, AngeliA.Direction4, Single)
  name.vb: Edge(FRect, Direction4, Single)
- uid: AngeliA.Extension.ScaleFrom(AngeliA.FRect,System.Single,System.Single,System.Single)
  commentId: M:AngeliA.Extension.ScaleFrom(AngeliA.FRect,System.Single,System.Single,System.Single)
  id: ScaleFrom(AngeliA.FRect,System.Single,System.Single,System.Single)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: ScaleFrom(FRect, float, float, float)
  nameWithType: Extension.ScaleFrom(FRect, float, float, float)
  fullName: AngeliA.Extension.ScaleFrom(AngeliA.FRect, float, float, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ScaleFrom
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 736
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static FRect ScaleFrom(this FRect rect, float scale, float pointX, float pointY)
    parameters:
    - id: rect
      type: AngeliA.FRect
    - id: scale
      type: System.Single
    - id: pointX
      type: System.Single
    - id: pointY
      type: System.Single
    return:
      type: AngeliA.FRect
    content.vb: Public Shared Function ScaleFrom(rect As FRect, scale As Single, pointX As Single, pointY As Single) As FRect
  overload: AngeliA.Extension.ScaleFrom*
  nameWithType.vb: Extension.ScaleFrom(FRect, Single, Single, Single)
  fullName.vb: AngeliA.Extension.ScaleFrom(AngeliA.FRect, Single, Single, Single)
  name.vb: ScaleFrom(FRect, Single, Single, Single)
- uid: AngeliA.Extension.ResizeFrom(AngeliA.FRect,System.Single,System.Single,System.Single,System.Single)
  commentId: M:AngeliA.Extension.ResizeFrom(AngeliA.FRect,System.Single,System.Single,System.Single,System.Single)
  id: ResizeFrom(AngeliA.FRect,System.Single,System.Single,System.Single,System.Single)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: ResizeFrom(FRect, float, float, float, float)
  nameWithType: Extension.ResizeFrom(FRect, float, float, float, float)
  fullName: AngeliA.Extension.ResizeFrom(AngeliA.FRect, float, float, float, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ResizeFrom
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 737
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static FRect ResizeFrom(this FRect rect, float newWidth, float newHeight, float pointX, float pointY)
    parameters:
    - id: rect
      type: AngeliA.FRect
    - id: newWidth
      type: System.Single
    - id: newHeight
      type: System.Single
    - id: pointX
      type: System.Single
    - id: pointY
      type: System.Single
    return:
      type: AngeliA.FRect
    content.vb: Public Shared Function ResizeFrom(rect As FRect, newWidth As Single, newHeight As Single, pointX As Single, pointY As Single) As FRect
  overload: AngeliA.Extension.ResizeFrom*
  nameWithType.vb: Extension.ResizeFrom(FRect, Single, Single, Single, Single)
  fullName.vb: AngeliA.Extension.ResizeFrom(AngeliA.FRect, Single, Single, Single, Single)
  name.vb: ResizeFrom(FRect, Single, Single, Single, Single)
- uid: AngeliA.Extension.ToIRect(AngeliA.FRect)
  commentId: M:AngeliA.Extension.ToIRect(AngeliA.FRect)
  id: ToIRect(AngeliA.FRect)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: ToIRect(FRect)
  nameWithType: Extension.ToIRect(FRect)
  fullName: AngeliA.Extension.ToIRect(AngeliA.FRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ToIRect
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 745
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect ToIRect(this FRect rect)
    parameters:
    - id: rect
      type: AngeliA.FRect
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function ToIRect(rect As FRect) As IRect
  overload: AngeliA.Extension.ToIRect*
- uid: AngeliA.Extension.ExpandToIRect(AngeliA.FRect)
  commentId: M:AngeliA.Extension.ExpandToIRect(AngeliA.FRect)
  id: ExpandToIRect(AngeliA.FRect)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: ExpandToIRect(FRect)
  nameWithType: Extension.ExpandToIRect(FRect)
  fullName: AngeliA.Extension.ExpandToIRect(AngeliA.FRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ExpandToIRect
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 747
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect ExpandToIRect(this FRect rect)
    parameters:
    - id: rect
      type: AngeliA.FRect
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function ExpandToIRect(rect As FRect) As IRect
  overload: AngeliA.Extension.ExpandToIRect*
- uid: AngeliA.Extension.ToFRect(AngeliA.IRect)
  commentId: M:AngeliA.Extension.ToFRect(AngeliA.IRect)
  id: ToFRect(AngeliA.IRect)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: ToFRect(IRect)
  nameWithType: Extension.ToFRect(IRect)
  fullName: AngeliA.Extension.ToFRect(AngeliA.IRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ToFRect
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 758
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static FRect ToFRect(this IRect rect)
    parameters:
    - id: rect
      type: AngeliA.IRect
    return:
      type: AngeliA.FRect
    content.vb: Public Shared Function ToFRect(rect As IRect) As FRect
  overload: AngeliA.Extension.ToFRect*
- uid: AngeliA.Extension.Fit(AngeliA.IRect,AngeliA.AngeSprite,System.Int32,System.Int32)
  commentId: M:AngeliA.Extension.Fit(AngeliA.IRect,AngeliA.AngeSprite,System.Int32,System.Int32)
  id: Fit(AngeliA.IRect,AngeliA.AngeSprite,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Fit(IRect, AngeSprite, int, int)
  nameWithType: Extension.Fit(IRect, AngeSprite, int, int)
  fullName: AngeliA.Extension.Fit(AngeliA.IRect, AngeliA.AngeSprite, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Fit
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 759
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect Fit(this IRect rect, AngeSprite sprite, int pivotX = 500, int pivotY = 500)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: sprite
      type: AngeliA.AngeSprite
    - id: pivotX
      type: System.Int32
    - id: pivotY
      type: System.Int32
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function Fit(rect As IRect, sprite As AngeSprite, pivotX As Integer = 500, pivotY As Integer = 500) As IRect
  overload: AngeliA.Extension.Fit*
  nameWithType.vb: Extension.Fit(IRect, AngeSprite, Integer, Integer)
  fullName.vb: AngeliA.Extension.Fit(AngeliA.IRect, AngeliA.AngeSprite, Integer, Integer)
  name.vb: Fit(IRect, AngeSprite, Integer, Integer)
- uid: AngeliA.Extension.Fit(AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Extension.Fit(AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32)
  id: Fit(AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Fit(IRect, int, int, int, int)
  nameWithType: Extension.Fit(IRect, int, int, int, int)
  fullName: AngeliA.Extension.Fit(AngeliA.IRect, int, int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Fit
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 761
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect Fit(this IRect rect, int outterWidth, int outterHeight, int pivotX = 500, int pivotY = 500)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: outterWidth
      type: System.Int32
    - id: outterHeight
      type: System.Int32
    - id: pivotX
      type: System.Int32
    - id: pivotY
      type: System.Int32
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function Fit(rect As IRect, outterWidth As Integer, outterHeight As Integer, pivotX As Integer = 500, pivotY As Integer = 500) As IRect
  overload: AngeliA.Extension.Fit*
  nameWithType.vb: Extension.Fit(IRect, Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.Extension.Fit(AngeliA.IRect, Integer, Integer, Integer, Integer)
  name.vb: Fit(IRect, Integer, Integer, Integer, Integer)
- uid: AngeliA.Extension.Envelope(AngeliA.IRect,System.Int32,System.Int32)
  commentId: M:AngeliA.Extension.Envelope(AngeliA.IRect,System.Int32,System.Int32)
  id: Envelope(AngeliA.IRect,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Envelope(IRect, int, int)
  nameWithType: Extension.Envelope(IRect, int, int)
  fullName: AngeliA.Extension.Envelope(AngeliA.IRect, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Envelope
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 777
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect Envelope(this IRect innerRect, int aspWidth, int aspHeight)
    parameters:
    - id: innerRect
      type: AngeliA.IRect
    - id: aspWidth
      type: System.Int32
    - id: aspHeight
      type: System.Int32
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function Envelope(innerRect As IRect, aspWidth As Integer, aspHeight As Integer) As IRect
  overload: AngeliA.Extension.Envelope*
  nameWithType.vb: Extension.Envelope(IRect, Integer, Integer)
  fullName.vb: AngeliA.Extension.Envelope(AngeliA.IRect, Integer, Integer)
  name.vb: Envelope(IRect, Integer, Integer)
- uid: AngeliA.Extension.Expand(AngeliA.IRect,System.Int32)
  commentId: M:AngeliA.Extension.Expand(AngeliA.IRect,System.Int32)
  id: Expand(AngeliA.IRect,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Expand(IRect, int)
  nameWithType: Extension.Expand(IRect, int)
  fullName: AngeliA.Extension.Expand(AngeliA.IRect, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Expand
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 798
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect Expand(this IRect rect, int offset)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: offset
      type: System.Int32
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function Expand(rect As IRect, offset As Integer) As IRect
  overload: AngeliA.Extension.Expand*
  nameWithType.vb: Extension.Expand(IRect, Integer)
  fullName.vb: AngeliA.Extension.Expand(AngeliA.IRect, Integer)
  name.vb: Expand(IRect, Integer)
- uid: AngeliA.Extension.ExpandHorizontal(AngeliA.IRect,System.Int32)
  commentId: M:AngeliA.Extension.ExpandHorizontal(AngeliA.IRect,System.Int32)
  id: ExpandHorizontal(AngeliA.IRect,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: ExpandHorizontal(IRect, int)
  nameWithType: Extension.ExpandHorizontal(IRect, int)
  fullName: AngeliA.Extension.ExpandHorizontal(AngeliA.IRect, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ExpandHorizontal
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 799
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect ExpandHorizontal(this IRect rect, int offset)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: offset
      type: System.Int32
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function ExpandHorizontal(rect As IRect, offset As Integer) As IRect
  overload: AngeliA.Extension.ExpandHorizontal*
  nameWithType.vb: Extension.ExpandHorizontal(IRect, Integer)
  fullName.vb: AngeliA.Extension.ExpandHorizontal(AngeliA.IRect, Integer)
  name.vb: ExpandHorizontal(IRect, Integer)
- uid: AngeliA.Extension.ExpandVertical(AngeliA.IRect,System.Int32)
  commentId: M:AngeliA.Extension.ExpandVertical(AngeliA.IRect,System.Int32)
  id: ExpandVertical(AngeliA.IRect,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: ExpandVertical(IRect, int)
  nameWithType: Extension.ExpandVertical(IRect, int)
  fullName: AngeliA.Extension.ExpandVertical(AngeliA.IRect, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ExpandVertical
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 800
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect ExpandVertical(this IRect rect, int offset)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: offset
      type: System.Int32
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function ExpandVertical(rect As IRect, offset As Integer) As IRect
  overload: AngeliA.Extension.ExpandVertical*
  nameWithType.vb: Extension.ExpandVertical(IRect, Integer)
  fullName.vb: AngeliA.Extension.ExpandVertical(AngeliA.IRect, Integer)
  name.vb: ExpandVertical(IRect, Integer)
- uid: AngeliA.Extension.Expand(AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Extension.Expand(AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32)
  id: Expand(AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Expand(IRect, int, int, int, int)
  nameWithType: Extension.Expand(IRect, int, int, int, int)
  fullName: AngeliA.Extension.Expand(AngeliA.IRect, int, int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Expand
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 802
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect Expand(this IRect rect, int l, int r, int d, int u)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: l
      type: System.Int32
    - id: r
      type: System.Int32
    - id: d
      type: System.Int32
    - id: u
      type: System.Int32
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function Expand(rect As IRect, l As Integer, r As Integer, d As Integer, u As Integer) As IRect
  overload: AngeliA.Extension.Expand*
  nameWithType.vb: Extension.Expand(IRect, Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.Extension.Expand(AngeliA.IRect, Integer, Integer, Integer, Integer)
  name.vb: Expand(IRect, Integer, Integer, Integer, Integer)
- uid: AngeliA.Extension.Expand(AngeliA.IRect,AngeliA.Int4)
  commentId: M:AngeliA.Extension.Expand(AngeliA.IRect,AngeliA.Int4)
  id: Expand(AngeliA.IRect,AngeliA.Int4)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Expand(IRect, Int4)
  nameWithType: Extension.Expand(IRect, Int4)
  fullName: AngeliA.Extension.Expand(AngeliA.IRect, AngeliA.Int4)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Expand
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 811
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect Expand(this IRect rect, Int4 offset)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: offset
      type: AngeliA.Int4
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function Expand(rect As IRect, offset As Int4) As IRect
  overload: AngeliA.Extension.Expand*
- uid: AngeliA.Extension.Shrink(AngeliA.IRect,System.Int32)
  commentId: M:AngeliA.Extension.Shrink(AngeliA.IRect,System.Int32)
  id: Shrink(AngeliA.IRect,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Shrink(IRect, int)
  nameWithType: Extension.Shrink(IRect, int)
  fullName: AngeliA.Extension.Shrink(AngeliA.IRect, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Shrink
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 819
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect Shrink(this IRect rect, int offset)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: offset
      type: System.Int32
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function Shrink(rect As IRect, offset As Integer) As IRect
  overload: AngeliA.Extension.Shrink*
  nameWithType.vb: Extension.Shrink(IRect, Integer)
  fullName.vb: AngeliA.Extension.Shrink(AngeliA.IRect, Integer)
  name.vb: Shrink(IRect, Integer)
- uid: AngeliA.Extension.Shrink(AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Extension.Shrink(AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32)
  id: Shrink(AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Shrink(IRect, int, int, int, int)
  nameWithType: Extension.Shrink(IRect, int, int, int, int)
  fullName: AngeliA.Extension.Shrink(AngeliA.IRect, int, int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Shrink
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 820
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect Shrink(this IRect rect, int l, int r, int d, int u)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: l
      type: System.Int32
    - id: r
      type: System.Int32
    - id: d
      type: System.Int32
    - id: u
      type: System.Int32
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function Shrink(rect As IRect, l As Integer, r As Integer, d As Integer, u As Integer) As IRect
  overload: AngeliA.Extension.Shrink*
  nameWithType.vb: Extension.Shrink(IRect, Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.Extension.Shrink(AngeliA.IRect, Integer, Integer, Integer, Integer)
  name.vb: Shrink(IRect, Integer, Integer, Integer, Integer)
- uid: AngeliA.Extension.Shrink(AngeliA.IRect,AngeliA.Int4)
  commentId: M:AngeliA.Extension.Shrink(AngeliA.IRect,AngeliA.Int4)
  id: Shrink(AngeliA.IRect,AngeliA.Int4)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Shrink(IRect, Int4)
  nameWithType: Extension.Shrink(IRect, Int4)
  fullName: AngeliA.Extension.Shrink(AngeliA.IRect, AngeliA.Int4)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Shrink
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 822
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect Shrink(this IRect rect, Int4 offset)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: offset
      type: AngeliA.Int4
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function Shrink(rect As IRect, offset As Int4) As IRect
  overload: AngeliA.Extension.Shrink*
- uid: AngeliA.Extension.ShrinkLeft(AngeliA.IRect,System.Int32)
  commentId: M:AngeliA.Extension.ShrinkLeft(AngeliA.IRect,System.Int32)
  id: ShrinkLeft(AngeliA.IRect,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: ShrinkLeft(IRect, int)
  nameWithType: Extension.ShrinkLeft(IRect, int)
  fullName: AngeliA.Extension.ShrinkLeft(AngeliA.IRect, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ShrinkLeft
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 831
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect ShrinkLeft(this IRect rect, int left)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: left
      type: System.Int32
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function ShrinkLeft(rect As IRect, left As Integer) As IRect
  overload: AngeliA.Extension.ShrinkLeft*
  nameWithType.vb: Extension.ShrinkLeft(IRect, Integer)
  fullName.vb: AngeliA.Extension.ShrinkLeft(AngeliA.IRect, Integer)
  name.vb: ShrinkLeft(IRect, Integer)
- uid: AngeliA.Extension.ShrinkRight(AngeliA.IRect,System.Int32)
  commentId: M:AngeliA.Extension.ShrinkRight(AngeliA.IRect,System.Int32)
  id: ShrinkRight(AngeliA.IRect,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: ShrinkRight(IRect, int)
  nameWithType: Extension.ShrinkRight(IRect, int)
  fullName: AngeliA.Extension.ShrinkRight(AngeliA.IRect, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ShrinkRight
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 838
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect ShrinkRight(this IRect rect, int right)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: right
      type: System.Int32
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function ShrinkRight(rect As IRect, right As Integer) As IRect
  overload: AngeliA.Extension.ShrinkRight*
  nameWithType.vb: Extension.ShrinkRight(IRect, Integer)
  fullName.vb: AngeliA.Extension.ShrinkRight(AngeliA.IRect, Integer)
  name.vb: ShrinkRight(IRect, Integer)
- uid: AngeliA.Extension.ShrinkDown(AngeliA.IRect,System.Int32)
  commentId: M:AngeliA.Extension.ShrinkDown(AngeliA.IRect,System.Int32)
  id: ShrinkDown(AngeliA.IRect,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: ShrinkDown(IRect, int)
  nameWithType: Extension.ShrinkDown(IRect, int)
  fullName: AngeliA.Extension.ShrinkDown(AngeliA.IRect, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ShrinkDown
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 844
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect ShrinkDown(this IRect rect, int down)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: down
      type: System.Int32
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function ShrinkDown(rect As IRect, down As Integer) As IRect
  overload: AngeliA.Extension.ShrinkDown*
  nameWithType.vb: Extension.ShrinkDown(IRect, Integer)
  fullName.vb: AngeliA.Extension.ShrinkDown(AngeliA.IRect, Integer)
  name.vb: ShrinkDown(IRect, Integer)
- uid: AngeliA.Extension.ShrinkUp(AngeliA.IRect,System.Int32)
  commentId: M:AngeliA.Extension.ShrinkUp(AngeliA.IRect,System.Int32)
  id: ShrinkUp(AngeliA.IRect,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: ShrinkUp(IRect, int)
  nameWithType: Extension.ShrinkUp(IRect, int)
  fullName: AngeliA.Extension.ShrinkUp(AngeliA.IRect, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ShrinkUp
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 851
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect ShrinkUp(this IRect rect, int up)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: up
      type: System.Int32
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function ShrinkUp(rect As IRect, up As Integer) As IRect
  overload: AngeliA.Extension.ShrinkUp*
  nameWithType.vb: Extension.ShrinkUp(IRect, Integer)
  fullName.vb: AngeliA.Extension.ShrinkUp(AngeliA.IRect, Integer)
  name.vb: ShrinkUp(IRect, Integer)
- uid: AngeliA.Extension.FlipHorizontal(AngeliA.IRect@)
  commentId: M:AngeliA.Extension.FlipHorizontal(AngeliA.IRect@)
  id: FlipHorizontal(AngeliA.IRect@)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: FlipHorizontal(ref IRect)
  nameWithType: Extension.FlipHorizontal(ref IRect)
  fullName: AngeliA.Extension.FlipHorizontal(ref AngeliA.IRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: FlipHorizontal
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 856
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void FlipHorizontal(this ref IRect rect)
    parameters:
    - id: rect
      type: AngeliA.IRect
    content.vb: Public Shared Sub FlipHorizontal(rect As IRect)
  overload: AngeliA.Extension.FlipHorizontal*
  nameWithType.vb: Extension.FlipHorizontal(IRect)
  fullName.vb: AngeliA.Extension.FlipHorizontal(AngeliA.IRect)
  name.vb: FlipHorizontal(IRect)
- uid: AngeliA.Extension.FlipVertical(AngeliA.IRect@)
  commentId: M:AngeliA.Extension.FlipVertical(AngeliA.IRect@)
  id: FlipVertical(AngeliA.IRect@)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: FlipVertical(ref IRect)
  nameWithType: Extension.FlipVertical(ref IRect)
  fullName: AngeliA.Extension.FlipVertical(ref AngeliA.IRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: FlipVertical
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 860
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void FlipVertical(this ref IRect rect)
    parameters:
    - id: rect
      type: AngeliA.IRect
    content.vb: Public Shared Sub FlipVertical(rect As IRect)
  overload: AngeliA.Extension.FlipVertical*
  nameWithType.vb: Extension.FlipVertical(IRect)
  fullName.vb: AngeliA.Extension.FlipVertical(AngeliA.IRect)
  name.vb: FlipVertical(IRect)
- uid: AngeliA.Extension.GetFlipHorizontal(AngeliA.IRect)
  commentId: M:AngeliA.Extension.GetFlipHorizontal(AngeliA.IRect)
  id: GetFlipHorizontal(AngeliA.IRect)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: GetFlipHorizontal(IRect)
  nameWithType: Extension.GetFlipHorizontal(IRect)
  fullName: AngeliA.Extension.GetFlipHorizontal(AngeliA.IRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetFlipHorizontal
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 864
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect GetFlipHorizontal(this IRect rect)
    parameters:
    - id: rect
      type: AngeliA.IRect
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function GetFlipHorizontal(rect As IRect) As IRect
  overload: AngeliA.Extension.GetFlipHorizontal*
- uid: AngeliA.Extension.GetFlipVertical(AngeliA.IRect)
  commentId: M:AngeliA.Extension.GetFlipVertical(AngeliA.IRect)
  id: GetFlipVertical(AngeliA.IRect)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: GetFlipVertical(IRect)
  nameWithType: Extension.GetFlipVertical(IRect)
  fullName: AngeliA.Extension.GetFlipVertical(AngeliA.IRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetFlipVertical
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 869
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect GetFlipVertical(this IRect rect)
    parameters:
    - id: rect
      type: AngeliA.IRect
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function GetFlipVertical(rect As IRect) As IRect
  overload: AngeliA.Extension.GetFlipVertical*
- uid: AngeliA.Extension.FlipNegative(AngeliA.IRect@)
  commentId: M:AngeliA.Extension.FlipNegative(AngeliA.IRect@)
  id: FlipNegative(AngeliA.IRect@)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: FlipNegative(ref IRect)
  nameWithType: Extension.FlipNegative(ref IRect)
  fullName: AngeliA.Extension.FlipNegative(ref AngeliA.IRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: FlipNegative
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 874
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void FlipNegative(this ref IRect rect)
    parameters:
    - id: rect
      type: AngeliA.IRect
    content.vb: Public Shared Sub FlipNegative(rect As IRect)
  overload: AngeliA.Extension.FlipNegative*
  nameWithType.vb: Extension.FlipNegative(IRect)
  fullName.vb: AngeliA.Extension.FlipNegative(AngeliA.IRect)
  name.vb: FlipNegative(IRect)
- uid: AngeliA.Extension.GetFlipNegative(AngeliA.IRect)
  commentId: M:AngeliA.Extension.GetFlipNegative(AngeliA.IRect)
  id: GetFlipNegative(AngeliA.IRect)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: GetFlipNegative(IRect)
  nameWithType: Extension.GetFlipNegative(IRect)
  fullName: AngeliA.Extension.GetFlipNegative(AngeliA.IRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetFlipNegative
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 884
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect GetFlipNegative(this IRect rect)
    parameters:
    - id: rect
      type: AngeliA.IRect
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function GetFlipNegative(rect As IRect) As IRect
  overload: AngeliA.Extension.GetFlipNegative*
- uid: AngeliA.Extension.Shift(AngeliA.IRect,System.Int32,System.Int32)
  commentId: M:AngeliA.Extension.Shift(AngeliA.IRect,System.Int32,System.Int32)
  id: Shift(AngeliA.IRect,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Shift(IRect, int, int)
  nameWithType: Extension.Shift(IRect, int, int)
  fullName: AngeliA.Extension.Shift(AngeliA.IRect, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Shift
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 896
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect Shift(this IRect rect, int x, int y)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function Shift(rect As IRect, x As Integer, y As Integer) As IRect
  overload: AngeliA.Extension.Shift*
  nameWithType.vb: Extension.Shift(IRect, Integer, Integer)
  fullName.vb: AngeliA.Extension.Shift(AngeliA.IRect, Integer, Integer)
  name.vb: Shift(IRect, Integer, Integer)
- uid: AngeliA.Extension.Shift(AngeliA.IRect,AngeliA.Int2)
  commentId: M:AngeliA.Extension.Shift(AngeliA.IRect,AngeliA.Int2)
  id: Shift(AngeliA.IRect,AngeliA.Int2)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Shift(IRect, Int2)
  nameWithType: Extension.Shift(IRect, Int2)
  fullName: AngeliA.Extension.Shift(AngeliA.IRect, AngeliA.Int2)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Shift
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 903
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect Shift(this IRect rect, Int2 offset)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: offset
      type: AngeliA.Int2
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function Shift(rect As IRect, offset As Int2) As IRect
  overload: AngeliA.Extension.Shift*
- uid: AngeliA.Extension.SetMinMax(AngeliA.IRect@,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Extension.SetMinMax(AngeliA.IRect@,System.Int32,System.Int32,System.Int32,System.Int32)
  id: SetMinMax(AngeliA.IRect@,System.Int32,System.Int32,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: SetMinMax(ref IRect, int, int, int, int)
  nameWithType: Extension.SetMinMax(ref IRect, int, int, int, int)
  fullName: AngeliA.Extension.SetMinMax(ref AngeliA.IRect, int, int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SetMinMax
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 910
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void SetMinMax(this ref IRect rect, int xMin, int xMax, int yMin, int yMax)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: xMin
      type: System.Int32
    - id: xMax
      type: System.Int32
    - id: yMin
      type: System.Int32
    - id: yMax
      type: System.Int32
    content.vb: Public Shared Sub SetMinMax(rect As IRect, xMin As Integer, xMax As Integer, yMin As Integer, yMax As Integer)
  overload: AngeliA.Extension.SetMinMax*
  nameWithType.vb: Extension.SetMinMax(IRect, Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.Extension.SetMinMax(AngeliA.IRect, Integer, Integer, Integer, Integer)
  name.vb: SetMinMax(IRect, Integer, Integer, Integer, Integer)
- uid: AngeliA.Extension.IsSame(AngeliA.IRect,AngeliA.IRect)
  commentId: M:AngeliA.Extension.IsSame(AngeliA.IRect,AngeliA.IRect)
  id: IsSame(AngeliA.IRect,AngeliA.IRect)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: IsSame(IRect, IRect)
  nameWithType: Extension.IsSame(IRect, IRect)
  fullName: AngeliA.Extension.IsSame(AngeliA.IRect, AngeliA.IRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IsSame
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 918
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool IsSame(this IRect a, IRect b)
    parameters:
    - id: a
      type: AngeliA.IRect
    - id: b
      type: AngeliA.IRect
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsSame(a As IRect, b As IRect) As Boolean
  overload: AngeliA.Extension.IsSame*
- uid: AngeliA.Extension.IsNotSame(AngeliA.IRect,AngeliA.IRect)
  commentId: M:AngeliA.Extension.IsNotSame(AngeliA.IRect,AngeliA.IRect)
  id: IsNotSame(AngeliA.IRect,AngeliA.IRect)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: IsNotSame(IRect, IRect)
  nameWithType: Extension.IsNotSame(IRect, IRect)
  fullName: AngeliA.Extension.IsNotSame(AngeliA.IRect, AngeliA.IRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IsNotSame
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 919
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool IsNotSame(this IRect a, IRect b)
    parameters:
    - id: a
      type: AngeliA.IRect
    - id: b
      type: AngeliA.IRect
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsNotSame(a As IRect, b As IRect) As Boolean
  overload: AngeliA.Extension.IsNotSame*
- uid: AngeliA.Extension.Contains(AngeliA.IRect,System.Int32,System.Int32)
  commentId: M:AngeliA.Extension.Contains(AngeliA.IRect,System.Int32,System.Int32)
  id: Contains(AngeliA.IRect,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Contains(IRect, int, int)
  nameWithType: Extension.Contains(IRect, int, int)
  fullName: AngeliA.Extension.Contains(AngeliA.IRect, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Contains
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 920
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool Contains(this IRect rect, int x, int y)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function Contains(rect As IRect, x As Integer, y As Integer) As Boolean
  overload: AngeliA.Extension.Contains*
  nameWithType.vb: Extension.Contains(IRect, Integer, Integer)
  fullName.vb: AngeliA.Extension.Contains(AngeliA.IRect, Integer, Integer)
  name.vb: Contains(IRect, Integer, Integer)
- uid: AngeliA.Extension.CenterX(AngeliA.IRect)
  commentId: M:AngeliA.Extension.CenterX(AngeliA.IRect)
  id: CenterX(AngeliA.IRect)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: CenterX(IRect)
  nameWithType: Extension.CenterX(IRect)
  fullName: AngeliA.Extension.CenterX(AngeliA.IRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: CenterX
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 921
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int CenterX(this IRect rect)
    parameters:
    - id: rect
      type: AngeliA.IRect
    return:
      type: System.Int32
    content.vb: Public Shared Function CenterX(rect As IRect) As Integer
  overload: AngeliA.Extension.CenterX*
- uid: AngeliA.Extension.CenterY(AngeliA.IRect)
  commentId: M:AngeliA.Extension.CenterY(AngeliA.IRect)
  id: CenterY(AngeliA.IRect)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: CenterY(IRect)
  nameWithType: Extension.CenterY(IRect)
  fullName: AngeliA.Extension.CenterY(AngeliA.IRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: CenterY
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 922
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int CenterY(this IRect rect)
    parameters:
    - id: rect
      type: AngeliA.IRect
    return:
      type: System.Int32
    content.vb: Public Shared Function CenterY(rect As IRect) As Integer
  overload: AngeliA.Extension.CenterY*
- uid: AngeliA.Extension.CenterInt(AngeliA.IRect)
  commentId: M:AngeliA.Extension.CenterInt(AngeliA.IRect)
  id: CenterInt(AngeliA.IRect)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: CenterInt(IRect)
  nameWithType: Extension.CenterInt(IRect)
  fullName: AngeliA.Extension.CenterInt(AngeliA.IRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: CenterInt
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 923
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Int2 CenterInt(this IRect rect)
    parameters:
    - id: rect
      type: AngeliA.IRect
    return:
      type: AngeliA.Int2
    content.vb: Public Shared Function CenterInt(rect As IRect) As Int2
  overload: AngeliA.Extension.CenterInt*
- uid: AngeliA.Extension.UDivide(AngeliA.IRect,System.Int32)
  commentId: M:AngeliA.Extension.UDivide(AngeliA.IRect,System.Int32)
  id: UDivide(AngeliA.IRect,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: UDivide(IRect, int)
  nameWithType: Extension.UDivide(IRect, int)
  fullName: AngeliA.Extension.UDivide(AngeliA.IRect, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: UDivide
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 925
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect UDivide(this IRect rect, int divide)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: divide
      type: System.Int32
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function UDivide(rect As IRect, divide As Integer) As IRect
  overload: AngeliA.Extension.UDivide*
  nameWithType.vb: Extension.UDivide(IRect, Integer)
  fullName.vb: AngeliA.Extension.UDivide(AngeliA.IRect, Integer)
  name.vb: UDivide(IRect, Integer)
- uid: AngeliA.Extension.BottomLeft(AngeliA.IRect)
  commentId: M:AngeliA.Extension.BottomLeft(AngeliA.IRect)
  id: BottomLeft(AngeliA.IRect)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: BottomLeft(IRect)
  nameWithType: Extension.BottomLeft(IRect)
  fullName: AngeliA.Extension.BottomLeft(AngeliA.IRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: BottomLeft
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 931
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Int2 BottomLeft(this IRect rect)
    parameters:
    - id: rect
      type: AngeliA.IRect
    return:
      type: AngeliA.Int2
    content.vb: Public Shared Function BottomLeft(rect As IRect) As Int2
  overload: AngeliA.Extension.BottomLeft*
- uid: AngeliA.Extension.BottomRight(AngeliA.IRect)
  commentId: M:AngeliA.Extension.BottomRight(AngeliA.IRect)
  id: BottomRight(AngeliA.IRect)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: BottomRight(IRect)
  nameWithType: Extension.BottomRight(IRect)
  fullName: AngeliA.Extension.BottomRight(AngeliA.IRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: BottomRight
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 932
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Int2 BottomRight(this IRect rect)
    parameters:
    - id: rect
      type: AngeliA.IRect
    return:
      type: AngeliA.Int2
    content.vb: Public Shared Function BottomRight(rect As IRect) As Int2
  overload: AngeliA.Extension.BottomRight*
- uid: AngeliA.Extension.TopLeft(AngeliA.IRect)
  commentId: M:AngeliA.Extension.TopLeft(AngeliA.IRect)
  id: TopLeft(AngeliA.IRect)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: TopLeft(IRect)
  nameWithType: Extension.TopLeft(IRect)
  fullName: AngeliA.Extension.TopLeft(AngeliA.IRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TopLeft
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 933
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Int2 TopLeft(this IRect rect)
    parameters:
    - id: rect
      type: AngeliA.IRect
    return:
      type: AngeliA.Int2
    content.vb: Public Shared Function TopLeft(rect As IRect) As Int2
  overload: AngeliA.Extension.TopLeft*
- uid: AngeliA.Extension.TopRight(AngeliA.IRect)
  commentId: M:AngeliA.Extension.TopRight(AngeliA.IRect)
  id: TopRight(AngeliA.IRect)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: TopRight(IRect)
  nameWithType: Extension.TopRight(IRect)
  fullName: AngeliA.Extension.TopRight(AngeliA.IRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TopRight
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 934
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Int2 TopRight(this IRect rect)
    parameters:
    - id: rect
      type: AngeliA.IRect
    return:
      type: AngeliA.Int2
    content.vb: Public Shared Function TopRight(rect As IRect) As Int2
  overload: AngeliA.Extension.TopRight*
- uid: AngeliA.Extension.MidRight(AngeliA.IRect)
  commentId: M:AngeliA.Extension.MidRight(AngeliA.IRect)
  id: MidRight(AngeliA.IRect)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: MidRight(IRect)
  nameWithType: Extension.MidRight(IRect)
  fullName: AngeliA.Extension.MidRight(AngeliA.IRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: MidRight
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 935
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Int2 MidRight(this IRect rect)
    parameters:
    - id: rect
      type: AngeliA.IRect
    return:
      type: AngeliA.Int2
    content.vb: Public Shared Function MidRight(rect As IRect) As Int2
  overload: AngeliA.Extension.MidRight*
- uid: AngeliA.Extension.MidLeft(AngeliA.IRect)
  commentId: M:AngeliA.Extension.MidLeft(AngeliA.IRect)
  id: MidLeft(AngeliA.IRect)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: MidLeft(IRect)
  nameWithType: Extension.MidLeft(IRect)
  fullName: AngeliA.Extension.MidLeft(AngeliA.IRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: MidLeft
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 936
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Int2 MidLeft(this IRect rect)
    parameters:
    - id: rect
      type: AngeliA.IRect
    return:
      type: AngeliA.Int2
    content.vb: Public Shared Function MidLeft(rect As IRect) As Int2
  overload: AngeliA.Extension.MidLeft*
- uid: AngeliA.Extension.BottomMid(AngeliA.IRect)
  commentId: M:AngeliA.Extension.BottomMid(AngeliA.IRect)
  id: BottomMid(AngeliA.IRect)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: BottomMid(IRect)
  nameWithType: Extension.BottomMid(IRect)
  fullName: AngeliA.Extension.BottomMid(AngeliA.IRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: BottomMid
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 937
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Int2 BottomMid(this IRect rect)
    parameters:
    - id: rect
      type: AngeliA.IRect
    return:
      type: AngeliA.Int2
    content.vb: Public Shared Function BottomMid(rect As IRect) As Int2
  overload: AngeliA.Extension.BottomMid*
- uid: AngeliA.Extension.TopMid(AngeliA.IRect)
  commentId: M:AngeliA.Extension.TopMid(AngeliA.IRect)
  id: TopMid(AngeliA.IRect)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: TopMid(IRect)
  nameWithType: Extension.TopMid(IRect)
  fullName: AngeliA.Extension.TopMid(AngeliA.IRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TopMid
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 938
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Int2 TopMid(this IRect rect)
    parameters:
    - id: rect
      type: AngeliA.IRect
    return:
      type: AngeliA.Int2
    content.vb: Public Shared Function TopMid(rect As IRect) As Int2
  overload: AngeliA.Extension.TopMid*
- uid: AngeliA.Extension.ClampPositionInside(AngeliA.IRect@,AngeliA.IRect)
  commentId: M:AngeliA.Extension.ClampPositionInside(AngeliA.IRect@,AngeliA.IRect)
  id: ClampPositionInside(AngeliA.IRect@,AngeliA.IRect)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: ClampPositionInside(ref IRect, IRect)
  nameWithType: Extension.ClampPositionInside(ref IRect, IRect)
  fullName: AngeliA.Extension.ClampPositionInside(ref AngeliA.IRect, AngeliA.IRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ClampPositionInside
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 940
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void ClampPositionInside(this ref IRect rect, IRect bounds)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: bounds
      type: AngeliA.IRect
    content.vb: Public Shared Sub ClampPositionInside(rect As IRect, bounds As IRect)
  overload: AngeliA.Extension.ClampPositionInside*
  nameWithType.vb: Extension.ClampPositionInside(IRect, IRect)
  fullName.vb: AngeliA.Extension.ClampPositionInside(AngeliA.IRect, AngeliA.IRect)
  name.vb: ClampPositionInside(IRect, IRect)
- uid: AngeliA.Extension.LerpTo(AngeliA.IRect,AngeliA.IRect,System.Int32)
  commentId: M:AngeliA.Extension.LerpTo(AngeliA.IRect,AngeliA.IRect,System.Int32)
  id: LerpTo(AngeliA.IRect,AngeliA.IRect,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: LerpTo(IRect, IRect, int)
  nameWithType: Extension.LerpTo(IRect, IRect, int)
  fullName: AngeliA.Extension.LerpTo(AngeliA.IRect, AngeliA.IRect, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: LerpTo
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 946
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect LerpTo(this IRect from, IRect to, int lerpRate)
    parameters:
    - id: from
      type: AngeliA.IRect
    - id: to
      type: AngeliA.IRect
    - id: lerpRate
      type: System.Int32
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function LerpTo(from As IRect, [to] As IRect, lerpRate As Integer) As IRect
  overload: AngeliA.Extension.LerpTo*
  nameWithType.vb: Extension.LerpTo(IRect, IRect, Integer)
  fullName.vb: AngeliA.Extension.LerpTo(AngeliA.IRect, AngeliA.IRect, Integer)
  name.vb: LerpTo(IRect, IRect, Integer)
- uid: AngeliA.Extension.LerpTo(AngeliA.IRect,AngeliA.IRect,System.Single)
  commentId: M:AngeliA.Extension.LerpTo(AngeliA.IRect,AngeliA.IRect,System.Single)
  id: LerpTo(AngeliA.IRect,AngeliA.IRect,System.Single)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: LerpTo(IRect, IRect, float)
  nameWithType: Extension.LerpTo(IRect, IRect, float)
  fullName: AngeliA.Extension.LerpTo(AngeliA.IRect, AngeliA.IRect, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: LerpTo
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 956
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect LerpTo(this IRect from, IRect to, float lerp)
    parameters:
    - id: from
      type: AngeliA.IRect
    - id: to
      type: AngeliA.IRect
    - id: lerp
      type: System.Single
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function LerpTo(from As IRect, [to] As IRect, lerp As Single) As IRect
  overload: AngeliA.Extension.LerpTo*
  nameWithType.vb: Extension.LerpTo(IRect, IRect, Single)
  fullName.vb: AngeliA.Extension.LerpTo(AngeliA.IRect, AngeliA.IRect, Single)
  name.vb: LerpTo(IRect, IRect, Single)
- uid: AngeliA.Extension.EdgeInsideLeft(AngeliA.IRect,System.Int32)
  commentId: M:AngeliA.Extension.EdgeInsideLeft(AngeliA.IRect,System.Int32)
  id: EdgeInsideLeft(AngeliA.IRect,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: EdgeInsideLeft(IRect, int)
  nameWithType: Extension.EdgeInsideLeft(IRect, int)
  fullName: AngeliA.Extension.EdgeInsideLeft(AngeliA.IRect, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: EdgeInsideLeft
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 966
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect EdgeInsideLeft(this IRect rect, int size)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: size
      type: System.Int32
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function EdgeInsideLeft(rect As IRect, size As Integer) As IRect
  overload: AngeliA.Extension.EdgeInsideLeft*
  nameWithType.vb: Extension.EdgeInsideLeft(IRect, Integer)
  fullName.vb: AngeliA.Extension.EdgeInsideLeft(AngeliA.IRect, Integer)
  name.vb: EdgeInsideLeft(IRect, Integer)
- uid: AngeliA.Extension.EdgeInsideRight(AngeliA.IRect,System.Int32)
  commentId: M:AngeliA.Extension.EdgeInsideRight(AngeliA.IRect,System.Int32)
  id: EdgeInsideRight(AngeliA.IRect,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: EdgeInsideRight(IRect, int)
  nameWithType: Extension.EdgeInsideRight(IRect, int)
  fullName: AngeliA.Extension.EdgeInsideRight(AngeliA.IRect, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: EdgeInsideRight
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 967
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect EdgeInsideRight(this IRect rect, int size)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: size
      type: System.Int32
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function EdgeInsideRight(rect As IRect, size As Integer) As IRect
  overload: AngeliA.Extension.EdgeInsideRight*
  nameWithType.vb: Extension.EdgeInsideRight(IRect, Integer)
  fullName.vb: AngeliA.Extension.EdgeInsideRight(AngeliA.IRect, Integer)
  name.vb: EdgeInsideRight(IRect, Integer)
- uid: AngeliA.Extension.EdgeInsideDown(AngeliA.IRect,System.Int32)
  commentId: M:AngeliA.Extension.EdgeInsideDown(AngeliA.IRect,System.Int32)
  id: EdgeInsideDown(AngeliA.IRect,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: EdgeInsideDown(IRect, int)
  nameWithType: Extension.EdgeInsideDown(IRect, int)
  fullName: AngeliA.Extension.EdgeInsideDown(AngeliA.IRect, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: EdgeInsideDown
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 968
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect EdgeInsideDown(this IRect rect, int size)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: size
      type: System.Int32
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function EdgeInsideDown(rect As IRect, size As Integer) As IRect
  overload: AngeliA.Extension.EdgeInsideDown*
  nameWithType.vb: Extension.EdgeInsideDown(IRect, Integer)
  fullName.vb: AngeliA.Extension.EdgeInsideDown(AngeliA.IRect, Integer)
  name.vb: EdgeInsideDown(IRect, Integer)
- uid: AngeliA.Extension.EdgeInsideUp(AngeliA.IRect,System.Int32)
  commentId: M:AngeliA.Extension.EdgeInsideUp(AngeliA.IRect,System.Int32)
  id: EdgeInsideUp(AngeliA.IRect,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: EdgeInsideUp(IRect, int)
  nameWithType: Extension.EdgeInsideUp(IRect, int)
  fullName: AngeliA.Extension.EdgeInsideUp(AngeliA.IRect, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: EdgeInsideUp
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 969
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect EdgeInsideUp(this IRect rect, int size)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: size
      type: System.Int32
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function EdgeInsideUp(rect As IRect, size As Integer) As IRect
  overload: AngeliA.Extension.EdgeInsideUp*
  nameWithType.vb: Extension.EdgeInsideUp(IRect, Integer)
  fullName.vb: AngeliA.Extension.EdgeInsideUp(AngeliA.IRect, Integer)
  name.vb: EdgeInsideUp(IRect, Integer)
- uid: AngeliA.Extension.EdgeOutsideLeft(AngeliA.IRect,System.Int32)
  commentId: M:AngeliA.Extension.EdgeOutsideLeft(AngeliA.IRect,System.Int32)
  id: EdgeOutsideLeft(AngeliA.IRect,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: EdgeOutsideLeft(IRect, int)
  nameWithType: Extension.EdgeOutsideLeft(IRect, int)
  fullName: AngeliA.Extension.EdgeOutsideLeft(AngeliA.IRect, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: EdgeOutsideLeft
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 971
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect EdgeOutsideLeft(this IRect rect, int size)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: size
      type: System.Int32
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function EdgeOutsideLeft(rect As IRect, size As Integer) As IRect
  overload: AngeliA.Extension.EdgeOutsideLeft*
  nameWithType.vb: Extension.EdgeOutsideLeft(IRect, Integer)
  fullName.vb: AngeliA.Extension.EdgeOutsideLeft(AngeliA.IRect, Integer)
  name.vb: EdgeOutsideLeft(IRect, Integer)
- uid: AngeliA.Extension.EdgeOutsideRight(AngeliA.IRect,System.Int32)
  commentId: M:AngeliA.Extension.EdgeOutsideRight(AngeliA.IRect,System.Int32)
  id: EdgeOutsideRight(AngeliA.IRect,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: EdgeOutsideRight(IRect, int)
  nameWithType: Extension.EdgeOutsideRight(IRect, int)
  fullName: AngeliA.Extension.EdgeOutsideRight(AngeliA.IRect, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: EdgeOutsideRight
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 972
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect EdgeOutsideRight(this IRect rect, int size)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: size
      type: System.Int32
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function EdgeOutsideRight(rect As IRect, size As Integer) As IRect
  overload: AngeliA.Extension.EdgeOutsideRight*
  nameWithType.vb: Extension.EdgeOutsideRight(IRect, Integer)
  fullName.vb: AngeliA.Extension.EdgeOutsideRight(AngeliA.IRect, Integer)
  name.vb: EdgeOutsideRight(IRect, Integer)
- uid: AngeliA.Extension.EdgeOutsideDown(AngeliA.IRect,System.Int32)
  commentId: M:AngeliA.Extension.EdgeOutsideDown(AngeliA.IRect,System.Int32)
  id: EdgeOutsideDown(AngeliA.IRect,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: EdgeOutsideDown(IRect, int)
  nameWithType: Extension.EdgeOutsideDown(IRect, int)
  fullName: AngeliA.Extension.EdgeOutsideDown(AngeliA.IRect, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: EdgeOutsideDown
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 973
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect EdgeOutsideDown(this IRect rect, int size)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: size
      type: System.Int32
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function EdgeOutsideDown(rect As IRect, size As Integer) As IRect
  overload: AngeliA.Extension.EdgeOutsideDown*
  nameWithType.vb: Extension.EdgeOutsideDown(IRect, Integer)
  fullName.vb: AngeliA.Extension.EdgeOutsideDown(AngeliA.IRect, Integer)
  name.vb: EdgeOutsideDown(IRect, Integer)
- uid: AngeliA.Extension.EdgeOutsideUp(AngeliA.IRect,System.Int32)
  commentId: M:AngeliA.Extension.EdgeOutsideUp(AngeliA.IRect,System.Int32)
  id: EdgeOutsideUp(AngeliA.IRect,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: EdgeOutsideUp(IRect, int)
  nameWithType: Extension.EdgeOutsideUp(IRect, int)
  fullName: AngeliA.Extension.EdgeOutsideUp(AngeliA.IRect, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: EdgeOutsideUp
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 974
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect EdgeOutsideUp(this IRect rect, int size)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: size
      type: System.Int32
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function EdgeOutsideUp(rect As IRect, size As Integer) As IRect
  overload: AngeliA.Extension.EdgeOutsideUp*
  nameWithType.vb: Extension.EdgeOutsideUp(IRect, Integer)
  fullName.vb: AngeliA.Extension.EdgeOutsideUp(AngeliA.IRect, Integer)
  name.vb: EdgeOutsideUp(IRect, Integer)
- uid: AngeliA.Extension.EdgeInsideSquareLeft(AngeliA.IRect)
  commentId: M:AngeliA.Extension.EdgeInsideSquareLeft(AngeliA.IRect)
  id: EdgeInsideSquareLeft(AngeliA.IRect)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: EdgeInsideSquareLeft(IRect)
  nameWithType: Extension.EdgeInsideSquareLeft(IRect)
  fullName: AngeliA.Extension.EdgeInsideSquareLeft(AngeliA.IRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: EdgeInsideSquareLeft
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 976
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect EdgeInsideSquareLeft(this IRect rect)
    parameters:
    - id: rect
      type: AngeliA.IRect
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function EdgeInsideSquareLeft(rect As IRect) As IRect
  overload: AngeliA.Extension.EdgeInsideSquareLeft*
- uid: AngeliA.Extension.EdgeInsideSquareRight(AngeliA.IRect)
  commentId: M:AngeliA.Extension.EdgeInsideSquareRight(AngeliA.IRect)
  id: EdgeInsideSquareRight(AngeliA.IRect)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: EdgeInsideSquareRight(IRect)
  nameWithType: Extension.EdgeInsideSquareRight(IRect)
  fullName: AngeliA.Extension.EdgeInsideSquareRight(AngeliA.IRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: EdgeInsideSquareRight
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 977
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect EdgeInsideSquareRight(this IRect rect)
    parameters:
    - id: rect
      type: AngeliA.IRect
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function EdgeInsideSquareRight(rect As IRect) As IRect
  overload: AngeliA.Extension.EdgeInsideSquareRight*
- uid: AngeliA.Extension.EdgeInsideSquareDown(AngeliA.IRect)
  commentId: M:AngeliA.Extension.EdgeInsideSquareDown(AngeliA.IRect)
  id: EdgeInsideSquareDown(AngeliA.IRect)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: EdgeInsideSquareDown(IRect)
  nameWithType: Extension.EdgeInsideSquareDown(IRect)
  fullName: AngeliA.Extension.EdgeInsideSquareDown(AngeliA.IRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: EdgeInsideSquareDown
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 978
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect EdgeInsideSquareDown(this IRect rect)
    parameters:
    - id: rect
      type: AngeliA.IRect
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function EdgeInsideSquareDown(rect As IRect) As IRect
  overload: AngeliA.Extension.EdgeInsideSquareDown*
- uid: AngeliA.Extension.EdgeInsideSquareUp(AngeliA.IRect)
  commentId: M:AngeliA.Extension.EdgeInsideSquareUp(AngeliA.IRect)
  id: EdgeInsideSquareUp(AngeliA.IRect)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: EdgeInsideSquareUp(IRect)
  nameWithType: Extension.EdgeInsideSquareUp(IRect)
  fullName: AngeliA.Extension.EdgeInsideSquareUp(AngeliA.IRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: EdgeInsideSquareUp
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 979
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect EdgeInsideSquareUp(this IRect rect)
    parameters:
    - id: rect
      type: AngeliA.IRect
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function EdgeInsideSquareUp(rect As IRect) As IRect
  overload: AngeliA.Extension.EdgeInsideSquareUp*
- uid: AngeliA.Extension.EdgeInside(AngeliA.IRect,AngeliA.Direction4,System.Int32)
  commentId: M:AngeliA.Extension.EdgeInside(AngeliA.IRect,AngeliA.Direction4,System.Int32)
  id: EdgeInside(AngeliA.IRect,AngeliA.Direction4,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: EdgeInside(IRect, Direction4, int)
  nameWithType: Extension.EdgeInside(IRect, Direction4, int)
  fullName: AngeliA.Extension.EdgeInside(AngeliA.IRect, AngeliA.Direction4, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: EdgeInside
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 981
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect EdgeInside(this IRect rect, Direction4 edge, int size = 1)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: edge
      type: AngeliA.Direction4
    - id: size
      type: System.Int32
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function EdgeInside(rect As IRect, edge As Direction4, size As Integer = 1) As IRect
  overload: AngeliA.Extension.EdgeInside*
  nameWithType.vb: Extension.EdgeInside(IRect, Direction4, Integer)
  fullName.vb: AngeliA.Extension.EdgeInside(AngeliA.IRect, AngeliA.Direction4, Integer)
  name.vb: EdgeInside(IRect, Direction4, Integer)
- uid: AngeliA.Extension.EdgeExact(AngeliA.IRect,AngeliA.Direction4,System.Int32)
  commentId: M:AngeliA.Extension.EdgeExact(AngeliA.IRect,AngeliA.Direction4,System.Int32)
  id: EdgeExact(AngeliA.IRect,AngeliA.Direction4,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: EdgeExact(IRect, Direction4, int)
  nameWithType: Extension.EdgeExact(IRect, Direction4, int)
  fullName: AngeliA.Extension.EdgeExact(AngeliA.IRect, AngeliA.Direction4, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: EdgeExact
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 990
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect EdgeExact(this IRect rect, Direction4 edge, int size = 1)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: edge
      type: AngeliA.Direction4
    - id: size
      type: System.Int32
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function EdgeExact(rect As IRect, edge As Direction4, size As Integer = 1) As IRect
  overload: AngeliA.Extension.EdgeExact*
  nameWithType.vb: Extension.EdgeExact(IRect, Direction4, Integer)
  fullName.vb: AngeliA.Extension.EdgeExact(AngeliA.IRect, AngeliA.Direction4, Integer)
  name.vb: EdgeExact(IRect, Direction4, Integer)
- uid: AngeliA.Extension.EdgeOutside(AngeliA.IRect,AngeliA.Direction4,System.Int32)
  commentId: M:AngeliA.Extension.EdgeOutside(AngeliA.IRect,AngeliA.Direction4,System.Int32)
  id: EdgeOutside(AngeliA.IRect,AngeliA.Direction4,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: EdgeOutside(IRect, Direction4, int)
  nameWithType: Extension.EdgeOutside(IRect, Direction4, int)
  fullName: AngeliA.Extension.EdgeOutside(AngeliA.IRect, AngeliA.Direction4, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: EdgeOutside
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 999
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect EdgeOutside(this IRect rect, Direction4 edge, int size = 1)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: edge
      type: AngeliA.Direction4
    - id: size
      type: System.Int32
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function EdgeOutside(rect As IRect, edge As Direction4, size As Integer = 1) As IRect
  overload: AngeliA.Extension.EdgeOutside*
  nameWithType.vb: Extension.EdgeOutside(IRect, Direction4, Integer)
  fullName.vb: AngeliA.Extension.EdgeOutside(AngeliA.IRect, AngeliA.Direction4, Integer)
  name.vb: EdgeOutside(IRect, Direction4, Integer)
- uid: AngeliA.Extension.CornerInside(AngeliA.IRect,AngeliA.Alignment,System.Int32)
  commentId: M:AngeliA.Extension.CornerInside(AngeliA.IRect,AngeliA.Alignment,System.Int32)
  id: CornerInside(AngeliA.IRect,AngeliA.Alignment,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: CornerInside(IRect, Alignment, int)
  nameWithType: Extension.CornerInside(IRect, Alignment, int)
  fullName: AngeliA.Extension.CornerInside(AngeliA.IRect, AngeliA.Alignment, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: CornerInside
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1008
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect CornerInside(this IRect rect, Alignment corner, int size)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: corner
      type: AngeliA.Alignment
    - id: size
      type: System.Int32
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function CornerInside(rect As IRect, corner As Alignment, size As Integer) As IRect
  overload: AngeliA.Extension.CornerInside*
  nameWithType.vb: Extension.CornerInside(IRect, Alignment, Integer)
  fullName.vb: AngeliA.Extension.CornerInside(AngeliA.IRect, AngeliA.Alignment, Integer)
  name.vb: CornerInside(IRect, Alignment, Integer)
- uid: AngeliA.Extension.CornerInside(AngeliA.IRect,AngeliA.Alignment,System.Int32,System.Int32)
  commentId: M:AngeliA.Extension.CornerInside(AngeliA.IRect,AngeliA.Alignment,System.Int32,System.Int32)
  id: CornerInside(AngeliA.IRect,AngeliA.Alignment,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: CornerInside(IRect, Alignment, int, int)
  nameWithType: Extension.CornerInside(IRect, Alignment, int, int)
  fullName: AngeliA.Extension.CornerInside(AngeliA.IRect, AngeliA.Alignment, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: CornerInside
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1011
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect CornerInside(this IRect rect, Alignment corner, int width, int height)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: corner
      type: AngeliA.Alignment
    - id: width
      type: System.Int32
    - id: height
      type: System.Int32
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function CornerInside(rect As IRect, corner As Alignment, width As Integer, height As Integer) As IRect
  overload: AngeliA.Extension.CornerInside*
  nameWithType.vb: Extension.CornerInside(IRect, Alignment, Integer, Integer)
  fullName.vb: AngeliA.Extension.CornerInside(AngeliA.IRect, AngeliA.Alignment, Integer, Integer)
  name.vb: CornerInside(IRect, Alignment, Integer, Integer)
- uid: AngeliA.Extension.CornerOutside(AngeliA.IRect,AngeliA.Alignment,System.Int32)
  commentId: M:AngeliA.Extension.CornerOutside(AngeliA.IRect,AngeliA.Alignment,System.Int32)
  id: CornerOutside(AngeliA.IRect,AngeliA.Alignment,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: CornerOutside(IRect, Alignment, int)
  nameWithType: Extension.CornerOutside(IRect, Alignment, int)
  fullName: AngeliA.Extension.CornerOutside(AngeliA.IRect, AngeliA.Alignment, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: CornerOutside
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1020
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect CornerOutside(this IRect rect, Alignment corner, int size)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: corner
      type: AngeliA.Alignment
    - id: size
      type: System.Int32
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function CornerOutside(rect As IRect, corner As Alignment, size As Integer) As IRect
  overload: AngeliA.Extension.CornerOutside*
  nameWithType.vb: Extension.CornerOutside(IRect, Alignment, Integer)
  fullName.vb: AngeliA.Extension.CornerOutside(AngeliA.IRect, AngeliA.Alignment, Integer)
  name.vb: CornerOutside(IRect, Alignment, Integer)
- uid: AngeliA.Extension.CornerOutside(AngeliA.IRect,AngeliA.Alignment,System.Int32,System.Int32)
  commentId: M:AngeliA.Extension.CornerOutside(AngeliA.IRect,AngeliA.Alignment,System.Int32,System.Int32)
  id: CornerOutside(AngeliA.IRect,AngeliA.Alignment,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: CornerOutside(IRect, Alignment, int, int)
  nameWithType: Extension.CornerOutside(IRect, Alignment, int, int)
  fullName: AngeliA.Extension.CornerOutside(AngeliA.IRect, AngeliA.Alignment, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: CornerOutside
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1023
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect CornerOutside(this IRect rect, Alignment corner, int width, int height)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: corner
      type: AngeliA.Alignment
    - id: width
      type: System.Int32
    - id: height
      type: System.Int32
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function CornerOutside(rect As IRect, corner As Alignment, width As Integer, height As Integer) As IRect
  overload: AngeliA.Extension.CornerOutside*
  nameWithType.vb: Extension.CornerOutside(IRect, Alignment, Integer, Integer)
  fullName.vb: AngeliA.Extension.CornerOutside(AngeliA.IRect, AngeliA.Alignment, Integer, Integer)
  name.vb: CornerOutside(IRect, Alignment, Integer, Integer)
- uid: AngeliA.Extension.ScaleFrom(AngeliA.IRect,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Extension.ScaleFrom(AngeliA.IRect,System.Int32,System.Int32,System.Int32)
  id: ScaleFrom(AngeliA.IRect,System.Int32,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: ScaleFrom(IRect, int, int, int)
  nameWithType: Extension.ScaleFrom(IRect, int, int, int)
  fullName: AngeliA.Extension.ScaleFrom(AngeliA.IRect, int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ScaleFrom
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1032
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect ScaleFrom(this IRect rect, int scale, int pointX, int pointY)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: scale
      type: System.Int32
    - id: pointX
      type: System.Int32
    - id: pointY
      type: System.Int32
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function ScaleFrom(rect As IRect, scale As Integer, pointX As Integer, pointY As Integer) As IRect
  overload: AngeliA.Extension.ScaleFrom*
  nameWithType.vb: Extension.ScaleFrom(IRect, Integer, Integer, Integer)
  fullName.vb: AngeliA.Extension.ScaleFrom(AngeliA.IRect, Integer, Integer, Integer)
  name.vb: ScaleFrom(IRect, Integer, Integer, Integer)
- uid: AngeliA.Extension.ScaleFrom(AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Extension.ScaleFrom(AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32)
  id: ScaleFrom(AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: ScaleFrom(IRect, int, int, int, int)
  nameWithType: Extension.ScaleFrom(IRect, int, int, int, int)
  fullName: AngeliA.Extension.ScaleFrom(AngeliA.IRect, int, int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ScaleFrom
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1033
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect ScaleFrom(this IRect rect, int scaleX, int scaleY, int pointX, int pointY)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: scaleX
      type: System.Int32
    - id: scaleY
      type: System.Int32
    - id: pointX
      type: System.Int32
    - id: pointY
      type: System.Int32
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function ScaleFrom(rect As IRect, scaleX As Integer, scaleY As Integer, pointX As Integer, pointY As Integer) As IRect
  overload: AngeliA.Extension.ScaleFrom*
  nameWithType.vb: Extension.ScaleFrom(IRect, Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.Extension.ScaleFrom(AngeliA.IRect, Integer, Integer, Integer, Integer)
  name.vb: ScaleFrom(IRect, Integer, Integer, Integer, Integer)
- uid: AngeliA.Extension.ScaleFrom(AngeliA.IRect,System.Single,System.Int32,System.Int32)
  commentId: M:AngeliA.Extension.ScaleFrom(AngeliA.IRect,System.Single,System.Int32,System.Int32)
  id: ScaleFrom(AngeliA.IRect,System.Single,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: ScaleFrom(IRect, float, int, int)
  nameWithType: Extension.ScaleFrom(IRect, float, int, int)
  fullName: AngeliA.Extension.ScaleFrom(AngeliA.IRect, float, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ScaleFrom
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1034
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect ScaleFrom(this IRect rect, float scale01, int pointX, int pointY)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: scale01
      type: System.Single
    - id: pointX
      type: System.Int32
    - id: pointY
      type: System.Int32
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function ScaleFrom(rect As IRect, scale01 As Single, pointX As Integer, pointY As Integer) As IRect
  overload: AngeliA.Extension.ScaleFrom*
  nameWithType.vb: Extension.ScaleFrom(IRect, Single, Integer, Integer)
  fullName.vb: AngeliA.Extension.ScaleFrom(AngeliA.IRect, Single, Integer, Integer)
  name.vb: ScaleFrom(IRect, Single, Integer, Integer)
- uid: AngeliA.Extension.ScaleFrom(AngeliA.IRect,System.Single,System.Single,System.Int32,System.Int32)
  commentId: M:AngeliA.Extension.ScaleFrom(AngeliA.IRect,System.Single,System.Single,System.Int32,System.Int32)
  id: ScaleFrom(AngeliA.IRect,System.Single,System.Single,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: ScaleFrom(IRect, float, float, int, int)
  nameWithType: Extension.ScaleFrom(IRect, float, float, int, int)
  fullName: AngeliA.Extension.ScaleFrom(AngeliA.IRect, float, float, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ScaleFrom
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1035
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect ScaleFrom(this IRect rect, float scaleX01, float scaleY01, int pointX, int pointY)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: scaleX01
      type: System.Single
    - id: scaleY01
      type: System.Single
    - id: pointX
      type: System.Int32
    - id: pointY
      type: System.Int32
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function ScaleFrom(rect As IRect, scaleX01 As Single, scaleY01 As Single, pointX As Integer, pointY As Integer) As IRect
  overload: AngeliA.Extension.ScaleFrom*
  nameWithType.vb: Extension.ScaleFrom(IRect, Single, Single, Integer, Integer)
  fullName.vb: AngeliA.Extension.ScaleFrom(AngeliA.IRect, Single, Single, Integer, Integer)
  name.vb: ScaleFrom(IRect, Single, Single, Integer, Integer)
- uid: AngeliA.Extension.ResizeFrom(AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Extension.ResizeFrom(AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32)
  id: ResizeFrom(AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: ResizeFrom(IRect, int, int, int, int)
  nameWithType: Extension.ResizeFrom(IRect, int, int, int, int)
  fullName: AngeliA.Extension.ResizeFrom(AngeliA.IRect, int, int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ResizeFrom
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1037
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect ResizeFrom(this IRect rect, int newWidth, int newHeight, int pointX, int pointY)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: newWidth
      type: System.Int32
    - id: newHeight
      type: System.Int32
    - id: pointX
      type: System.Int32
    - id: pointY
      type: System.Int32
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function ResizeFrom(rect As IRect, newWidth As Integer, newHeight As Integer, pointX As Integer, pointY As Integer) As IRect
  overload: AngeliA.Extension.ResizeFrom*
  nameWithType.vb: Extension.ResizeFrom(IRect, Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.Extension.ResizeFrom(AngeliA.IRect, Integer, Integer, Integer, Integer)
  name.vb: ResizeFrom(IRect, Integer, Integer, Integer, Integer)
- uid: AngeliA.Extension.CompleteInside(AngeliA.IRect,AngeliA.IRect)
  commentId: M:AngeliA.Extension.CompleteInside(AngeliA.IRect,AngeliA.IRect)
  id: CompleteInside(AngeliA.IRect,AngeliA.IRect)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: CompleteInside(IRect, IRect)
  nameWithType: Extension.CompleteInside(IRect, IRect)
  fullName: AngeliA.Extension.CompleteInside(AngeliA.IRect, AngeliA.IRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: CompleteInside
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1046
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool CompleteInside(this IRect rect, IRect range)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: range
      type: AngeliA.IRect
    return:
      type: System.Boolean
    content.vb: Public Shared Function CompleteInside(rect As IRect, range As IRect) As Boolean
  overload: AngeliA.Extension.CompleteInside*
- uid: AngeliA.Extension.CompleteInside(AngeliA.FRect,AngeliA.FRect)
  commentId: M:AngeliA.Extension.CompleteInside(AngeliA.FRect,AngeliA.FRect)
  id: CompleteInside(AngeliA.FRect,AngeliA.FRect)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: CompleteInside(FRect, FRect)
  nameWithType: Extension.CompleteInside(FRect, FRect)
  fullName: AngeliA.Extension.CompleteInside(AngeliA.FRect, AngeliA.FRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: CompleteInside
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1049
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool CompleteInside(this FRect rect, FRect range)
    parameters:
    - id: rect
      type: AngeliA.FRect
    - id: range
      type: AngeliA.FRect
    return:
      type: System.Boolean
    content.vb: Public Shared Function CompleteInside(rect As FRect, range As FRect) As Boolean
  overload: AngeliA.Extension.CompleteInside*
- uid: AngeliA.Extension.Clamp(AngeliA.IRect,AngeliA.IRect)
  commentId: M:AngeliA.Extension.Clamp(AngeliA.IRect,AngeliA.IRect)
  id: Clamp(AngeliA.IRect,AngeliA.IRect)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Clamp(IRect, IRect)
  nameWithType: Extension.Clamp(IRect, IRect)
  fullName: AngeliA.Extension.Clamp(AngeliA.IRect, AngeliA.IRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Clamp
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1052
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect Clamp(this IRect rect, IRect range)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: range
      type: AngeliA.IRect
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function Clamp(rect As IRect, range As IRect) As IRect
  overload: AngeliA.Extension.Clamp*
- uid: AngeliA.Extension.SlideLeft(AngeliA.IRect@,System.Int32)
  commentId: M:AngeliA.Extension.SlideLeft(AngeliA.IRect@,System.Int32)
  id: SlideLeft(AngeliA.IRect@,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: SlideLeft(ref IRect, int)
  nameWithType: Extension.SlideLeft(ref IRect, int)
  fullName: AngeliA.Extension.SlideLeft(ref AngeliA.IRect, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SlideLeft
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1073
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Move the rect left by it's width.
  example: []
  syntax:
    content: public static void SlideLeft(this ref IRect rect, int padding = 0)
    parameters:
    - id: rect
      type: AngeliA.IRect
      description: ''
    - id: padding
      type: System.Int32
      description: Extra distance to move
    content.vb: Public Shared Sub SlideLeft(rect As IRect, padding As Integer = 0)
  overload: AngeliA.Extension.SlideLeft*
  nameWithType.vb: Extension.SlideLeft(IRect, Integer)
  fullName.vb: AngeliA.Extension.SlideLeft(AngeliA.IRect, Integer)
  name.vb: SlideLeft(IRect, Integer)
- uid: AngeliA.Extension.SlideRight(AngeliA.IRect@,System.Int32)
  commentId: M:AngeliA.Extension.SlideRight(AngeliA.IRect@,System.Int32)
  id: SlideRight(AngeliA.IRect@,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: SlideRight(ref IRect, int)
  nameWithType: Extension.SlideRight(ref IRect, int)
  fullName: AngeliA.Extension.SlideRight(ref AngeliA.IRect, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SlideRight
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1079
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Move the rect right by it's width.
  example: []
  syntax:
    content: public static void SlideRight(this ref IRect rect, int padding = 0)
    parameters:
    - id: rect
      type: AngeliA.IRect
      description: ''
    - id: padding
      type: System.Int32
      description: Extra distance to move
    content.vb: Public Shared Sub SlideRight(rect As IRect, padding As Integer = 0)
  overload: AngeliA.Extension.SlideRight*
  nameWithType.vb: Extension.SlideRight(IRect, Integer)
  fullName.vb: AngeliA.Extension.SlideRight(AngeliA.IRect, Integer)
  name.vb: SlideRight(IRect, Integer)
- uid: AngeliA.Extension.SlideDown(AngeliA.IRect@,System.Int32)
  commentId: M:AngeliA.Extension.SlideDown(AngeliA.IRect@,System.Int32)
  id: SlideDown(AngeliA.IRect@,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: SlideDown(ref IRect, int)
  nameWithType: Extension.SlideDown(ref IRect, int)
  fullName: AngeliA.Extension.SlideDown(ref AngeliA.IRect, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SlideDown
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1085
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Move the rect down by it's height.
  example: []
  syntax:
    content: public static void SlideDown(this ref IRect rect, int padding = 0)
    parameters:
    - id: rect
      type: AngeliA.IRect
      description: ''
    - id: padding
      type: System.Int32
      description: Extra distance to move
    content.vb: Public Shared Sub SlideDown(rect As IRect, padding As Integer = 0)
  overload: AngeliA.Extension.SlideDown*
  nameWithType.vb: Extension.SlideDown(IRect, Integer)
  fullName.vb: AngeliA.Extension.SlideDown(AngeliA.IRect, Integer)
  name.vb: SlideDown(IRect, Integer)
- uid: AngeliA.Extension.SlideUp(AngeliA.IRect@,System.Int32)
  commentId: M:AngeliA.Extension.SlideUp(AngeliA.IRect@,System.Int32)
  id: SlideUp(AngeliA.IRect@,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: SlideUp(ref IRect, int)
  nameWithType: Extension.SlideUp(ref IRect, int)
  fullName: AngeliA.Extension.SlideUp(ref AngeliA.IRect, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SlideUp
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1091
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Move the rect up by it's height.
  example: []
  syntax:
    content: public static void SlideUp(this ref IRect rect, int padding = 0)
    parameters:
    - id: rect
      type: AngeliA.IRect
      description: ''
    - id: padding
      type: System.Int32
      description: Extra distance to move
    content.vb: Public Shared Sub SlideUp(rect As IRect, padding As Integer = 0)
  overload: AngeliA.Extension.SlideUp*
  nameWithType.vb: Extension.SlideUp(IRect, Integer)
  fullName.vb: AngeliA.Extension.SlideUp(AngeliA.IRect, Integer)
  name.vb: SlideUp(IRect, Integer)
- uid: AngeliA.Extension.TopHalf(AngeliA.IRect)
  commentId: M:AngeliA.Extension.TopHalf(AngeliA.IRect)
  id: TopHalf(AngeliA.IRect)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: TopHalf(IRect)
  nameWithType: Extension.TopHalf(IRect)
  fullName: AngeliA.Extension.TopHalf(AngeliA.IRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TopHalf
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1093
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect TopHalf(this IRect rect)
    parameters:
    - id: rect
      type: AngeliA.IRect
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function TopHalf(rect As IRect) As IRect
  overload: AngeliA.Extension.TopHalf*
- uid: AngeliA.Extension.BottomHalf(AngeliA.IRect)
  commentId: M:AngeliA.Extension.BottomHalf(AngeliA.IRect)
  id: BottomHalf(AngeliA.IRect)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: BottomHalf(IRect)
  nameWithType: Extension.BottomHalf(IRect)
  fullName: AngeliA.Extension.BottomHalf(AngeliA.IRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: BottomHalf
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1100
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect BottomHalf(this IRect rect)
    parameters:
    - id: rect
      type: AngeliA.IRect
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function BottomHalf(rect As IRect) As IRect
  overload: AngeliA.Extension.BottomHalf*
- uid: AngeliA.Extension.RightHalf(AngeliA.IRect)
  commentId: M:AngeliA.Extension.RightHalf(AngeliA.IRect)
  id: RightHalf(AngeliA.IRect)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: RightHalf(IRect)
  nameWithType: Extension.RightHalf(IRect)
  fullName: AngeliA.Extension.RightHalf(AngeliA.IRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: RightHalf
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1105
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect RightHalf(this IRect rect)
    parameters:
    - id: rect
      type: AngeliA.IRect
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function RightHalf(rect As IRect) As IRect
  overload: AngeliA.Extension.RightHalf*
- uid: AngeliA.Extension.LeftHalf(AngeliA.IRect)
  commentId: M:AngeliA.Extension.LeftHalf(AngeliA.IRect)
  id: LeftHalf(AngeliA.IRect)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: LeftHalf(IRect)
  nameWithType: Extension.LeftHalf(IRect)
  fullName: AngeliA.Extension.LeftHalf(AngeliA.IRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: LeftHalf
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1112
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect LeftHalf(this IRect rect)
    parameters:
    - id: rect
      type: AngeliA.IRect
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function LeftHalf(rect As IRect) As IRect
  overload: AngeliA.Extension.LeftHalf*
- uid: AngeliA.Extension.HorizontalMidHalf(AngeliA.IRect)
  commentId: M:AngeliA.Extension.HorizontalMidHalf(AngeliA.IRect)
  id: HorizontalMidHalf(AngeliA.IRect)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: HorizontalMidHalf(IRect)
  nameWithType: Extension.HorizontalMidHalf(IRect)
  fullName: AngeliA.Extension.HorizontalMidHalf(AngeliA.IRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: HorizontalMidHalf
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1117
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect HorizontalMidHalf(this IRect rect)
    parameters:
    - id: rect
      type: AngeliA.IRect
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function HorizontalMidHalf(rect As IRect) As IRect
  overload: AngeliA.Extension.HorizontalMidHalf*
- uid: AngeliA.Extension.VerticalMidHalf(AngeliA.IRect)
  commentId: M:AngeliA.Extension.VerticalMidHalf(AngeliA.IRect)
  id: VerticalMidHalf(AngeliA.IRect)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: VerticalMidHalf(IRect)
  nameWithType: Extension.VerticalMidHalf(IRect)
  fullName: AngeliA.Extension.VerticalMidHalf(AngeliA.IRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: VerticalMidHalf
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1123
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect VerticalMidHalf(this IRect rect)
    parameters:
    - id: rect
      type: AngeliA.IRect
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function VerticalMidHalf(rect As IRect) As IRect
  overload: AngeliA.Extension.VerticalMidHalf*
- uid: AngeliA.Extension.PartHorizontal(AngeliA.IRect,System.Int32,System.Int32)
  commentId: M:AngeliA.Extension.PartHorizontal(AngeliA.IRect,System.Int32,System.Int32)
  id: PartHorizontal(AngeliA.IRect,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: PartHorizontal(IRect, int, int)
  nameWithType: Extension.PartHorizontal(IRect, int, int)
  fullName: AngeliA.Extension.PartHorizontal(AngeliA.IRect, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: PartHorizontal
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1129
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect PartHorizontal(this IRect rect, int index, int count)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: index
      type: System.Int32
    - id: count
      type: System.Int32
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function PartHorizontal(rect As IRect, index As Integer, count As Integer) As IRect
  overload: AngeliA.Extension.PartHorizontal*
  nameWithType.vb: Extension.PartHorizontal(IRect, Integer, Integer)
  fullName.vb: AngeliA.Extension.PartHorizontal(AngeliA.IRect, Integer, Integer)
  name.vb: PartHorizontal(IRect, Integer, Integer)
- uid: AngeliA.Extension.PartVertical(AngeliA.IRect,System.Int32,System.Int32)
  commentId: M:AngeliA.Extension.PartVertical(AngeliA.IRect,System.Int32,System.Int32)
  id: PartVertical(AngeliA.IRect,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: PartVertical(IRect, int, int)
  nameWithType: Extension.PartVertical(IRect, int, int)
  fullName: AngeliA.Extension.PartVertical(AngeliA.IRect, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: PartVertical
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1135
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect PartVertical(this IRect rect, int index, int count)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: index
      type: System.Int32
    - id: count
      type: System.Int32
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function PartVertical(rect As IRect, index As Integer, count As Integer) As IRect
  overload: AngeliA.Extension.PartVertical*
  nameWithType.vb: Extension.PartVertical(IRect, Integer, Integer)
  fullName.vb: AngeliA.Extension.PartVertical(AngeliA.IRect, Integer, Integer)
  name.vb: PartVertical(IRect, Integer, Integer)
- uid: AngeliA.Extension.Intersection(AngeliA.IRect,AngeliA.IRect)
  commentId: M:AngeliA.Extension.Intersection(AngeliA.IRect,AngeliA.IRect)
  id: Intersection(AngeliA.IRect,AngeliA.IRect)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Intersection(IRect, IRect)
  nameWithType: Extension.Intersection(IRect, IRect)
  fullName: AngeliA.Extension.Intersection(AngeliA.IRect, AngeliA.IRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Intersection
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1141
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect? Intersection(this IRect rect, IRect other)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: other
      type: AngeliA.IRect
    return:
      type: System.Nullable{AngeliA.IRect}
    content.vb: Public Shared Function Intersection(rect As IRect, other As IRect) As IRect?
  overload: AngeliA.Extension.Intersection*
- uid: AngeliA.Extension.Dodge(AngeliA.IRect,AngeliA.IRect,System.Nullable{AngeliA.IRect}@,System.Nullable{AngeliA.IRect}@,System.Nullable{AngeliA.IRect}@,System.Nullable{AngeliA.IRect}@)
  commentId: M:AngeliA.Extension.Dodge(AngeliA.IRect,AngeliA.IRect,System.Nullable{AngeliA.IRect}@,System.Nullable{AngeliA.IRect}@,System.Nullable{AngeliA.IRect}@,System.Nullable{AngeliA.IRect}@)
  id: Dodge(AngeliA.IRect,AngeliA.IRect,System.Nullable{AngeliA.IRect}@,System.Nullable{AngeliA.IRect}@,System.Nullable{AngeliA.IRect}@,System.Nullable{AngeliA.IRect}@)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Dodge(IRect, IRect, out IRect?, out IRect?, out IRect?, out IRect?)
  nameWithType: Extension.Dodge(IRect, IRect, out IRect?, out IRect?, out IRect?, out IRect?)
  fullName: AngeliA.Extension.Dodge(AngeliA.IRect, AngeliA.IRect, out AngeliA.IRect?, out AngeliA.IRect?, out AngeliA.IRect?, out AngeliA.IRect?)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Dodge
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1151
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool Dodge(this IRect rect, IRect dodge, out IRect? resultTop, out IRect? resultMidL, out IRect? resultMidR, out IRect? resultBottom)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: dodge
      type: AngeliA.IRect
    - id: resultTop
      type: System.Nullable{AngeliA.IRect}
    - id: resultMidL
      type: System.Nullable{AngeliA.IRect}
    - id: resultMidR
      type: System.Nullable{AngeliA.IRect}
    - id: resultBottom
      type: System.Nullable{AngeliA.IRect}
    return:
      type: System.Boolean
    content.vb: Public Shared Function Dodge(rect As IRect, dodge As IRect, resultTop As IRect?, resultMidL As IRect?, resultMidR As IRect?, resultBottom As IRect?) As Boolean
  overload: AngeliA.Extension.Dodge*
  nameWithType.vb: Extension.Dodge(IRect, IRect, IRect?, IRect?, IRect?, IRect?)
  fullName.vb: AngeliA.Extension.Dodge(AngeliA.IRect, AngeliA.IRect, AngeliA.IRect?, AngeliA.IRect?, AngeliA.IRect?, AngeliA.IRect?)
  name.vb: Dodge(IRect, IRect, IRect?, IRect?, IRect?, IRect?)
- uid: AngeliA.Extension.ForceSquare(AngeliA.IRect,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:AngeliA.Extension.ForceSquare(AngeliA.IRect,System.Boolean,System.Boolean,System.Boolean)
  id: ForceSquare(AngeliA.IRect,System.Boolean,System.Boolean,System.Boolean)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: ForceSquare(IRect, bool, bool, bool)
  nameWithType: Extension.ForceSquare(IRect, bool, bool, bool)
  fullName: AngeliA.Extension.ForceSquare(AngeliA.IRect, bool, bool, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ForceSquare
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1187
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect ForceSquare(this IRect rect, bool toLeft, bool toBottom, bool grow = false)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: toLeft
      type: System.Boolean
    - id: toBottom
      type: System.Boolean
    - id: grow
      type: System.Boolean
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function ForceSquare(rect As IRect, toLeft As Boolean, toBottom As Boolean, grow As Boolean = False) As IRect
  overload: AngeliA.Extension.ForceSquare*
  nameWithType.vb: Extension.ForceSquare(IRect, Boolean, Boolean, Boolean)
  fullName.vb: AngeliA.Extension.ForceSquare(AngeliA.IRect, Boolean, Boolean, Boolean)
  name.vb: ForceSquare(IRect, Boolean, Boolean, Boolean)
- uid: AngeliA.Extension.WithNewWidth(AngeliA.IRect,System.Int32)
  commentId: M:AngeliA.Extension.WithNewWidth(AngeliA.IRect,System.Int32)
  id: WithNewWidth(AngeliA.IRect,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: WithNewWidth(IRect, int)
  nameWithType: Extension.WithNewWidth(IRect, int)
  fullName: AngeliA.Extension.WithNewWidth(AngeliA.IRect, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: WithNewWidth
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1200
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect WithNewWidth(this IRect rect, int width)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: width
      type: System.Int32
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function WithNewWidth(rect As IRect, width As Integer) As IRect
  overload: AngeliA.Extension.WithNewWidth*
  nameWithType.vb: Extension.WithNewWidth(IRect, Integer)
  fullName.vb: AngeliA.Extension.WithNewWidth(AngeliA.IRect, Integer)
  name.vb: WithNewWidth(IRect, Integer)
- uid: AngeliA.Extension.WithNewHeight(AngeliA.IRect,System.Int32)
  commentId: M:AngeliA.Extension.WithNewHeight(AngeliA.IRect,System.Int32)
  id: WithNewHeight(AngeliA.IRect,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: WithNewHeight(IRect, int)
  nameWithType: Extension.WithNewHeight(IRect, int)
  fullName: AngeliA.Extension.WithNewHeight(AngeliA.IRect, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: WithNewHeight
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1204
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IRect WithNewHeight(this IRect rect, int height)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: height
      type: System.Int32
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Function WithNewHeight(rect As IRect, height As Integer) As IRect
  overload: AngeliA.Extension.WithNewHeight*
  nameWithType.vb: Extension.WithNewHeight(IRect, Integer)
  fullName.vb: AngeliA.Extension.WithNewHeight(AngeliA.IRect, Integer)
  name.vb: WithNewHeight(IRect, Integer)
- uid: AngeliA.Extension.IsSame(AngeliA.Color32,AngeliA.Color32,System.Boolean)
  commentId: M:AngeliA.Extension.IsSame(AngeliA.Color32,AngeliA.Color32,System.Boolean)
  id: IsSame(AngeliA.Color32,AngeliA.Color32,System.Boolean)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: IsSame(Color32, Color32, bool)
  nameWithType: Extension.IsSame(Color32, Color32, bool)
  fullName: AngeliA.Extension.IsSame(AngeliA.Color32, AngeliA.Color32, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IsSame
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1211
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool IsSame(this Color32 a, Color32 b, bool ignoreAlpha = false)
    parameters:
    - id: a
      type: AngeliA.Color32
    - id: b
      type: AngeliA.Color32
    - id: ignoreAlpha
      type: System.Boolean
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsSame(a As Color32, b As Color32, ignoreAlpha As Boolean = False) As Boolean
  overload: AngeliA.Extension.IsSame*
  nameWithType.vb: Extension.IsSame(Color32, Color32, Boolean)
  fullName.vb: AngeliA.Extension.IsSame(AngeliA.Color32, AngeliA.Color32, Boolean)
  name.vb: IsSame(Color32, Color32, Boolean)
- uid: AngeliA.Extension.Mult(AngeliA.Color32,AngeliA.Color32)
  commentId: M:AngeliA.Extension.Mult(AngeliA.Color32,AngeliA.Color32)
  id: Mult(AngeliA.Color32,AngeliA.Color32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Mult(Color32, Color32)
  nameWithType: Extension.Mult(Color32, Color32)
  fullName: AngeliA.Extension.Mult(AngeliA.Color32, AngeliA.Color32)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Mult
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1212
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Color32 Mult(this Color32 a, Color32 b)
    parameters:
    - id: a
      type: AngeliA.Color32
    - id: b
      type: AngeliA.Color32
    return:
      type: AngeliA.Color32
    content.vb: Public Shared Function Mult(a As Color32, b As Color32) As Color32
  overload: AngeliA.Extension.Mult*
- uid: AngeliA.Extension.NotEnd(System.IO.BinaryReader)
  commentId: M:AngeliA.Extension.NotEnd(System.IO.BinaryReader)
  id: NotEnd(System.IO.BinaryReader)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: NotEnd(BinaryReader)
  nameWithType: Extension.NotEnd(BinaryReader)
  fullName: AngeliA.Extension.NotEnd(System.IO.BinaryReader)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: NotEnd
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1221
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool NotEnd(this BinaryReader reader)
    parameters:
    - id: reader
      type: System.IO.BinaryReader
    return:
      type: System.Boolean
    content.vb: Public Shared Function NotEnd(reader As BinaryReader) As Boolean
  overload: AngeliA.Extension.NotEnd*
- uid: AngeliA.Extension.GetDirection(AngeliA.Gamekey)
  commentId: M:AngeliA.Extension.GetDirection(AngeliA.Gamekey)
  id: GetDirection(AngeliA.Gamekey)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: GetDirection(Gamekey)
  nameWithType: Extension.GetDirection(Gamekey)
  fullName: AngeliA.Extension.GetDirection(AngeliA.Gamekey)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetDirection
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1223
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Direction4? GetDirection(this Gamekey key)
    parameters:
    - id: key
      type: AngeliA.Gamekey
    return:
      type: System.Nullable{AngeliA.Direction4}
    content.vb: Public Shared Function GetDirection(key As Gamekey) As Direction4?
  overload: AngeliA.Extension.GetDirection*
- uid: AngeliA.Extension.IsLeft(AngeliA.Alignment)
  commentId: M:AngeliA.Extension.IsLeft(AngeliA.Alignment)
  id: IsLeft(AngeliA.Alignment)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: IsLeft(Alignment)
  nameWithType: Extension.IsLeft(Alignment)
  fullName: AngeliA.Extension.IsLeft(AngeliA.Alignment)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IsLeft
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1232
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool IsLeft(this Alignment alignment)
    parameters:
    - id: alignment
      type: AngeliA.Alignment
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsLeft(alignment As Alignment) As Boolean
  overload: AngeliA.Extension.IsLeft*
- uid: AngeliA.Extension.IsMidX(AngeliA.Alignment)
  commentId: M:AngeliA.Extension.IsMidX(AngeliA.Alignment)
  id: IsMidX(AngeliA.Alignment)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: IsMidX(Alignment)
  nameWithType: Extension.IsMidX(Alignment)
  fullName: AngeliA.Extension.IsMidX(AngeliA.Alignment)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IsMidX
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1233
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool IsMidX(this Alignment alignment)
    parameters:
    - id: alignment
      type: AngeliA.Alignment
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsMidX(alignment As Alignment) As Boolean
  overload: AngeliA.Extension.IsMidX*
- uid: AngeliA.Extension.IsRight(AngeliA.Alignment)
  commentId: M:AngeliA.Extension.IsRight(AngeliA.Alignment)
  id: IsRight(AngeliA.Alignment)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: IsRight(Alignment)
  nameWithType: Extension.IsRight(Alignment)
  fullName: AngeliA.Extension.IsRight(AngeliA.Alignment)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IsRight
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1234
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool IsRight(this Alignment alignment)
    parameters:
    - id: alignment
      type: AngeliA.Alignment
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsRight(alignment As Alignment) As Boolean
  overload: AngeliA.Extension.IsRight*
- uid: AngeliA.Extension.IsBottom(AngeliA.Alignment)
  commentId: M:AngeliA.Extension.IsBottom(AngeliA.Alignment)
  id: IsBottom(AngeliA.Alignment)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: IsBottom(Alignment)
  nameWithType: Extension.IsBottom(Alignment)
  fullName: AngeliA.Extension.IsBottom(AngeliA.Alignment)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IsBottom
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1235
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool IsBottom(this Alignment alignment)
    parameters:
    - id: alignment
      type: AngeliA.Alignment
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsBottom(alignment As Alignment) As Boolean
  overload: AngeliA.Extension.IsBottom*
- uid: AngeliA.Extension.IsMidY(AngeliA.Alignment)
  commentId: M:AngeliA.Extension.IsMidY(AngeliA.Alignment)
  id: IsMidY(AngeliA.Alignment)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: IsMidY(Alignment)
  nameWithType: Extension.IsMidY(Alignment)
  fullName: AngeliA.Extension.IsMidY(AngeliA.Alignment)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IsMidY
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1236
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool IsMidY(this Alignment alignment)
    parameters:
    - id: alignment
      type: AngeliA.Alignment
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsMidY(alignment As Alignment) As Boolean
  overload: AngeliA.Extension.IsMidY*
- uid: AngeliA.Extension.IsTop(AngeliA.Alignment)
  commentId: M:AngeliA.Extension.IsTop(AngeliA.Alignment)
  id: IsTop(AngeliA.Alignment)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: IsTop(Alignment)
  nameWithType: Extension.IsTop(Alignment)
  fullName: AngeliA.Extension.IsTop(AngeliA.Alignment)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IsTop
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1237
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool IsTop(this Alignment alignment)
    parameters:
    - id: alignment
      type: AngeliA.Alignment
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsTop(alignment As Alignment) As Boolean
  overload: AngeliA.Extension.IsTop*
- uid: AngeliA.Extension.Normal(AngeliA.Alignment)
  commentId: M:AngeliA.Extension.Normal(AngeliA.Alignment)
  id: Normal(AngeliA.Alignment)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Normal(Alignment)
  nameWithType: Extension.Normal(Alignment)
  fullName: AngeliA.Extension.Normal(AngeliA.Alignment)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Normal
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1238
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Int2 Normal(this Alignment alignment)
    parameters:
    - id: alignment
      type: AngeliA.Alignment
    return:
      type: AngeliA.Int2
    content.vb: Public Shared Function Normal(alignment As Alignment) As Int2
  overload: AngeliA.Extension.Normal*
- uid: AngeliA.Extension.FillWithValue``1(``0[],``0)
  commentId: M:AngeliA.Extension.FillWithValue``1(``0[],``0)
  id: FillWithValue``1(``0[],``0)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: FillWithValue<A>(A[], A)
  nameWithType: Extension.FillWithValue<A>(A[], A)
  fullName: AngeliA.Extension.FillWithValue<A>(A[], A)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: FillWithValue
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1253
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static A[] FillWithValue<A>(this A[] arr, A value)
    parameters:
    - id: arr
      type: '{A}[]'
    - id: value
      type: '{A}'
    typeParameters:
    - id: A
    return:
      type: '{A}[]'
    content.vb: Public Shared Function FillWithValue(Of A)(arr As A(), value As A) As A()
  overload: AngeliA.Extension.FillWithValue*
  nameWithType.vb: Extension.FillWithValue(Of A)(A(), A)
  fullName.vb: AngeliA.Extension.FillWithValue(Of A)(A(), A)
  name.vb: FillWithValue(Of A)(A(), A)
- uid: AngeliA.Extension.FillWithNewValue``1(``0[])
  commentId: M:AngeliA.Extension.FillWithNewValue``1(``0[])
  id: FillWithNewValue``1(``0[])
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: FillWithNewValue<A>(A[])
  nameWithType: Extension.FillWithNewValue<A>(A[])
  fullName: AngeliA.Extension.FillWithNewValue<A>(A[])
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: FillWithNewValue
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1258
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: 'public static A[] FillWithNewValue<A>(this A[] arr) where A : new()'
    parameters:
    - id: arr
      type: '{A}[]'
    typeParameters:
    - id: A
    return:
      type: '{A}[]'
    content.vb: Public Shared Function FillWithNewValue(Of A As New)(arr As A()) As A()
  overload: AngeliA.Extension.FillWithNewValue*
  nameWithType.vb: Extension.FillWithNewValue(Of A)(A())
  fullName.vb: AngeliA.Extension.FillWithNewValue(Of A)(A())
  name.vb: FillWithNewValue(Of A)(A())
- uid: AngeliA.Extension.WithNewA(AngeliA.Color32,System.Int32)
  commentId: M:AngeliA.Extension.WithNewA(AngeliA.Color32,System.Int32)
  id: WithNewA(AngeliA.Color32,System.Int32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: WithNewA(Color32, int)
  nameWithType: Extension.WithNewA(Color32, int)
  fullName: AngeliA.Extension.WithNewA(AngeliA.Color32, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: WithNewA
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1269
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Color32 WithNewA(this Color32 value, int a)
    parameters:
    - id: value
      type: AngeliA.Color32
    - id: a
      type: System.Int32
    return:
      type: AngeliA.Color32
    content.vb: Public Shared Function WithNewA(value As Color32, a As Integer) As Color32
  overload: AngeliA.Extension.WithNewA*
  nameWithType.vb: Extension.WithNewA(Color32, Integer)
  fullName.vb: AngeliA.Extension.WithNewA(AngeliA.Color32, Integer)
  name.vb: WithNewA(Color32, Integer)
- uid: AngeliA.Extension.WithNewA(AngeliA.ColorF,System.Single)
  commentId: M:AngeliA.Extension.WithNewA(AngeliA.ColorF,System.Single)
  id: WithNewA(AngeliA.ColorF,System.Single)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: WithNewA(ColorF, float)
  nameWithType: Extension.WithNewA(ColorF, float)
  fullName: AngeliA.Extension.WithNewA(AngeliA.ColorF, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: WithNewA
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1270
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static ColorF WithNewA(this ColorF value, float a)
    parameters:
    - id: value
      type: AngeliA.ColorF
    - id: a
      type: System.Single
    return:
      type: AngeliA.ColorF
    content.vb: Public Shared Function WithNewA(value As ColorF, a As Single) As ColorF
  overload: AngeliA.Extension.WithNewA*
  nameWithType.vb: Extension.WithNewA(ColorF, Single)
  fullName.vb: AngeliA.Extension.WithNewA(AngeliA.ColorF, Single)
  name.vb: WithNewA(ColorF, Single)
- uid: AngeliA.Extension.ToColor32(AngeliA.ColorF)
  commentId: M:AngeliA.Extension.ToColor32(AngeliA.ColorF)
  id: ToColor32(AngeliA.ColorF)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: ToColor32(ColorF)
  nameWithType: Extension.ToColor32(ColorF)
  fullName: AngeliA.Extension.ToColor32(AngeliA.ColorF)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ToColor32
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1271
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Color32 ToColor32(this ColorF value)
    parameters:
    - id: value
      type: AngeliA.ColorF
    return:
      type: AngeliA.Color32
    content.vb: Public Shared Function ToColor32(value As ColorF) As Color32
  overload: AngeliA.Extension.ToColor32*
- uid: AngeliA.Extension.ToColorF(AngeliA.Color32)
  commentId: M:AngeliA.Extension.ToColorF(AngeliA.Color32)
  id: ToColorF(AngeliA.Color32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: ToColorF(Color32)
  nameWithType: Extension.ToColorF(Color32)
  fullName: AngeliA.Extension.ToColorF(AngeliA.Color32)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ToColorF
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1272
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static ColorF ToColorF(this Color32 value)
    parameters:
    - id: value
      type: AngeliA.Color32
    return:
      type: AngeliA.ColorF
    content.vb: Public Shared Function ToColorF(value As Color32) As ColorF
  overload: AngeliA.Extension.ToColorF*
- uid: AngeliA.Extension.Almost(AngeliA.ColorF,AngeliA.ColorF)
  commentId: M:AngeliA.Extension.Almost(AngeliA.ColorF,AngeliA.ColorF)
  id: Almost(AngeliA.ColorF,AngeliA.ColorF)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Almost(ColorF, ColorF)
  nameWithType: Extension.Almost(ColorF, ColorF)
  fullName: AngeliA.Extension.Almost(AngeliA.ColorF, AngeliA.ColorF)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Almost
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1273
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool Almost(this ColorF a, ColorF b)
    parameters:
    - id: a
      type: AngeliA.ColorF
    - id: b
      type: AngeliA.ColorF
    return:
      type: System.Boolean
    content.vb: Public Shared Function Almost(a As ColorF, b As ColorF) As Boolean
  overload: AngeliA.Extension.Almost*
- uid: AngeliA.Extension.LookDifferent(AngeliA.Color32,AngeliA.Color32)
  commentId: M:AngeliA.Extension.LookDifferent(AngeliA.Color32,AngeliA.Color32)
  id: LookDifferent(AngeliA.Color32,AngeliA.Color32)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: LookDifferent(Color32, Color32)
  nameWithType: Extension.LookDifferent(Color32, Color32)
  fullName: AngeliA.Extension.LookDifferent(AngeliA.Color32, AngeliA.Color32)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: LookDifferent
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1274
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool LookDifferent(this Color32 a, Color32 b)
    parameters:
    - id: a
      type: AngeliA.Color32
    - id: b
      type: AngeliA.Color32
    return:
      type: System.Boolean
    content.vb: Public Shared Function LookDifferent(a As Color32, b As Color32) As Boolean
  overload: AngeliA.Extension.LookDifferent*
- uid: AngeliA.Extension.Adjust(AngeliA.Color32,System.Single,System.Single,System.Single,System.Single)
  commentId: M:AngeliA.Extension.Adjust(AngeliA.Color32,System.Single,System.Single,System.Single,System.Single)
  id: Adjust(AngeliA.Color32,System.Single,System.Single,System.Single,System.Single)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Adjust(Color32, float, float, float, float)
  nameWithType: Extension.Adjust(Color32, float, float, float, float)
  fullName: AngeliA.Extension.Adjust(AngeliA.Color32, float, float, float, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Adjust
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1275
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Color32 Adjust(this Color32 color, float hue, float saturation, float volume, float alpha)
    parameters:
    - id: color
      type: AngeliA.Color32
    - id: hue
      type: System.Single
    - id: saturation
      type: System.Single
    - id: volume
      type: System.Single
    - id: alpha
      type: System.Single
    return:
      type: AngeliA.Color32
    content.vb: Public Shared Function Adjust(color As Color32, hue As Single, saturation As Single, volume As Single, alpha As Single) As Color32
  overload: AngeliA.Extension.Adjust*
  nameWithType.vb: Extension.Adjust(Color32, Single, Single, Single, Single)
  fullName.vb: AngeliA.Extension.Adjust(AngeliA.Color32, Single, Single, Single, Single)
  name.vb: Adjust(Color32, Single, Single, Single, Single)
- uid: AngeliA.Extension.EnumLength(System.Type)
  commentId: M:AngeliA.Extension.EnumLength(System.Type)
  id: EnumLength(System.Type)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: EnumLength(Type)
  nameWithType: Extension.EnumLength(Type)
  fullName: AngeliA.Extension.EnumLength(System.Type)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: EnumLength
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1287
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static int EnumLength(this Type @enum)
    parameters:
    - id: enum
      type: System.Type
    return:
      type: System.Int32
    content.vb: Public Shared Function EnumLength([enum] As Type) As Integer
  overload: AngeliA.Extension.EnumLength*
- uid: AngeliA.Extension.Next``1(``0)
  commentId: M:AngeliA.Extension.Next``1(``0)
  id: Next``1(``0)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Next<E>(E)
  nameWithType: Extension.Next<E>(E)
  fullName: AngeliA.Extension.Next<E>(E)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Next
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1289
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: 'public static E Next<E>(this E @enum) where E : Enum'
    parameters:
    - id: enum
      type: '{E}'
    typeParameters:
    - id: E
    return:
      type: '{E}'
    content.vb: Public Shared Function [Next](Of E As [Enum])([enum] As E) As E
  overload: AngeliA.Extension.Next*
  nameWithType.vb: Extension.Next(Of E)(E)
  fullName.vb: AngeliA.Extension.Next(Of E)(E)
  name.vb: Next(Of E)(E)
- uid: AngeliA.Extension.Prev``1(``0)
  commentId: M:AngeliA.Extension.Prev``1(``0)
  id: Prev``1(``0)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: Prev<E>(E)
  nameWithType: Extension.Prev<E>(E)
  fullName: AngeliA.Extension.Prev<E>(E)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Prev
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1297
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: 'public static E Prev<E>(this E @enum) where E : Enum'
    parameters:
    - id: enum
      type: '{E}'
    typeParameters:
    - id: E
    return:
      type: '{E}'
    content.vb: Public Shared Function Prev(Of E As [Enum])([enum] As E) As E
  overload: AngeliA.Extension.Prev*
  nameWithType.vb: Extension.Prev(Of E)(E)
  fullName.vb: AngeliA.Extension.Prev(Of E)(E)
  name.vb: Prev(Of E)(E)
- uid: AngeliA.Extension.GetTypePath(System.Type,System.Type)
  commentId: M:AngeliA.Extension.GetTypePath(System.Type,System.Type)
  id: GetTypePath(System.Type,System.Type)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: GetTypePath(Type, Type)
  nameWithType: Extension.GetTypePath(Type, Type)
  fullName: AngeliA.Extension.GetTypePath(System.Type, System.Type)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetTypePath
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1308
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static string GetTypePath(this Type type, Type startFrom = null)
    parameters:
    - id: type
      type: System.Type
    - id: startFrom
      type: System.Type
    return:
      type: System.String
    content.vb: Public Shared Function GetTypePath(type As Type, startFrom As Type = Nothing) As String
  overload: AngeliA.Extension.GetTypePath*
- uid: AngeliA.Extension.TrimWhiteForStartAndEnd(System.String)
  commentId: M:AngeliA.Extension.TrimWhiteForStartAndEnd(System.String)
  id: TrimWhiteForStartAndEnd(System.String)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: TrimWhiteForStartAndEnd(string)
  nameWithType: Extension.TrimWhiteForStartAndEnd(string)
  fullName: AngeliA.Extension.TrimWhiteForStartAndEnd(string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TrimWhiteForStartAndEnd
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1321
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static string TrimWhiteForStartAndEnd(this string str)
    parameters:
    - id: str
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function TrimWhiteForStartAndEnd(str As String) As String
  overload: AngeliA.Extension.TrimWhiteForStartAndEnd*
  nameWithType.vb: Extension.TrimWhiteForStartAndEnd(String)
  fullName.vb: AngeliA.Extension.TrimWhiteForStartAndEnd(String)
  name.vb: TrimWhiteForStartAndEnd(String)
- uid: AngeliA.Extension.TrimEnd_Numbers(System.String)
  commentId: M:AngeliA.Extension.TrimEnd_Numbers(System.String)
  id: TrimEnd_Numbers(System.String)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: TrimEnd_Numbers(string)
  nameWithType: Extension.TrimEnd_Numbers(string)
  fullName: AngeliA.Extension.TrimEnd_Numbers(string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TrimEnd_Numbers
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1322
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static string TrimEnd_Numbers(this string str)
    parameters:
    - id: str
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function TrimEnd_Numbers(str As String) As String
  overload: AngeliA.Extension.TrimEnd_Numbers*
  nameWithType.vb: Extension.TrimEnd_Numbers(String)
  fullName.vb: AngeliA.Extension.TrimEnd_Numbers(String)
  name.vb: TrimEnd_Numbers(String)
- uid: AngeliA.Extension.TrimEnd_NumbersEmpty(System.String)
  commentId: M:AngeliA.Extension.TrimEnd_NumbersEmpty(System.String)
  id: TrimEnd_NumbersEmpty(System.String)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: TrimEnd_NumbersEmpty(string)
  nameWithType: Extension.TrimEnd_NumbersEmpty(string)
  fullName: AngeliA.Extension.TrimEnd_NumbersEmpty(string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TrimEnd_NumbersEmpty
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1323
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static string TrimEnd_NumbersEmpty(this string str)
    parameters:
    - id: str
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function TrimEnd_NumbersEmpty(str As String) As String
  overload: AngeliA.Extension.TrimEnd_NumbersEmpty*
  nameWithType.vb: Extension.TrimEnd_NumbersEmpty(String)
  fullName.vb: AngeliA.Extension.TrimEnd_NumbersEmpty(String)
  name.vb: TrimEnd_NumbersEmpty(String)
- uid: AngeliA.Extension.TrimEnd_NumbersEmpty_(System.String)
  commentId: M:AngeliA.Extension.TrimEnd_NumbersEmpty_(System.String)
  id: TrimEnd_NumbersEmpty_(System.String)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: TrimEnd_NumbersEmpty_(string)
  nameWithType: Extension.TrimEnd_NumbersEmpty_(string)
  fullName: AngeliA.Extension.TrimEnd_NumbersEmpty_(string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TrimEnd_NumbersEmpty_
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1324
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static string TrimEnd_NumbersEmpty_(this string str)
    parameters:
    - id: str
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function TrimEnd_NumbersEmpty_(str As String) As String
  overload: AngeliA.Extension.TrimEnd_NumbersEmpty_*
  nameWithType.vb: Extension.TrimEnd_NumbersEmpty_(String)
  fullName.vb: AngeliA.Extension.TrimEnd_NumbersEmpty_(String)
  name.vb: TrimEnd_NumbersEmpty_(String)
- uid: AngeliA.Extension.TrimEnd_IfEndWith(System.String,System.String,System.Char[])
  commentId: M:AngeliA.Extension.TrimEnd_IfEndWith(System.String,System.String,System.Char[])
  id: TrimEnd_IfEndWith(System.String,System.String,System.Char[])
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: TrimEnd_IfEndWith(string, string, params char[])
  nameWithType: Extension.TrimEnd_IfEndWith(string, string, params char[])
  fullName: AngeliA.Extension.TrimEnd_IfEndWith(string, string, params char[])
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TrimEnd_IfEndWith
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1325
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static string TrimEnd_IfEndWith(this string str, string end, params char[] trimChars)
    parameters:
    - id: str
      type: System.String
    - id: end
      type: System.String
    - id: trimChars
      type: System.Char[]
    return:
      type: System.String
    content.vb: Public Shared Function TrimEnd_IfEndWith(str As String, [end] As String, ParamArray trimChars As Char()) As String
  overload: AngeliA.Extension.TrimEnd_IfEndWith*
  nameWithType.vb: Extension.TrimEnd_IfEndWith(String, String, ParamArray Char())
  fullName.vb: AngeliA.Extension.TrimEnd_IfEndWith(String, String, ParamArray Char())
  name.vb: TrimEnd_IfEndWith(String, String, ParamArray Char())
- uid: AngeliA.Extension.TrimStart_Numbers(System.String)
  commentId: M:AngeliA.Extension.TrimStart_Numbers(System.String)
  id: TrimStart_Numbers(System.String)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: TrimStart_Numbers(string)
  nameWithType: Extension.TrimStart_Numbers(string)
  fullName: AngeliA.Extension.TrimStart_Numbers(string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TrimStart_Numbers
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1333
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static string TrimStart_Numbers(this string str)
    parameters:
    - id: str
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function TrimStart_Numbers(str As String) As String
  overload: AngeliA.Extension.TrimStart_Numbers*
  nameWithType.vb: Extension.TrimStart_Numbers(String)
  fullName.vb: AngeliA.Extension.TrimStart_Numbers(String)
  name.vb: TrimStart_Numbers(String)
- uid: AngeliA.Extension.StartsWith(System.String,System.Char,System.Char)
  commentId: M:AngeliA.Extension.StartsWith(System.String,System.Char,System.Char)
  id: StartsWith(System.String,System.Char,System.Char)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: StartsWith(string, char, char)
  nameWithType: Extension.StartsWith(string, char, char)
  fullName: AngeliA.Extension.StartsWith(string, char, char)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: StartsWith
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1335
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool StartsWith(this string str, char targetChar, char ignoreChar)
    parameters:
    - id: str
      type: System.String
    - id: targetChar
      type: System.Char
    - id: ignoreChar
      type: System.Char
    return:
      type: System.Boolean
    content.vb: Public Shared Function StartsWith(str As String, targetChar As Char, ignoreChar As Char) As Boolean
  overload: AngeliA.Extension.StartsWith*
  nameWithType.vb: Extension.StartsWith(String, Char, Char)
  fullName.vb: AngeliA.Extension.StartsWith(String, Char, Char)
  name.vb: StartsWith(String, Char, Char)
- uid: AngeliA.Extension.StartsWith_IgnoreWhiteSpace(System.String,System.Char)
  commentId: M:AngeliA.Extension.StartsWith_IgnoreWhiteSpace(System.String,System.Char)
  id: StartsWith_IgnoreWhiteSpace(System.String,System.Char)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: StartsWith_IgnoreWhiteSpace(string, char)
  nameWithType: Extension.StartsWith_IgnoreWhiteSpace(string, char)
  fullName: AngeliA.Extension.StartsWith_IgnoreWhiteSpace(string, char)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: StartsWith_IgnoreWhiteSpace
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1345
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool StartsWith_IgnoreWhiteSpace(this string str, char targetChar)
    parameters:
    - id: str
      type: System.String
    - id: targetChar
      type: System.Char
    return:
      type: System.Boolean
    content.vb: Public Shared Function StartsWith_IgnoreWhiteSpace(str As String, targetChar As Char) As Boolean
  overload: AngeliA.Extension.StartsWith_IgnoreWhiteSpace*
  nameWithType.vb: Extension.StartsWith_IgnoreWhiteSpace(String, Char)
  fullName.vb: AngeliA.Extension.StartsWith_IgnoreWhiteSpace(String, Char)
  name.vb: StartsWith_IgnoreWhiteSpace(String, Char)
- uid: AngeliA.Extension.StartsWith_IgnoreWhiteSpace(System.String,System.Char,System.Int32@)
  commentId: M:AngeliA.Extension.StartsWith_IgnoreWhiteSpace(System.String,System.Char,System.Int32@)
  id: StartsWith_IgnoreWhiteSpace(System.String,System.Char,System.Int32@)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: StartsWith_IgnoreWhiteSpace(string, char, out int)
  nameWithType: Extension.StartsWith_IgnoreWhiteSpace(string, char, out int)
  fullName: AngeliA.Extension.StartsWith_IgnoreWhiteSpace(string, char, out int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: StartsWith_IgnoreWhiteSpace
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1347
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool StartsWith_IgnoreWhiteSpace(this string str, char targetChar, out int index)
    parameters:
    - id: str
      type: System.String
    - id: targetChar
      type: System.Char
    - id: index
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function StartsWith_IgnoreWhiteSpace(str As String, targetChar As Char, index As Integer) As Boolean
  overload: AngeliA.Extension.StartsWith_IgnoreWhiteSpace*
  nameWithType.vb: Extension.StartsWith_IgnoreWhiteSpace(String, Char, Integer)
  fullName.vb: AngeliA.Extension.StartsWith_IgnoreWhiteSpace(String, Char, Integer)
  name.vb: StartsWith_IgnoreWhiteSpace(String, Char, Integer)
- uid: AngeliA.Extension.JoinArray``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.Char)
  commentId: M:AngeliA.Extension.JoinArray``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.Char)
  id: JoinArray``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.Char)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: JoinArray<T>(IEnumerable<T>, Func<T, string>, char)
  nameWithType: Extension.JoinArray<T>(IEnumerable<T>, Func<T, string>, char)
  fullName: AngeliA.Extension.JoinArray<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, string>, char)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: JoinArray
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1363
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static string JoinArray<T>(this IEnumerable<T> arr, Func<T, string> toString, char separator = '\0')
    parameters:
    - id: arr
      type: System.Collections.Generic.IEnumerable{{T}}
    - id: toString
      type: System.Func{{T},System.String}
    - id: separator
      type: System.Char
    typeParameters:
    - id: T
    return:
      type: System.String
    content.vb: Public Shared Function JoinArray(Of T)(arr As IEnumerable(Of T), toString As Func(Of T, String), separator As Char = vbNullChar) As String
  overload: AngeliA.Extension.JoinArray*
  nameWithType.vb: Extension.JoinArray(Of T)(IEnumerable(Of T), Func(Of T, String), Char)
  fullName.vb: AngeliA.Extension.JoinArray(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, String), Char)
  name.vb: JoinArray(Of T)(IEnumerable(Of T), Func(Of T, String), Char)
- uid: AngeliA.Extension.ForAllStaticFieldValue``1(System.Type,System.Reflection.BindingFlags,System.Boolean)
  commentId: M:AngeliA.Extension.ForAllStaticFieldValue``1(System.Type,System.Reflection.BindingFlags,System.Boolean)
  id: ForAllStaticFieldValue``1(System.Type,System.Reflection.BindingFlags,System.Boolean)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: ForAllStaticFieldValue<T>(Type, BindingFlags, bool)
  nameWithType: Extension.ForAllStaticFieldValue<T>(Type, BindingFlags, bool)
  fullName: AngeliA.Extension.ForAllStaticFieldValue<T>(System.Type, System.Reflection.BindingFlags, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ForAllStaticFieldValue
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1380
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IEnumerable<T> ForAllStaticFieldValue<T>(this Type type, BindingFlags binding = BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic, bool inherited = true)
    parameters:
    - id: type
      type: System.Type
    - id: binding
      type: System.Reflection.BindingFlags
    - id: inherited
      type: System.Boolean
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
    content.vb: Public Shared Function ForAllStaticFieldValue(Of T)(type As Type, binding As BindingFlags = BindingFlags.Static Or BindingFlags.Public Or BindingFlags.NonPublic, inherited As Boolean = True) As IEnumerable(Of T)
  overload: AngeliA.Extension.ForAllStaticFieldValue*
  nameWithType.vb: Extension.ForAllStaticFieldValue(Of T)(Type, BindingFlags, Boolean)
  fullName.vb: AngeliA.Extension.ForAllStaticFieldValue(Of T)(System.Type, System.Reflection.BindingFlags, Boolean)
  name.vb: ForAllStaticFieldValue(Of T)(Type, BindingFlags, Boolean)
- uid: AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
  commentId: M:AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
  id: ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: ForAllFields<T>(object, BindingFlags, bool)
  nameWithType: Extension.ForAllFields<T>(object, BindingFlags, bool)
  fullName: AngeliA.Extension.ForAllFields<T>(object, System.Reflection.BindingFlags, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ForAllFields
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1398
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IEnumerable<(FieldInfo field, T value)> ForAllFields<T>(this object target, BindingFlags binding = BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic, bool inherited = true)
    parameters:
    - id: target
      type: System.Object
    - id: binding
      type: System.Reflection.BindingFlags
    - id: inherited
      type: System.Boolean
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{System.ValueTuple{System.Reflection.FieldInfo,{T}}}
    content.vb: Public Shared Function ForAllFields(Of T)(target As Object, binding As BindingFlags = BindingFlags.Instance Or BindingFlags.Static Or BindingFlags.Public Or BindingFlags.NonPublic, inherited As Boolean = True) As IEnumerable(Of (field As FieldInfo, value As T))
  overload: AngeliA.Extension.ForAllFields*
  nameWithType.vb: Extension.ForAllFields(Of T)(Object, BindingFlags, Boolean)
  fullName.vb: AngeliA.Extension.ForAllFields(Of T)(Object, System.Reflection.BindingFlags, Boolean)
  name.vb: ForAllFields(Of T)(Object, BindingFlags, Boolean)
- uid: AngeliA.Extension.ForAllFields``1(System.Type,System.Reflection.BindingFlags,System.Boolean)
  commentId: M:AngeliA.Extension.ForAllFields``1(System.Type,System.Reflection.BindingFlags,System.Boolean)
  id: ForAllFields``1(System.Type,System.Reflection.BindingFlags,System.Boolean)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: ForAllFields<T>(Type, BindingFlags, bool)
  nameWithType: Extension.ForAllFields<T>(Type, BindingFlags, bool)
  fullName: AngeliA.Extension.ForAllFields<T>(System.Type, System.Reflection.BindingFlags, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ForAllFields
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1408
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IEnumerable<FieldInfo> ForAllFields<T>(this Type type, BindingFlags binding = BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic, bool inherited = true)
    parameters:
    - id: type
      type: System.Type
    - id: binding
      type: System.Reflection.BindingFlags
    - id: inherited
      type: System.Boolean
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{System.Reflection.FieldInfo}
    content.vb: Public Shared Function ForAllFields(Of T)(type As Type, binding As BindingFlags = BindingFlags.Instance Or BindingFlags.Static Or BindingFlags.Public Or BindingFlags.NonPublic, inherited As Boolean = True) As IEnumerable(Of FieldInfo)
  overload: AngeliA.Extension.ForAllFields*
  nameWithType.vb: Extension.ForAllFields(Of T)(Type, BindingFlags, Boolean)
  fullName.vb: AngeliA.Extension.ForAllFields(Of T)(System.Type, System.Reflection.BindingFlags, Boolean)
  name.vb: ForAllFields(Of T)(Type, BindingFlags, Boolean)
- uid: AngeliA.Extension.ForAllProperties``1(System.Object)
  commentId: M:AngeliA.Extension.ForAllProperties``1(System.Object)
  id: ForAllProperties``1(System.Object)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: ForAllProperties<T>(object)
  nameWithType: Extension.ForAllProperties<T>(object)
  fullName: AngeliA.Extension.ForAllProperties<T>(object)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ForAllProperties
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1417
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static IEnumerable<(string name, T value)> ForAllProperties<T>(this object target)
    parameters:
    - id: target
      type: System.Object
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,{T}}}
    content.vb: Public Shared Function ForAllProperties(Of T)(target As Object) As IEnumerable(Of (name As String, value As T))
  overload: AngeliA.Extension.ForAllProperties*
  nameWithType.vb: Extension.ForAllProperties(Of T)(Object)
  fullName.vb: AngeliA.Extension.ForAllProperties(Of T)(Object)
  name.vb: ForAllProperties(Of T)(Object)
- uid: AngeliA.Extension.InvokeSafe(System.Action)
  commentId: M:AngeliA.Extension.InvokeSafe(System.Action)
  id: InvokeSafe(System.Action)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: InvokeSafe(Action)
  nameWithType: Extension.InvokeSafe(Action)
  fullName: AngeliA.Extension.InvokeSafe(System.Action)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: InvokeSafe
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1428
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void InvokeSafe(this Action action)
    parameters:
    - id: action
      type: System.Action
    content.vb: Public Shared Sub InvokeSafe(action As Action)
  overload: AngeliA.Extension.InvokeSafe*
- uid: AngeliA.Extension.InvokeSafe``1(System.Action{``0},``0)
  commentId: M:AngeliA.Extension.InvokeSafe``1(System.Action{``0},``0)
  id: InvokeSafe``1(System.Action{``0},``0)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: InvokeSafe<T0>(Action<T0>, T0)
  nameWithType: Extension.InvokeSafe<T0>(Action<T0>, T0)
  fullName: AngeliA.Extension.InvokeSafe<T0>(System.Action<T0>, T0)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: InvokeSafe
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1433
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void InvokeSafe<T0>(this Action<T0> action, T0 a)
    parameters:
    - id: action
      type: System.Action{{T0}}
    - id: a
      type: '{T0}'
    typeParameters:
    - id: T0
    content.vb: Public Shared Sub InvokeSafe(Of T0)(action As Action(Of T0), a As T0)
  overload: AngeliA.Extension.InvokeSafe*
  nameWithType.vb: Extension.InvokeSafe(Of T0)(Action(Of T0), T0)
  fullName.vb: AngeliA.Extension.InvokeSafe(Of T0)(System.Action(Of T0), T0)
  name.vb: InvokeSafe(Of T0)(Action(Of T0), T0)
- uid: AngeliA.Extension.InvokeSafe``2(System.Action{``0,``1},``0,``1)
  commentId: M:AngeliA.Extension.InvokeSafe``2(System.Action{``0,``1},``0,``1)
  id: InvokeSafe``2(System.Action{``0,``1},``0,``1)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: InvokeSafe<T0, T1>(Action<T0, T1>, T0, T1)
  nameWithType: Extension.InvokeSafe<T0, T1>(Action<T0, T1>, T0, T1)
  fullName: AngeliA.Extension.InvokeSafe<T0, T1>(System.Action<T0, T1>, T0, T1)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: InvokeSafe
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1438
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void InvokeSafe<T0, T1>(this Action<T0, T1> action, T0 a, T1 b)
    parameters:
    - id: action
      type: System.Action{{T0},{T1}}
    - id: a
      type: '{T0}'
    - id: b
      type: '{T1}'
    typeParameters:
    - id: T0
    - id: T1
    content.vb: Public Shared Sub InvokeSafe(Of T0, T1)(action As Action(Of T0, T1), a As T0, b As T1)
  overload: AngeliA.Extension.InvokeSafe*
  nameWithType.vb: Extension.InvokeSafe(Of T0, T1)(Action(Of T0, T1), T0, T1)
  fullName.vb: AngeliA.Extension.InvokeSafe(Of T0, T1)(System.Action(Of T0, T1), T0, T1)
  name.vb: InvokeSafe(Of T0, T1)(Action(Of T0, T1), T0, T1)
- uid: AngeliA.Extension.InvokeSafe``3(System.Action{``0,``1,``2},``0,``1,``2)
  commentId: M:AngeliA.Extension.InvokeSafe``3(System.Action{``0,``1,``2},``0,``1,``2)
  id: InvokeSafe``3(System.Action{``0,``1,``2},``0,``1,``2)
  isExtensionMethod: true
  parent: AngeliA.Extension
  langs:
  - csharp
  - vb
  name: InvokeSafe<T0, T1, T2>(Action<T0, T1, T2>, T0, T1, T2)
  nameWithType: Extension.InvokeSafe<T0, T1, T2>(Action<T0, T1, T2>, T0, T1, T2)
  fullName: AngeliA.Extension.InvokeSafe<T0, T1, T2>(System.Action<T0, T1, T2>, T0, T1, T2)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Extension.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: InvokeSafe
    path: ../../AngeliA/AngeliA Framework/src/Common/Extension.cs
    startLine: 1443
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void InvokeSafe<T0, T1, T2>(this Action<T0, T1, T2> action, T0 a, T1 b, T2 c)
    parameters:
    - id: action
      type: System.Action{{T0},{T1},{T2}}
    - id: a
      type: '{T0}'
    - id: b
      type: '{T1}'
    - id: c
      type: '{T2}'
    typeParameters:
    - id: T0
    - id: T1
    - id: T2
    content.vb: Public Shared Sub InvokeSafe(Of T0, T1, T2)(action As Action(Of T0, T1, T2), a As T0, b As T1, c As T2)
  overload: AngeliA.Extension.InvokeSafe*
  nameWithType.vb: Extension.InvokeSafe(Of T0, T1, T2)(Action(Of T0, T1, T2), T0, T1, T2)
  fullName.vb: AngeliA.Extension.InvokeSafe(Of T0, T1, T2)(System.Action(Of T0, T1, T2), T0, T1, T2)
  name.vb: InvokeSafe(Of T0, T1, T2)(Action(Of T0, T1, T2), T0, T1, T2)
references:
- uid: AngeliA
  commentId: N:AngeliA
  href: AngeliA.html
  name: AngeliA
  nameWithType: AngeliA
  fullName: AngeliA
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AngeliA.Extension.AngeName*
  commentId: Overload:AngeliA.Extension.AngeName
  href: AngeliA.Extension.html#AngeliA_Extension_AngeName_System_Type_
  name: AngeName
  nameWithType: Extension.AngeName
  fullName: AngeliA.Extension.AngeName
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AngeliA.Extension.AngeHash*
  commentId: Overload:AngeliA.Extension.AngeHash
  href: AngeliA.Extension.html#AngeliA_Extension_AngeHash_System_Type_
  name: AngeHash
  nameWithType: Extension.AngeHash
  fullName: AngeliA.Extension.AngeHash
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: AngeliA.Extension.AngeReverseHash*
  commentId: Overload:AngeliA.Extension.AngeReverseHash
  href: AngeliA.Extension.html#AngeliA_Extension_AngeReverseHash_System_Char___System_Int32_System_Int32_
  name: AngeReverseHash
  nameWithType: Extension.AngeReverseHash
  fullName: AngeliA.Extension.AngeReverseHash
- uid: System.Char[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.char
  name: char[]
  nameWithType: char[]
  fullName: char[]
  nameWithType.vb: Char()
  fullName.vb: Char()
  name.vb: Char()
  spec.csharp:
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: (
  - name: )
- uid: AngeliA.Extension.IsLyingDown*
  commentId: Overload:AngeliA.Extension.IsLyingDown
  href: AngeliA.Extension.html#AngeliA_Extension_IsLyingDown_AngeliA_CharacterAnimationType_
  name: IsLyingDown
  nameWithType: Extension.IsLyingDown
  fullName: AngeliA.Extension.IsLyingDown
- uid: AngeliA.CharacterAnimationType
  commentId: T:AngeliA.CharacterAnimationType
  parent: AngeliA
  href: AngeliA.CharacterAnimationType.html
  name: CharacterAnimationType
  nameWithType: CharacterAnimationType
  fullName: AngeliA.CharacterAnimationType
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: AngeliA.Extension.MouseInside*
  commentId: Overload:AngeliA.Extension.MouseInside
  href: AngeliA.Extension.html#AngeliA_Extension_MouseInside_AngeliA_IRect_
  name: MouseInside
  nameWithType: Extension.MouseInside
  fullName: AngeliA.Extension.MouseInside
- uid: AngeliA.IRect
  commentId: T:AngeliA.IRect
  parent: AngeliA
  href: AngeliA.IRect.html
  name: IRect
  nameWithType: IRect
  fullName: AngeliA.IRect
- uid: AngeliA.Extension.GetSpan*
  commentId: Overload:AngeliA.Extension.GetSpan
  href: AngeliA.Extension.html#AngeliA_Extension_GetSpan__1_System_Collections_Generic_List___0__
  name: GetSpan
  nameWithType: Extension.GetSpan
  fullName: AngeliA.Extension.GetSpan
- uid: System.Collections.Generic.List{{T}}
  commentId: T:System.Collections.Generic.List{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Span{{T}}
  commentId: T:System.Span{``0}
  parent: System
  definition: System.Span`1
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<T>
  nameWithType: Span<T>
  fullName: System.Span<T>
  nameWithType.vb: Span(Of T)
  fullName.vb: System.Span(Of T)
  name.vb: Span(Of T)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Span`1
  commentId: T:System.Span`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<T>
  nameWithType: Span<T>
  fullName: System.Span<T>
  nameWithType.vb: Span(Of T)
  fullName.vb: System.Span(Of T)
  name.vb: Span(Of T)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: '{T}[]'
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullName.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
  - name: '['
  - name: ']'
  spec.vb:
  - name: T
  - name: (
  - name: )
- uid: AngeliA.Extension.GetReadOnlySpan*
  commentId: Overload:AngeliA.Extension.GetReadOnlySpan
  href: AngeliA.Extension.html#AngeliA_Extension_GetReadOnlySpan__1___0___
  name: GetReadOnlySpan
  nameWithType: Extension.GetReadOnlySpan
  fullName: AngeliA.Extension.GetReadOnlySpan
- uid: System.ReadOnlySpan{{T}}
  commentId: T:System.ReadOnlySpan{``0}
  parent: System
  definition: System.ReadOnlySpan`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<T>
  nameWithType: ReadOnlySpan<T>
  fullName: System.ReadOnlySpan<T>
  nameWithType.vb: ReadOnlySpan(Of T)
  fullName.vb: System.ReadOnlySpan(Of T)
  name.vb: ReadOnlySpan(Of T)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.ReadOnlySpan`1
  commentId: T:System.ReadOnlySpan`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<T>
  nameWithType: ReadOnlySpan<T>
  fullName: System.ReadOnlySpan<T>
  nameWithType.vb: ReadOnlySpan(Of T)
  fullName.vb: System.ReadOnlySpan(Of T)
  name.vb: ReadOnlySpan(Of T)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: AngeliA.Extension.ToStringWithDoubleQuotes*
  commentId: Overload:AngeliA.Extension.ToStringWithDoubleQuotes
  href: AngeliA.Extension.html#AngeliA_Extension_ToStringWithDoubleQuotes_System_String_
  name: ToStringWithDoubleQuotes
  nameWithType: Extension.ToStringWithDoubleQuotes
  fullName: AngeliA.Extension.ToStringWithDoubleQuotes
- uid: System.Text.StringBuilder
  commentId: T:System.Text.StringBuilder
  parent: System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.stringbuilder
  name: StringBuilder
  nameWithType: StringBuilder
  fullName: System.Text.StringBuilder
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
- uid: AngeliA.Extension.AppendWithDoubleQuotes*
  commentId: Overload:AngeliA.Extension.AppendWithDoubleQuotes
  href: AngeliA.Extension.html#AngeliA_Extension_AppendWithDoubleQuotes_System_Text_StringBuilder_System_String_
  name: AppendWithDoubleQuotes
  nameWithType: Extension.AppendWithDoubleQuotes
  fullName: AngeliA.Extension.AppendWithDoubleQuotes
- uid: AngeliA.Extension.Pixels_to_Bytes*
  commentId: Overload:AngeliA.Extension.Pixels_to_Bytes
  href: AngeliA.Extension.html#AngeliA_Extension_Pixels_to_Bytes_AngeliA_Color32___
  name: Pixels_to_Bytes
  nameWithType: Extension.Pixels_to_Bytes
  fullName: AngeliA.Extension.Pixels_to_Bytes
- uid: AngeliA.Color32[]
  isExternal: true
  href: AngeliA.Color32.html
  name: Color32[]
  nameWithType: Color32[]
  fullName: AngeliA.Color32[]
  nameWithType.vb: Color32()
  fullName.vb: AngeliA.Color32()
  name.vb: Color32()
  spec.csharp:
  - uid: AngeliA.Color32
    name: Color32
    href: AngeliA.Color32.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: AngeliA.Color32
    name: Color32
    href: AngeliA.Color32.html
  - name: (
  - name: )
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: AngeliA.Extension.Bytes_to_Pixels*
  commentId: Overload:AngeliA.Extension.Bytes_to_Pixels
  href: AngeliA.Extension.html#AngeliA_Extension_Bytes_to_Pixels_System_Byte___System_Int32_System_Int32_
  name: Bytes_to_Pixels
  nameWithType: Extension.Bytes_to_Pixels
  fullName: AngeliA.Extension.Bytes_to_Pixels
- uid: AngeliA.Extension.GetBit*
  commentId: Overload:AngeliA.Extension.GetBit
  href: AngeliA.Extension.html#AngeliA_Extension_GetBit_System_UInt64_System_Int32_
  name: GetBit
  nameWithType: Extension.GetBit
  fullName: AngeliA.Extension.GetBit
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint16
  name: ushort
  nameWithType: ushort
  fullName: ushort
  nameWithType.vb: UShort
  fullName.vb: UShort
  name.vb: UShort
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte
  nameWithType: byte
  fullName: byte
  nameWithType.vb: Byte
  fullName.vb: Byte
  name.vb: Byte
- uid: AngeliA.Extension.SetBit*
  commentId: Overload:AngeliA.Extension.SetBit
  href: AngeliA.Extension.html#AngeliA_Extension_SetBit_System_UInt64__System_Int32_System_Boolean_
  name: SetBit
  nameWithType: Extension.SetBit
  fullName: AngeliA.Extension.SetBit
- uid: AngeliA.Extension.Almost*
  commentId: Overload:AngeliA.Extension.Almost
  href: AngeliA.Extension.html#AngeliA_Extension_Almost_System_Single_System_Single_
  name: Almost
  nameWithType: Extension.Almost
  fullName: AngeliA.Extension.Almost
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: AngeliA.Extension.AlmostZero*
  commentId: Overload:AngeliA.Extension.AlmostZero
  href: AngeliA.Extension.html#AngeliA_Extension_AlmostZero_System_Single_
  name: AlmostZero
  nameWithType: Extension.AlmostZero
  fullName: AngeliA.Extension.AlmostZero
- uid: AngeliA.Extension.NotAlmost*
  commentId: Overload:AngeliA.Extension.NotAlmost
  href: AngeliA.Extension.html#AngeliA_Extension_NotAlmost_System_Single_System_Single_
  name: NotAlmost
  nameWithType: Extension.NotAlmost
  fullName: AngeliA.Extension.NotAlmost
- uid: AngeliA.Extension.NotAlmostZero*
  commentId: Overload:AngeliA.Extension.NotAlmostZero
  href: AngeliA.Extension.html#AngeliA_Extension_NotAlmostZero_System_Single_
  name: NotAlmostZero
  nameWithType: Extension.NotAlmostZero
  fullName: AngeliA.Extension.NotAlmostZero
- uid: AngeliA.Extension.GreaterOrAlmost*
  commentId: Overload:AngeliA.Extension.GreaterOrAlmost
  href: AngeliA.Extension.html#AngeliA_Extension_GreaterOrAlmost_System_Single_System_Single_
  name: GreaterOrAlmost
  nameWithType: Extension.GreaterOrAlmost
  fullName: AngeliA.Extension.GreaterOrAlmost
- uid: AngeliA.Extension.LessOrAlmost*
  commentId: Overload:AngeliA.Extension.LessOrAlmost
  href: AngeliA.Extension.html#AngeliA_Extension_LessOrAlmost_System_Single_System_Single_
  name: LessOrAlmost
  nameWithType: Extension.LessOrAlmost
  fullName: AngeliA.Extension.LessOrAlmost
- uid: AngeliA.Extension.UDivide*
  commentId: Overload:AngeliA.Extension.UDivide
  href: AngeliA.Extension.html#AngeliA_Extension_UDivide_System_Int32_System_Int32_
  name: UDivide
  nameWithType: Extension.UDivide
  fullName: AngeliA.Extension.UDivide
- uid: AngeliA.Extension.UMod*
  commentId: Overload:AngeliA.Extension.UMod
  href: AngeliA.Extension.html#AngeliA_Extension_UMod_System_Int32_System_Int32_
  name: UMod
  nameWithType: Extension.UMod
  fullName: AngeliA.Extension.UMod
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: AngeliA.Extension.UCeil*
  commentId: Overload:AngeliA.Extension.UCeil
  href: AngeliA.Extension.html#AngeliA_Extension_UCeil_System_Int32_System_Int32_
  name: UCeil
  nameWithType: Extension.UCeil
  fullName: AngeliA.Extension.UCeil
- uid: AngeliA.Extension.UFloor*
  commentId: Overload:AngeliA.Extension.UFloor
  href: AngeliA.Extension.html#AngeliA_Extension_UFloor_System_Int32_System_Int32_
  name: UFloor
  nameWithType: Extension.UFloor
  fullName: AngeliA.Extension.UFloor
- uid: AngeliA.Extension.Distance*
  commentId: Overload:AngeliA.Extension.Distance
  href: AngeliA.Extension.html#AngeliA_Extension_Distance_System_Int32_System_Int32_
  name: Distance
  nameWithType: Extension.Distance
  fullName: AngeliA.Extension.Distance
- uid: AngeliA.Extension.CeilDivide*
  commentId: Overload:AngeliA.Extension.CeilDivide
  href: AngeliA.Extension.html#AngeliA_Extension_CeilDivide_System_Int32_System_Int32_
  name: CeilDivide
  nameWithType: Extension.CeilDivide
  fullName: AngeliA.Extension.CeilDivide
- uid: AngeliA.Extension.Abs*
  commentId: Overload:AngeliA.Extension.Abs
  href: AngeliA.Extension.html#AngeliA_Extension_Abs_System_Int32_
  name: Abs
  nameWithType: Extension.Abs
  fullName: AngeliA.Extension.Abs
- uid: AngeliA.Extension.RoundToInt*
  commentId: Overload:AngeliA.Extension.RoundToInt
  href: AngeliA.Extension.html#AngeliA_Extension_RoundToInt_System_Single_
  name: RoundToInt
  nameWithType: Extension.RoundToInt
  fullName: AngeliA.Extension.RoundToInt
- uid: AngeliA.Extension.CeilToInt*
  commentId: Overload:AngeliA.Extension.CeilToInt
  href: AngeliA.Extension.html#AngeliA_Extension_CeilToInt_System_Single_
  name: CeilToInt
  nameWithType: Extension.CeilToInt
  fullName: AngeliA.Extension.CeilToInt
- uid: AngeliA.Extension.FloorToInt*
  commentId: Overload:AngeliA.Extension.FloorToInt
  href: AngeliA.Extension.html#AngeliA_Extension_FloorToInt_System_Single_
  name: FloorToInt
  nameWithType: Extension.FloorToInt
  fullName: AngeliA.Extension.FloorToInt
- uid: AngeliA.Extension.Floor*
  commentId: Overload:AngeliA.Extension.Floor
  href: AngeliA.Extension.html#AngeliA_Extension_Floor_System_Single_
  name: Floor
  nameWithType: Extension.Floor
  fullName: AngeliA.Extension.Floor
- uid: AngeliA.Extension.Ceil*
  commentId: Overload:AngeliA.Extension.Ceil
  href: AngeliA.Extension.html#AngeliA_Extension_Ceil_System_Single_
  name: Ceil
  nameWithType: Extension.Ceil
  fullName: AngeliA.Extension.Ceil
- uid: AngeliA.Extension.Round*
  commentId: Overload:AngeliA.Extension.Round
  href: AngeliA.Extension.html#AngeliA_Extension_Round_System_Single_
  name: Round
  nameWithType: Extension.Round
  fullName: AngeliA.Extension.Round
- uid: AngeliA.Extension.ClampDisorder*
  commentId: Overload:AngeliA.Extension.ClampDisorder
  href: AngeliA.Extension.html#AngeliA_Extension_ClampDisorder_System_Int32_System_Int32_System_Int32_
  name: ClampDisorder
  nameWithType: Extension.ClampDisorder
  fullName: AngeliA.Extension.ClampDisorder
- uid: AngeliA.Extension.Clamp*
  commentId: Overload:AngeliA.Extension.Clamp
  href: AngeliA.Extension.html#AngeliA_Extension_Clamp_System_Int32_System_Int32_System_Int32_
  name: Clamp
  nameWithType: Extension.Clamp
  fullName: AngeliA.Extension.Clamp
- uid: AngeliA.Extension.ReverseClamp*
  commentId: Overload:AngeliA.Extension.ReverseClamp
  href: AngeliA.Extension.html#AngeliA_Extension_ReverseClamp_System_Int32_System_Int32_System_Int32_
  name: ReverseClamp
  nameWithType: Extension.ReverseClamp
  fullName: AngeliA.Extension.ReverseClamp
- uid: AngeliA.Extension.Clamp01*
  commentId: Overload:AngeliA.Extension.Clamp01
  href: AngeliA.Extension.html#AngeliA_Extension_Clamp01_System_Single_
  name: Clamp01
  nameWithType: Extension.Clamp01
  fullName: AngeliA.Extension.Clamp01
- uid: AngeliA.Extension.GreaterOrEquel*
  commentId: Overload:AngeliA.Extension.GreaterOrEquel
  href: AngeliA.Extension.html#AngeliA_Extension_GreaterOrEquel_System_Int32_System_Int32_
  name: GreaterOrEquel
  nameWithType: Extension.GreaterOrEquel
  fullName: AngeliA.Extension.GreaterOrEquel
- uid: AngeliA.Extension.LessOrEquel*
  commentId: Overload:AngeliA.Extension.LessOrEquel
  href: AngeliA.Extension.html#AngeliA_Extension_LessOrEquel_System_Int32_System_Int32_
  name: LessOrEquel
  nameWithType: Extension.LessOrEquel
  fullName: AngeliA.Extension.LessOrEquel
- uid: AngeliA.Extension.GreaterOrEquelThanZero*
  commentId: Overload:AngeliA.Extension.GreaterOrEquelThanZero
  href: AngeliA.Extension.html#AngeliA_Extension_GreaterOrEquelThanZero_System_Int32_
  name: GreaterOrEquelThanZero
  nameWithType: Extension.GreaterOrEquelThanZero
  fullName: AngeliA.Extension.GreaterOrEquelThanZero
- uid: AngeliA.Extension.LessOrEquelThanZero*
  commentId: Overload:AngeliA.Extension.LessOrEquelThanZero
  href: AngeliA.Extension.html#AngeliA_Extension_LessOrEquelThanZero_System_Int32_
  name: LessOrEquelThanZero
  nameWithType: Extension.LessOrEquelThanZero
  fullName: AngeliA.Extension.LessOrEquelThanZero
- uid: AngeliA.Extension.Sign*
  commentId: Overload:AngeliA.Extension.Sign
  href: AngeliA.Extension.html#AngeliA_Extension_Sign_System_Int32_
  name: Sign
  nameWithType: Extension.Sign
  fullName: AngeliA.Extension.Sign
- uid: AngeliA.Extension.Sign3*
  commentId: Overload:AngeliA.Extension.Sign3
  href: AngeliA.Extension.html#AngeliA_Extension_Sign3_System_Int32_
  name: Sign3
  nameWithType: Extension.Sign3
  fullName: AngeliA.Extension.Sign3
- uid: AngeliA.Extension.MoveTowards*
  commentId: Overload:AngeliA.Extension.MoveTowards
  href: AngeliA.Extension.html#AngeliA_Extension_MoveTowards_System_Int32_System_Int32_System_Int32_
  name: MoveTowards
  nameWithType: Extension.MoveTowards
  fullName: AngeliA.Extension.MoveTowards
- uid: AngeliA.Extension.InRangeInclude*
  commentId: Overload:AngeliA.Extension.InRangeInclude
  href: AngeliA.Extension.html#AngeliA_Extension_InRangeInclude_System_Int32_System_Int32_System_Int32_
  name: InRangeInclude
  nameWithType: Extension.InRangeInclude
  fullName: AngeliA.Extension.InRangeInclude
- uid: AngeliA.Extension.InRangeExclude*
  commentId: Overload:AngeliA.Extension.InRangeExclude
  href: AngeliA.Extension.html#AngeliA_Extension_InRangeExclude_System_Int32_System_Int32_System_Int32_
  name: InRangeExclude
  nameWithType: Extension.InRangeExclude
  fullName: AngeliA.Extension.InRangeExclude
- uid: AngeliA.Extension.InLength*
  commentId: Overload:AngeliA.Extension.InLength
  href: AngeliA.Extension.html#AngeliA_Extension_InLength_System_Int32_System_Int32_
  name: InLength
  nameWithType: Extension.InLength
  fullName: AngeliA.Extension.InLength
- uid: AngeliA.Extension.LerpTo*
  commentId: Overload:AngeliA.Extension.LerpTo
  href: AngeliA.Extension.html#AngeliA_Extension_LerpTo_System_Int32_System_Int32_System_Single_
  name: LerpTo
  nameWithType: Extension.LerpTo
  fullName: AngeliA.Extension.LerpTo
- uid: AngeliA.Extension.LerpWithGap*
  commentId: Overload:AngeliA.Extension.LerpWithGap
  href: AngeliA.Extension.html#AngeliA_Extension_LerpWithGap_System_Single_System_Single_System_Single_System_Single_
  name: LerpWithGap
  nameWithType: Extension.LerpWithGap
  fullName: AngeliA.Extension.LerpWithGap
- uid: AngeliA.Extension.PingPong*
  commentId: Overload:AngeliA.Extension.PingPong
  href: AngeliA.Extension.html#AngeliA_Extension_PingPong_System_Int32_System_Int32_
  name: PingPong
  nameWithType: Extension.PingPong
  fullName: AngeliA.Extension.PingPong
- uid: AngeliA.Extension.DigitCount*
  commentId: Overload:AngeliA.Extension.DigitCount
  href: AngeliA.Extension.html#AngeliA_Extension_DigitCount_System_Int32_
  name: DigitCount
  nameWithType: Extension.DigitCount
  fullName: AngeliA.Extension.DigitCount
- uid: AngeliA.Extension.ToUnit*
  commentId: Overload:AngeliA.Extension.ToUnit
  href: AngeliA.Extension.html#AngeliA_Extension_ToUnit_System_Int32_
  name: ToUnit
  nameWithType: Extension.ToUnit
  fullName: AngeliA.Extension.ToUnit
- uid: AngeliA.Extension.ToGlobal*
  commentId: Overload:AngeliA.Extension.ToGlobal
  href: AngeliA.Extension.html#AngeliA_Extension_ToGlobal_System_Int32_
  name: ToGlobal
  nameWithType: Extension.ToGlobal
  fullName: AngeliA.Extension.ToGlobal
- uid: AngeliA.Extension.ToUnifyGlobal*
  commentId: Overload:AngeliA.Extension.ToUnifyGlobal
  href: AngeliA.Extension.html#AngeliA_Extension_ToUnifyGlobal_System_Int32_
  name: ToUnifyGlobal
  nameWithType: Extension.ToUnifyGlobal
  fullName: AngeliA.Extension.ToUnifyGlobal
- uid: AngeliA.Int2
  commentId: T:AngeliA.Int2
  parent: AngeliA
  href: AngeliA.Int2.html
  name: Int2
  nameWithType: Int2
  fullName: AngeliA.Int2
- uid: AngeliA.Int3
  commentId: T:AngeliA.Int3
  parent: AngeliA
  href: AngeliA.Int3.html
  name: Int3
  nameWithType: Int3
  fullName: AngeliA.Int3
- uid: AngeliA.Float2
  commentId: T:AngeliA.Float2
  parent: AngeliA
  href: AngeliA.Float2.html
  name: Float2
  nameWithType: Float2
  fullName: AngeliA.Float2
- uid: AngeliA.Extension.Clamped*
  commentId: Overload:AngeliA.Extension.Clamped
  href: AngeliA.Extension.html#AngeliA_Extension_Clamped_AngeliA_Int2_System_Int32_System_Int32_System_Int32_System_Int32_
  name: Clamped
  nameWithType: Extension.Clamped
  fullName: AngeliA.Extension.Clamped
- uid: AngeliA.Extension.ToVector3Int*
  commentId: Overload:AngeliA.Extension.ToVector3Int
  href: AngeliA.Extension.html#AngeliA_Extension_ToVector3Int_AngeliA_Int2_System_Int32_
  name: ToVector3Int
  nameWithType: Extension.ToVector3Int
  fullName: AngeliA.Extension.ToVector3Int
- uid: AngeliA.Extension.Shift*
  commentId: Overload:AngeliA.Extension.Shift
  href: AngeliA.Extension.html#AngeliA_Extension_Shift_AngeliA_Int2_System_Int32_System_Int32_
  name: Shift
  nameWithType: Extension.Shift
  fullName: AngeliA.Extension.Shift
- uid: AngeliA.Extension.ShiftX*
  commentId: Overload:AngeliA.Extension.ShiftX
  href: AngeliA.Extension.html#AngeliA_Extension_ShiftX_AngeliA_Int2_System_Int32_
  name: ShiftX
  nameWithType: Extension.ShiftX
  fullName: AngeliA.Extension.ShiftX
- uid: AngeliA.Extension.ShiftY*
  commentId: Overload:AngeliA.Extension.ShiftY
  href: AngeliA.Extension.html#AngeliA_Extension_ShiftY_AngeliA_Int2_System_Int32_
  name: ShiftY
  nameWithType: Extension.ShiftY
  fullName: AngeliA.Extension.ShiftY
- uid: AngeliA.Float3
  commentId: T:AngeliA.Float3
  parent: AngeliA
  href: AngeliA.Float3.html
  name: Float3
  nameWithType: Float3
  fullName: AngeliA.Float3
- uid: AngeliA.FRect
  commentId: T:AngeliA.FRect
  parent: AngeliA
  href: AngeliA.FRect.html
  name: FRect
  nameWithType: FRect
  fullName: AngeliA.FRect
- uid: AngeliA.Extension.Inside01*
  commentId: Overload:AngeliA.Extension.Inside01
  href: AngeliA.Extension.html#AngeliA_Extension_Inside01_AngeliA_Float2_
  name: Inside01
  nameWithType: Extension.Inside01
  fullName: AngeliA.Extension.Inside01
- uid: AngeliA.Extension.Inside*
  commentId: Overload:AngeliA.Extension.Inside
  href: AngeliA.Extension.html#AngeliA_Extension_Inside_AngeliA_Float2_AngeliA_Float2_AngeliA_Float2_
  name: Inside
  nameWithType: Extension.Inside
  fullName: AngeliA.Extension.Inside
- uid: AngeliA.Float4
  commentId: T:AngeliA.Float4
  parent: AngeliA
  href: AngeliA.Float4.html
  name: Float4
  nameWithType: Float4
  fullName: AngeliA.Float4
- uid: AngeliA.Extension.Rotate*
  commentId: Overload:AngeliA.Extension.Rotate
  href: AngeliA.Extension.html#AngeliA_Extension_Rotate_AngeliA_Float3_System_Single_
  name: Rotate
  nameWithType: Extension.Rotate
  fullName: AngeliA.Extension.Rotate
- uid: AngeliA.Extension.GetRotation*
  commentId: Overload:AngeliA.Extension.GetRotation
  href: AngeliA.Extension.html#AngeliA_Extension_GetRotation_AngeliA_Float2_
  name: GetRotation
  nameWithType: Extension.GetRotation
  fullName: AngeliA.Extension.GetRotation
- uid: AngeliA.Extension.TryGetDirection8*
  commentId: Overload:AngeliA.Extension.TryGetDirection8
  href: AngeliA.Extension.html#AngeliA_Extension_TryGetDirection8_AngeliA_Int2_AngeliA_Direction8__
  name: TryGetDirection8
  nameWithType: Extension.TryGetDirection8
  fullName: AngeliA.Extension.TryGetDirection8
- uid: AngeliA.Direction8
  commentId: T:AngeliA.Direction8
  parent: AngeliA
  href: AngeliA.Direction8.html
  name: Direction8
  nameWithType: Direction8
  fullName: AngeliA.Direction8
- uid: AngeliA.Extension.IsHorizontal*
  commentId: Overload:AngeliA.Extension.IsHorizontal
  href: AngeliA.Extension.html#AngeliA_Extension_IsHorizontal_AngeliA_Direction4_
  name: IsHorizontal
  nameWithType: Extension.IsHorizontal
  fullName: AngeliA.Extension.IsHorizontal
- uid: AngeliA.Direction4
  commentId: T:AngeliA.Direction4
  parent: AngeliA
  href: AngeliA.Direction4.html
  name: Direction4
  nameWithType: Direction4
  fullName: AngeliA.Direction4
- uid: AngeliA.Extension.IsVertical*
  commentId: Overload:AngeliA.Extension.IsVertical
  href: AngeliA.Extension.html#AngeliA_Extension_IsVertical_AngeliA_Direction4_
  name: IsVertical
  nameWithType: Extension.IsVertical
  fullName: AngeliA.Extension.IsVertical
- uid: AngeliA.Direction5
  commentId: T:AngeliA.Direction5
  parent: AngeliA
  href: AngeliA.Direction5.html
  name: Direction5
  nameWithType: Direction5
  fullName: AngeliA.Direction5
- uid: AngeliA.Extension.Opposite*
  commentId: Overload:AngeliA.Extension.Opposite
  href: AngeliA.Extension.html#AngeliA_Extension_Opposite_AngeliA_Direction4_
  name: Opposite
  nameWithType: Extension.Opposite
  fullName: AngeliA.Extension.Opposite
- uid: AngeliA.Direction3
  commentId: T:AngeliA.Direction3
  parent: AngeliA
  href: AngeliA.Direction3.html
  name: Direction3
  nameWithType: Direction3
  fullName: AngeliA.Direction3
- uid: AngeliA.Extension.Clockwise*
  commentId: Overload:AngeliA.Extension.Clockwise
  href: AngeliA.Extension.html#AngeliA_Extension_Clockwise_AngeliA_Direction4_
  name: Clockwise
  nameWithType: Extension.Clockwise
  fullName: AngeliA.Extension.Clockwise
- uid: AngeliA.Extension.AntiClockwise*
  commentId: Overload:AngeliA.Extension.AntiClockwise
  href: AngeliA.Extension.html#AngeliA_Extension_AntiClockwise_AngeliA_Direction4_
  name: AntiClockwise
  nameWithType: Extension.AntiClockwise
  fullName: AngeliA.Extension.AntiClockwise
- uid: AngeliA.Extension.Normal*
  commentId: Overload:AngeliA.Extension.Normal
  href: AngeliA.Extension.html#AngeliA_Extension_Normal_AngeliA_Direction4_
  name: Normal
  nameWithType: Extension.Normal
  fullName: AngeliA.Extension.Normal
- uid: AngeliA.Extension.GetHorizontalDirection*
  commentId: Overload:AngeliA.Extension.GetHorizontalDirection
  href: AngeliA.Extension.html#AngeliA_Extension_GetHorizontalDirection_AngeliA_Direction5_
  name: GetHorizontalDirection
  nameWithType: Extension.GetHorizontalDirection
  fullName: AngeliA.Extension.GetHorizontalDirection
- uid: AngeliA.Extension.GetVerticalDirection*
  commentId: Overload:AngeliA.Extension.GetVerticalDirection
  href: AngeliA.Extension.html#AngeliA_Extension_GetVerticalDirection_AngeliA_Direction5_
  name: GetVerticalDirection
  nameWithType: Extension.GetVerticalDirection
  fullName: AngeliA.Extension.GetVerticalDirection
- uid: AngeliA.Extension.IsTilted*
  commentId: Overload:AngeliA.Extension.IsTilted
  href: AngeliA.Extension.html#AngeliA_Extension_IsTilted_AngeliA_Direction8_
  name: IsTilted
  nameWithType: Extension.IsTilted
  fullName: AngeliA.Extension.IsTilted
- uid: AngeliA.Extension.IsPositive*
  commentId: Overload:AngeliA.Extension.IsPositive
  href: AngeliA.Extension.html#AngeliA_Extension_IsPositive_AngeliA_Direction8_
  name: IsPositive
  nameWithType: Extension.IsPositive
  fullName: AngeliA.Extension.IsPositive
- uid: AngeliA.Extension.IsLeft*
  commentId: Overload:AngeliA.Extension.IsLeft
  href: AngeliA.Extension.html#AngeliA_Extension_IsLeft_AngeliA_Direction8_
  name: IsLeft
  nameWithType: Extension.IsLeft
  fullName: AngeliA.Extension.IsLeft
- uid: AngeliA.Extension.IsRight*
  commentId: Overload:AngeliA.Extension.IsRight
  href: AngeliA.Extension.html#AngeliA_Extension_IsRight_AngeliA_Direction8_
  name: IsRight
  nameWithType: Extension.IsRight
  fullName: AngeliA.Extension.IsRight
- uid: AngeliA.Extension.IsBottom*
  commentId: Overload:AngeliA.Extension.IsBottom
  href: AngeliA.Extension.html#AngeliA_Extension_IsBottom_AngeliA_Direction8_
  name: IsBottom
  nameWithType: Extension.IsBottom
  fullName: AngeliA.Extension.IsBottom
- uid: AngeliA.Extension.IsTop*
  commentId: Overload:AngeliA.Extension.IsTop
  href: AngeliA.Extension.html#AngeliA_Extension_IsTop_AngeliA_Direction8_
  name: IsTop
  nameWithType: Extension.IsTop
  fullName: AngeliA.Extension.IsTop
- uid: AngeliA.Extension.ToDirection4*
  commentId: Overload:AngeliA.Extension.ToDirection4
  href: AngeliA.Extension.html#AngeliA_Extension_ToDirection4_AngeliA_Direction5_AngeliA_Direction4_
  name: ToDirection4
  nameWithType: Extension.ToDirection4
  fullName: AngeliA.Extension.ToDirection4
- uid: AngeliA.Extension.ToDirection5*
  commentId: Overload:AngeliA.Extension.ToDirection5
  href: AngeliA.Extension.html#AngeliA_Extension_ToDirection5_AngeliA_Direction4_
  name: ToDirection5
  nameWithType: Extension.ToDirection5
  fullName: AngeliA.Extension.ToDirection5
- uid: AngeliA.Extension.ToDirection8*
  commentId: Overload:AngeliA.Extension.ToDirection8
  href: AngeliA.Extension.html#AngeliA_Extension_ToDirection8_AngeliA_Direction4_
  name: ToDirection8
  nameWithType: Extension.ToDirection8
  fullName: AngeliA.Extension.ToDirection8
- uid: AngeliA.Extension.ToAlignment*
  commentId: Overload:AngeliA.Extension.ToAlignment
  href: AngeliA.Extension.html#AngeliA_Extension_ToAlignment_AngeliA_Direction5_
  name: ToAlignment
  nameWithType: Extension.ToAlignment
  fullName: AngeliA.Extension.ToAlignment
- uid: AngeliA.Alignment
  commentId: T:AngeliA.Alignment
  parent: AngeliA
  href: AngeliA.Alignment.html
  name: Alignment
  nameWithType: Alignment
  fullName: AngeliA.Alignment
- uid: AngeliA.Extension.Expand*
  commentId: Overload:AngeliA.Extension.Expand
  href: AngeliA.Extension.html#AngeliA_Extension_Expand_AngeliA_FRect_System_Single_
  name: Expand
  nameWithType: Extension.Expand
  fullName: AngeliA.Extension.Expand
- uid: AngeliA.Extension.Shrink*
  commentId: Overload:AngeliA.Extension.Shrink
  href: AngeliA.Extension.html#AngeliA_Extension_Shrink_AngeliA_FRect_System_Single_
  name: Shrink
  nameWithType: Extension.Shrink
  fullName: AngeliA.Extension.Shrink
- uid: AngeliA.Extension.Fit*
  commentId: Overload:AngeliA.Extension.Fit
  href: AngeliA.Extension.html#AngeliA_Extension_Fit_AngeliA_FRect_System_Single_System_Single_System_Single_
  name: Fit
  nameWithType: Extension.Fit
  fullName: AngeliA.Extension.Fit
- uid: AngeliA.Extension.Envelope*
  commentId: Overload:AngeliA.Extension.Envelope
  href: AngeliA.Extension.html#AngeliA_Extension_Envelope_AngeliA_FRect_System_Single_
  name: Envelope
  nameWithType: Extension.Envelope
  fullName: AngeliA.Extension.Envelope
- uid: AngeliA.Extension.GetClamp*
  commentId: Overload:AngeliA.Extension.GetClamp
  href: AngeliA.Extension.html#AngeliA_Extension_GetClamp_AngeliA_FRect_AngeliA_FRect_
  name: GetClamp
  nameWithType: Extension.GetClamp
  fullName: AngeliA.Extension.GetClamp
- uid: AngeliA.Extension.BottomLeft*
  commentId: Overload:AngeliA.Extension.BottomLeft
  href: AngeliA.Extension.html#AngeliA_Extension_BottomLeft_AngeliA_FRect_
  name: BottomLeft
  nameWithType: Extension.BottomLeft
  fullName: AngeliA.Extension.BottomLeft
- uid: AngeliA.Extension.BottomRight*
  commentId: Overload:AngeliA.Extension.BottomRight
  href: AngeliA.Extension.html#AngeliA_Extension_BottomRight_AngeliA_FRect_
  name: BottomRight
  nameWithType: Extension.BottomRight
  fullName: AngeliA.Extension.BottomRight
- uid: AngeliA.Extension.TopLeft*
  commentId: Overload:AngeliA.Extension.TopLeft
  href: AngeliA.Extension.html#AngeliA_Extension_TopLeft_AngeliA_FRect_
  name: TopLeft
  nameWithType: Extension.TopLeft
  fullName: AngeliA.Extension.TopLeft
- uid: AngeliA.Extension.TopRight*
  commentId: Overload:AngeliA.Extension.TopRight
  href: AngeliA.Extension.html#AngeliA_Extension_TopRight_AngeliA_FRect_
  name: TopRight
  nameWithType: Extension.TopRight
  fullName: AngeliA.Extension.TopRight
- uid: AngeliA.Extension.Edge*
  commentId: Overload:AngeliA.Extension.Edge
  href: AngeliA.Extension.html#AngeliA_Extension_Edge_AngeliA_FRect_AngeliA_Direction4_System_Single_
  name: Edge
  nameWithType: Extension.Edge
  fullName: AngeliA.Extension.Edge
- uid: AngeliA.Extension.ScaleFrom*
  commentId: Overload:AngeliA.Extension.ScaleFrom
  href: AngeliA.Extension.html#AngeliA_Extension_ScaleFrom_AngeliA_FRect_System_Single_System_Single_System_Single_
  name: ScaleFrom
  nameWithType: Extension.ScaleFrom
  fullName: AngeliA.Extension.ScaleFrom
- uid: AngeliA.Extension.ResizeFrom*
  commentId: Overload:AngeliA.Extension.ResizeFrom
  href: AngeliA.Extension.html#AngeliA_Extension_ResizeFrom_AngeliA_FRect_System_Single_System_Single_System_Single_System_Single_
  name: ResizeFrom
  nameWithType: Extension.ResizeFrom
  fullName: AngeliA.Extension.ResizeFrom
- uid: AngeliA.Extension.ToIRect*
  commentId: Overload:AngeliA.Extension.ToIRect
  href: AngeliA.Extension.html#AngeliA_Extension_ToIRect_AngeliA_FRect_
  name: ToIRect
  nameWithType: Extension.ToIRect
  fullName: AngeliA.Extension.ToIRect
- uid: AngeliA.Extension.ExpandToIRect*
  commentId: Overload:AngeliA.Extension.ExpandToIRect
  href: AngeliA.Extension.html#AngeliA_Extension_ExpandToIRect_AngeliA_FRect_
  name: ExpandToIRect
  nameWithType: Extension.ExpandToIRect
  fullName: AngeliA.Extension.ExpandToIRect
- uid: AngeliA.Extension.ToFRect*
  commentId: Overload:AngeliA.Extension.ToFRect
  href: AngeliA.Extension.html#AngeliA_Extension_ToFRect_AngeliA_IRect_
  name: ToFRect
  nameWithType: Extension.ToFRect
  fullName: AngeliA.Extension.ToFRect
- uid: AngeliA.AngeSprite
  commentId: T:AngeliA.AngeSprite
  parent: AngeliA
  href: AngeliA.AngeSprite.html
  name: AngeSprite
  nameWithType: AngeSprite
  fullName: AngeliA.AngeSprite
- uid: AngeliA.Extension.ExpandHorizontal*
  commentId: Overload:AngeliA.Extension.ExpandHorizontal
  href: AngeliA.Extension.html#AngeliA_Extension_ExpandHorizontal_AngeliA_IRect_System_Int32_
  name: ExpandHorizontal
  nameWithType: Extension.ExpandHorizontal
  fullName: AngeliA.Extension.ExpandHorizontal
- uid: AngeliA.Extension.ExpandVertical*
  commentId: Overload:AngeliA.Extension.ExpandVertical
  href: AngeliA.Extension.html#AngeliA_Extension_ExpandVertical_AngeliA_IRect_System_Int32_
  name: ExpandVertical
  nameWithType: Extension.ExpandVertical
  fullName: AngeliA.Extension.ExpandVertical
- uid: AngeliA.Int4
  commentId: T:AngeliA.Int4
  parent: AngeliA
  href: AngeliA.Int4.html
  name: Int4
  nameWithType: Int4
  fullName: AngeliA.Int4
- uid: AngeliA.Extension.ShrinkLeft*
  commentId: Overload:AngeliA.Extension.ShrinkLeft
  href: AngeliA.Extension.html#AngeliA_Extension_ShrinkLeft_AngeliA_IRect_System_Int32_
  name: ShrinkLeft
  nameWithType: Extension.ShrinkLeft
  fullName: AngeliA.Extension.ShrinkLeft
- uid: AngeliA.Extension.ShrinkRight*
  commentId: Overload:AngeliA.Extension.ShrinkRight
  href: AngeliA.Extension.html#AngeliA_Extension_ShrinkRight_AngeliA_IRect_System_Int32_
  name: ShrinkRight
  nameWithType: Extension.ShrinkRight
  fullName: AngeliA.Extension.ShrinkRight
- uid: AngeliA.Extension.ShrinkDown*
  commentId: Overload:AngeliA.Extension.ShrinkDown
  href: AngeliA.Extension.html#AngeliA_Extension_ShrinkDown_AngeliA_IRect_System_Int32_
  name: ShrinkDown
  nameWithType: Extension.ShrinkDown
  fullName: AngeliA.Extension.ShrinkDown
- uid: AngeliA.Extension.ShrinkUp*
  commentId: Overload:AngeliA.Extension.ShrinkUp
  href: AngeliA.Extension.html#AngeliA_Extension_ShrinkUp_AngeliA_IRect_System_Int32_
  name: ShrinkUp
  nameWithType: Extension.ShrinkUp
  fullName: AngeliA.Extension.ShrinkUp
- uid: AngeliA.Extension.FlipHorizontal*
  commentId: Overload:AngeliA.Extension.FlipHorizontal
  href: AngeliA.Extension.html#AngeliA_Extension_FlipHorizontal_AngeliA_IRect__
  name: FlipHorizontal
  nameWithType: Extension.FlipHorizontal
  fullName: AngeliA.Extension.FlipHorizontal
- uid: AngeliA.Extension.FlipVertical*
  commentId: Overload:AngeliA.Extension.FlipVertical
  href: AngeliA.Extension.html#AngeliA_Extension_FlipVertical_AngeliA_IRect__
  name: FlipVertical
  nameWithType: Extension.FlipVertical
  fullName: AngeliA.Extension.FlipVertical
- uid: AngeliA.Extension.GetFlipHorizontal*
  commentId: Overload:AngeliA.Extension.GetFlipHorizontal
  href: AngeliA.Extension.html#AngeliA_Extension_GetFlipHorizontal_AngeliA_IRect_
  name: GetFlipHorizontal
  nameWithType: Extension.GetFlipHorizontal
  fullName: AngeliA.Extension.GetFlipHorizontal
- uid: AngeliA.Extension.GetFlipVertical*
  commentId: Overload:AngeliA.Extension.GetFlipVertical
  href: AngeliA.Extension.html#AngeliA_Extension_GetFlipVertical_AngeliA_IRect_
  name: GetFlipVertical
  nameWithType: Extension.GetFlipVertical
  fullName: AngeliA.Extension.GetFlipVertical
- uid: AngeliA.Extension.FlipNegative*
  commentId: Overload:AngeliA.Extension.FlipNegative
  href: AngeliA.Extension.html#AngeliA_Extension_FlipNegative_AngeliA_IRect__
  name: FlipNegative
  nameWithType: Extension.FlipNegative
  fullName: AngeliA.Extension.FlipNegative
- uid: AngeliA.Extension.GetFlipNegative*
  commentId: Overload:AngeliA.Extension.GetFlipNegative
  href: AngeliA.Extension.html#AngeliA_Extension_GetFlipNegative_AngeliA_IRect_
  name: GetFlipNegative
  nameWithType: Extension.GetFlipNegative
  fullName: AngeliA.Extension.GetFlipNegative
- uid: AngeliA.Extension.SetMinMax*
  commentId: Overload:AngeliA.Extension.SetMinMax
  href: AngeliA.Extension.html#AngeliA_Extension_SetMinMax_AngeliA_IRect__System_Int32_System_Int32_System_Int32_System_Int32_
  name: SetMinMax
  nameWithType: Extension.SetMinMax
  fullName: AngeliA.Extension.SetMinMax
- uid: AngeliA.Extension.IsSame*
  commentId: Overload:AngeliA.Extension.IsSame
  href: AngeliA.Extension.html#AngeliA_Extension_IsSame_AngeliA_IRect_AngeliA_IRect_
  name: IsSame
  nameWithType: Extension.IsSame
  fullName: AngeliA.Extension.IsSame
- uid: AngeliA.Extension.IsNotSame*
  commentId: Overload:AngeliA.Extension.IsNotSame
  href: AngeliA.Extension.html#AngeliA_Extension_IsNotSame_AngeliA_IRect_AngeliA_IRect_
  name: IsNotSame
  nameWithType: Extension.IsNotSame
  fullName: AngeliA.Extension.IsNotSame
- uid: AngeliA.Extension.Contains*
  commentId: Overload:AngeliA.Extension.Contains
  href: AngeliA.Extension.html#AngeliA_Extension_Contains_AngeliA_IRect_System_Int32_System_Int32_
  name: Contains
  nameWithType: Extension.Contains
  fullName: AngeliA.Extension.Contains
- uid: AngeliA.Extension.CenterX*
  commentId: Overload:AngeliA.Extension.CenterX
  href: AngeliA.Extension.html#AngeliA_Extension_CenterX_AngeliA_IRect_
  name: CenterX
  nameWithType: Extension.CenterX
  fullName: AngeliA.Extension.CenterX
- uid: AngeliA.Extension.CenterY*
  commentId: Overload:AngeliA.Extension.CenterY
  href: AngeliA.Extension.html#AngeliA_Extension_CenterY_AngeliA_IRect_
  name: CenterY
  nameWithType: Extension.CenterY
  fullName: AngeliA.Extension.CenterY
- uid: AngeliA.Extension.CenterInt*
  commentId: Overload:AngeliA.Extension.CenterInt
  href: AngeliA.Extension.html#AngeliA_Extension_CenterInt_AngeliA_IRect_
  name: CenterInt
  nameWithType: Extension.CenterInt
  fullName: AngeliA.Extension.CenterInt
- uid: AngeliA.Extension.MidRight*
  commentId: Overload:AngeliA.Extension.MidRight
  href: AngeliA.Extension.html#AngeliA_Extension_MidRight_AngeliA_IRect_
  name: MidRight
  nameWithType: Extension.MidRight
  fullName: AngeliA.Extension.MidRight
- uid: AngeliA.Extension.MidLeft*
  commentId: Overload:AngeliA.Extension.MidLeft
  href: AngeliA.Extension.html#AngeliA_Extension_MidLeft_AngeliA_IRect_
  name: MidLeft
  nameWithType: Extension.MidLeft
  fullName: AngeliA.Extension.MidLeft
- uid: AngeliA.Extension.BottomMid*
  commentId: Overload:AngeliA.Extension.BottomMid
  href: AngeliA.Extension.html#AngeliA_Extension_BottomMid_AngeliA_IRect_
  name: BottomMid
  nameWithType: Extension.BottomMid
  fullName: AngeliA.Extension.BottomMid
- uid: AngeliA.Extension.TopMid*
  commentId: Overload:AngeliA.Extension.TopMid
  href: AngeliA.Extension.html#AngeliA_Extension_TopMid_AngeliA_IRect_
  name: TopMid
  nameWithType: Extension.TopMid
  fullName: AngeliA.Extension.TopMid
- uid: AngeliA.Extension.ClampPositionInside*
  commentId: Overload:AngeliA.Extension.ClampPositionInside
  href: AngeliA.Extension.html#AngeliA_Extension_ClampPositionInside_AngeliA_IRect__AngeliA_IRect_
  name: ClampPositionInside
  nameWithType: Extension.ClampPositionInside
  fullName: AngeliA.Extension.ClampPositionInside
- uid: AngeliA.Extension.EdgeInsideLeft*
  commentId: Overload:AngeliA.Extension.EdgeInsideLeft
  href: AngeliA.Extension.html#AngeliA_Extension_EdgeInsideLeft_AngeliA_IRect_System_Int32_
  name: EdgeInsideLeft
  nameWithType: Extension.EdgeInsideLeft
  fullName: AngeliA.Extension.EdgeInsideLeft
- uid: AngeliA.Extension.EdgeInsideRight*
  commentId: Overload:AngeliA.Extension.EdgeInsideRight
  href: AngeliA.Extension.html#AngeliA_Extension_EdgeInsideRight_AngeliA_IRect_System_Int32_
  name: EdgeInsideRight
  nameWithType: Extension.EdgeInsideRight
  fullName: AngeliA.Extension.EdgeInsideRight
- uid: AngeliA.Extension.EdgeInsideDown*
  commentId: Overload:AngeliA.Extension.EdgeInsideDown
  href: AngeliA.Extension.html#AngeliA_Extension_EdgeInsideDown_AngeliA_IRect_System_Int32_
  name: EdgeInsideDown
  nameWithType: Extension.EdgeInsideDown
  fullName: AngeliA.Extension.EdgeInsideDown
- uid: AngeliA.Extension.EdgeInsideUp*
  commentId: Overload:AngeliA.Extension.EdgeInsideUp
  href: AngeliA.Extension.html#AngeliA_Extension_EdgeInsideUp_AngeliA_IRect_System_Int32_
  name: EdgeInsideUp
  nameWithType: Extension.EdgeInsideUp
  fullName: AngeliA.Extension.EdgeInsideUp
- uid: AngeliA.Extension.EdgeOutsideLeft*
  commentId: Overload:AngeliA.Extension.EdgeOutsideLeft
  href: AngeliA.Extension.html#AngeliA_Extension_EdgeOutsideLeft_AngeliA_IRect_System_Int32_
  name: EdgeOutsideLeft
  nameWithType: Extension.EdgeOutsideLeft
  fullName: AngeliA.Extension.EdgeOutsideLeft
- uid: AngeliA.Extension.EdgeOutsideRight*
  commentId: Overload:AngeliA.Extension.EdgeOutsideRight
  href: AngeliA.Extension.html#AngeliA_Extension_EdgeOutsideRight_AngeliA_IRect_System_Int32_
  name: EdgeOutsideRight
  nameWithType: Extension.EdgeOutsideRight
  fullName: AngeliA.Extension.EdgeOutsideRight
- uid: AngeliA.Extension.EdgeOutsideDown*
  commentId: Overload:AngeliA.Extension.EdgeOutsideDown
  href: AngeliA.Extension.html#AngeliA_Extension_EdgeOutsideDown_AngeliA_IRect_System_Int32_
  name: EdgeOutsideDown
  nameWithType: Extension.EdgeOutsideDown
  fullName: AngeliA.Extension.EdgeOutsideDown
- uid: AngeliA.Extension.EdgeOutsideUp*
  commentId: Overload:AngeliA.Extension.EdgeOutsideUp
  href: AngeliA.Extension.html#AngeliA_Extension_EdgeOutsideUp_AngeliA_IRect_System_Int32_
  name: EdgeOutsideUp
  nameWithType: Extension.EdgeOutsideUp
  fullName: AngeliA.Extension.EdgeOutsideUp
- uid: AngeliA.Extension.EdgeInsideSquareLeft*
  commentId: Overload:AngeliA.Extension.EdgeInsideSquareLeft
  href: AngeliA.Extension.html#AngeliA_Extension_EdgeInsideSquareLeft_AngeliA_IRect_
  name: EdgeInsideSquareLeft
  nameWithType: Extension.EdgeInsideSquareLeft
  fullName: AngeliA.Extension.EdgeInsideSquareLeft
- uid: AngeliA.Extension.EdgeInsideSquareRight*
  commentId: Overload:AngeliA.Extension.EdgeInsideSquareRight
  href: AngeliA.Extension.html#AngeliA_Extension_EdgeInsideSquareRight_AngeliA_IRect_
  name: EdgeInsideSquareRight
  nameWithType: Extension.EdgeInsideSquareRight
  fullName: AngeliA.Extension.EdgeInsideSquareRight
- uid: AngeliA.Extension.EdgeInsideSquareDown*
  commentId: Overload:AngeliA.Extension.EdgeInsideSquareDown
  href: AngeliA.Extension.html#AngeliA_Extension_EdgeInsideSquareDown_AngeliA_IRect_
  name: EdgeInsideSquareDown
  nameWithType: Extension.EdgeInsideSquareDown
  fullName: AngeliA.Extension.EdgeInsideSquareDown
- uid: AngeliA.Extension.EdgeInsideSquareUp*
  commentId: Overload:AngeliA.Extension.EdgeInsideSquareUp
  href: AngeliA.Extension.html#AngeliA_Extension_EdgeInsideSquareUp_AngeliA_IRect_
  name: EdgeInsideSquareUp
  nameWithType: Extension.EdgeInsideSquareUp
  fullName: AngeliA.Extension.EdgeInsideSquareUp
- uid: AngeliA.Extension.EdgeInside*
  commentId: Overload:AngeliA.Extension.EdgeInside
  href: AngeliA.Extension.html#AngeliA_Extension_EdgeInside_AngeliA_IRect_AngeliA_Direction4_System_Int32_
  name: EdgeInside
  nameWithType: Extension.EdgeInside
  fullName: AngeliA.Extension.EdgeInside
- uid: AngeliA.Extension.EdgeExact*
  commentId: Overload:AngeliA.Extension.EdgeExact
  href: AngeliA.Extension.html#AngeliA_Extension_EdgeExact_AngeliA_IRect_AngeliA_Direction4_System_Int32_
  name: EdgeExact
  nameWithType: Extension.EdgeExact
  fullName: AngeliA.Extension.EdgeExact
- uid: AngeliA.Extension.EdgeOutside*
  commentId: Overload:AngeliA.Extension.EdgeOutside
  href: AngeliA.Extension.html#AngeliA_Extension_EdgeOutside_AngeliA_IRect_AngeliA_Direction4_System_Int32_
  name: EdgeOutside
  nameWithType: Extension.EdgeOutside
  fullName: AngeliA.Extension.EdgeOutside
- uid: AngeliA.Extension.CornerInside*
  commentId: Overload:AngeliA.Extension.CornerInside
  href: AngeliA.Extension.html#AngeliA_Extension_CornerInside_AngeliA_IRect_AngeliA_Alignment_System_Int32_
  name: CornerInside
  nameWithType: Extension.CornerInside
  fullName: AngeliA.Extension.CornerInside
- uid: AngeliA.Extension.CornerOutside*
  commentId: Overload:AngeliA.Extension.CornerOutside
  href: AngeliA.Extension.html#AngeliA_Extension_CornerOutside_AngeliA_IRect_AngeliA_Alignment_System_Int32_
  name: CornerOutside
  nameWithType: Extension.CornerOutside
  fullName: AngeliA.Extension.CornerOutside
- uid: AngeliA.Extension.CompleteInside*
  commentId: Overload:AngeliA.Extension.CompleteInside
  href: AngeliA.Extension.html#AngeliA_Extension_CompleteInside_AngeliA_IRect_AngeliA_IRect_
  name: CompleteInside
  nameWithType: Extension.CompleteInside
  fullName: AngeliA.Extension.CompleteInside
- uid: AngeliA.Extension.SlideLeft*
  commentId: Overload:AngeliA.Extension.SlideLeft
  href: AngeliA.Extension.html#AngeliA_Extension_SlideLeft_AngeliA_IRect__System_Int32_
  name: SlideLeft
  nameWithType: Extension.SlideLeft
  fullName: AngeliA.Extension.SlideLeft
- uid: AngeliA.Extension.SlideRight*
  commentId: Overload:AngeliA.Extension.SlideRight
  href: AngeliA.Extension.html#AngeliA_Extension_SlideRight_AngeliA_IRect__System_Int32_
  name: SlideRight
  nameWithType: Extension.SlideRight
  fullName: AngeliA.Extension.SlideRight
- uid: AngeliA.Extension.SlideDown*
  commentId: Overload:AngeliA.Extension.SlideDown
  href: AngeliA.Extension.html#AngeliA_Extension_SlideDown_AngeliA_IRect__System_Int32_
  name: SlideDown
  nameWithType: Extension.SlideDown
  fullName: AngeliA.Extension.SlideDown
- uid: AngeliA.Extension.SlideUp*
  commentId: Overload:AngeliA.Extension.SlideUp
  href: AngeliA.Extension.html#AngeliA_Extension_SlideUp_AngeliA_IRect__System_Int32_
  name: SlideUp
  nameWithType: Extension.SlideUp
  fullName: AngeliA.Extension.SlideUp
- uid: AngeliA.Extension.TopHalf*
  commentId: Overload:AngeliA.Extension.TopHalf
  href: AngeliA.Extension.html#AngeliA_Extension_TopHalf_AngeliA_IRect_
  name: TopHalf
  nameWithType: Extension.TopHalf
  fullName: AngeliA.Extension.TopHalf
- uid: AngeliA.Extension.BottomHalf*
  commentId: Overload:AngeliA.Extension.BottomHalf
  href: AngeliA.Extension.html#AngeliA_Extension_BottomHalf_AngeliA_IRect_
  name: BottomHalf
  nameWithType: Extension.BottomHalf
  fullName: AngeliA.Extension.BottomHalf
- uid: AngeliA.Extension.RightHalf*
  commentId: Overload:AngeliA.Extension.RightHalf
  href: AngeliA.Extension.html#AngeliA_Extension_RightHalf_AngeliA_IRect_
  name: RightHalf
  nameWithType: Extension.RightHalf
  fullName: AngeliA.Extension.RightHalf
- uid: AngeliA.Extension.LeftHalf*
  commentId: Overload:AngeliA.Extension.LeftHalf
  href: AngeliA.Extension.html#AngeliA_Extension_LeftHalf_AngeliA_IRect_
  name: LeftHalf
  nameWithType: Extension.LeftHalf
  fullName: AngeliA.Extension.LeftHalf
- uid: AngeliA.Extension.HorizontalMidHalf*
  commentId: Overload:AngeliA.Extension.HorizontalMidHalf
  href: AngeliA.Extension.html#AngeliA_Extension_HorizontalMidHalf_AngeliA_IRect_
  name: HorizontalMidHalf
  nameWithType: Extension.HorizontalMidHalf
  fullName: AngeliA.Extension.HorizontalMidHalf
- uid: AngeliA.Extension.VerticalMidHalf*
  commentId: Overload:AngeliA.Extension.VerticalMidHalf
  href: AngeliA.Extension.html#AngeliA_Extension_VerticalMidHalf_AngeliA_IRect_
  name: VerticalMidHalf
  nameWithType: Extension.VerticalMidHalf
  fullName: AngeliA.Extension.VerticalMidHalf
- uid: AngeliA.Extension.PartHorizontal*
  commentId: Overload:AngeliA.Extension.PartHorizontal
  href: AngeliA.Extension.html#AngeliA_Extension_PartHorizontal_AngeliA_IRect_System_Int32_System_Int32_
  name: PartHorizontal
  nameWithType: Extension.PartHorizontal
  fullName: AngeliA.Extension.PartHorizontal
- uid: AngeliA.Extension.PartVertical*
  commentId: Overload:AngeliA.Extension.PartVertical
  href: AngeliA.Extension.html#AngeliA_Extension_PartVertical_AngeliA_IRect_System_Int32_System_Int32_
  name: PartVertical
  nameWithType: Extension.PartVertical
  fullName: AngeliA.Extension.PartVertical
- uid: AngeliA.Extension.Intersection*
  commentId: Overload:AngeliA.Extension.Intersection
  href: AngeliA.Extension.html#AngeliA_Extension_Intersection_AngeliA_IRect_AngeliA_IRect_
  name: Intersection
  nameWithType: Extension.Intersection
  fullName: AngeliA.Extension.Intersection
- uid: System.Nullable{AngeliA.IRect}
  commentId: T:System.Nullable{AngeliA.IRect}
  parent: System
  definition: System.Nullable`1
  href: AngeliA.IRect.html
  name: IRect?
  nameWithType: IRect?
  fullName: AngeliA.IRect?
  spec.csharp:
  - uid: AngeliA.IRect
    name: IRect
    href: AngeliA.IRect.html
  - name: '?'
  spec.vb:
  - uid: AngeliA.IRect
    name: IRect
    href: AngeliA.IRect.html
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: AngeliA.Extension.Dodge*
  commentId: Overload:AngeliA.Extension.Dodge
  href: AngeliA.Extension.html#AngeliA_Extension_Dodge_AngeliA_IRect_AngeliA_IRect_System_Nullable_AngeliA_IRect___System_Nullable_AngeliA_IRect___System_Nullable_AngeliA_IRect___System_Nullable_AngeliA_IRect___
  name: Dodge
  nameWithType: Extension.Dodge
  fullName: AngeliA.Extension.Dodge
- uid: AngeliA.Extension.ForceSquare*
  commentId: Overload:AngeliA.Extension.ForceSquare
  href: AngeliA.Extension.html#AngeliA_Extension_ForceSquare_AngeliA_IRect_System_Boolean_System_Boolean_System_Boolean_
  name: ForceSquare
  nameWithType: Extension.ForceSquare
  fullName: AngeliA.Extension.ForceSquare
- uid: AngeliA.Extension.WithNewWidth*
  commentId: Overload:AngeliA.Extension.WithNewWidth
  href: AngeliA.Extension.html#AngeliA_Extension_WithNewWidth_AngeliA_IRect_System_Int32_
  name: WithNewWidth
  nameWithType: Extension.WithNewWidth
  fullName: AngeliA.Extension.WithNewWidth
- uid: AngeliA.Extension.WithNewHeight*
  commentId: Overload:AngeliA.Extension.WithNewHeight
  href: AngeliA.Extension.html#AngeliA_Extension_WithNewHeight_AngeliA_IRect_System_Int32_
  name: WithNewHeight
  nameWithType: Extension.WithNewHeight
  fullName: AngeliA.Extension.WithNewHeight
- uid: AngeliA.Color32
  commentId: T:AngeliA.Color32
  parent: AngeliA
  href: AngeliA.Color32.html
  name: Color32
  nameWithType: Color32
  fullName: AngeliA.Color32
- uid: AngeliA.Extension.Mult*
  commentId: Overload:AngeliA.Extension.Mult
  href: AngeliA.Extension.html#AngeliA_Extension_Mult_AngeliA_Color32_AngeliA_Color32_
  name: Mult
  nameWithType: Extension.Mult
  fullName: AngeliA.Extension.Mult
- uid: AngeliA.Extension.NotEnd*
  commentId: Overload:AngeliA.Extension.NotEnd
  href: AngeliA.Extension.html#AngeliA_Extension_NotEnd_System_IO_BinaryReader_
  name: NotEnd
  nameWithType: Extension.NotEnd
  fullName: AngeliA.Extension.NotEnd
- uid: System.IO.BinaryReader
  commentId: T:System.IO.BinaryReader
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.binaryreader
  name: BinaryReader
  nameWithType: BinaryReader
  fullName: System.IO.BinaryReader
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
- uid: AngeliA.Extension.GetDirection*
  commentId: Overload:AngeliA.Extension.GetDirection
  href: AngeliA.Extension.html#AngeliA_Extension_GetDirection_AngeliA_Gamekey_
  name: GetDirection
  nameWithType: Extension.GetDirection
  fullName: AngeliA.Extension.GetDirection
- uid: AngeliA.Gamekey
  commentId: T:AngeliA.Gamekey
  parent: AngeliA
  href: AngeliA.Gamekey.html
  name: Gamekey
  nameWithType: Gamekey
  fullName: AngeliA.Gamekey
- uid: System.Nullable{AngeliA.Direction4}
  commentId: T:System.Nullable{AngeliA.Direction4}
  parent: System
  definition: System.Nullable`1
  href: AngeliA.Direction4.html
  name: Direction4?
  nameWithType: Direction4?
  fullName: AngeliA.Direction4?
  spec.csharp:
  - uid: AngeliA.Direction4
    name: Direction4
    href: AngeliA.Direction4.html
  - name: '?'
  spec.vb:
  - uid: AngeliA.Direction4
    name: Direction4
    href: AngeliA.Direction4.html
  - name: '?'
- uid: AngeliA.Extension.IsMidX*
  commentId: Overload:AngeliA.Extension.IsMidX
  href: AngeliA.Extension.html#AngeliA_Extension_IsMidX_AngeliA_Alignment_
  name: IsMidX
  nameWithType: Extension.IsMidX
  fullName: AngeliA.Extension.IsMidX
- uid: AngeliA.Extension.IsMidY*
  commentId: Overload:AngeliA.Extension.IsMidY
  href: AngeliA.Extension.html#AngeliA_Extension_IsMidY_AngeliA_Alignment_
  name: IsMidY
  nameWithType: Extension.IsMidY
  fullName: AngeliA.Extension.IsMidY
- uid: AngeliA.Extension.FillWithValue*
  commentId: Overload:AngeliA.Extension.FillWithValue
  href: AngeliA.Extension.html#AngeliA_Extension_FillWithValue__1___0_____0_
  name: FillWithValue
  nameWithType: Extension.FillWithValue
  fullName: AngeliA.Extension.FillWithValue
- uid: '{A}[]'
  isExternal: true
  name: A[]
  nameWithType: A[]
  fullName: A[]
  nameWithType.vb: A()
  fullName.vb: A()
  name.vb: A()
  spec.csharp:
  - name: A
  - name: '['
  - name: ']'
  spec.vb:
  - name: A
  - name: (
  - name: )
- uid: '{A}'
  commentId: '!:A'
  definition: A
  name: A
  nameWithType: A
  fullName: A
- uid: A
  name: A
  nameWithType: A
  fullName: A
- uid: AngeliA.Extension.FillWithNewValue*
  commentId: Overload:AngeliA.Extension.FillWithNewValue
  href: AngeliA.Extension.html#AngeliA_Extension_FillWithNewValue__1___0___
  name: FillWithNewValue
  nameWithType: Extension.FillWithNewValue
  fullName: AngeliA.Extension.FillWithNewValue
- uid: AngeliA.Extension.WithNewA*
  commentId: Overload:AngeliA.Extension.WithNewA
  href: AngeliA.Extension.html#AngeliA_Extension_WithNewA_AngeliA_Color32_System_Int32_
  name: WithNewA
  nameWithType: Extension.WithNewA
  fullName: AngeliA.Extension.WithNewA
- uid: AngeliA.ColorF
  commentId: T:AngeliA.ColorF
  parent: AngeliA
  href: AngeliA.ColorF.html
  name: ColorF
  nameWithType: ColorF
  fullName: AngeliA.ColorF
- uid: AngeliA.Extension.ToColor32*
  commentId: Overload:AngeliA.Extension.ToColor32
  href: AngeliA.Extension.html#AngeliA_Extension_ToColor32_AngeliA_ColorF_
  name: ToColor32
  nameWithType: Extension.ToColor32
  fullName: AngeliA.Extension.ToColor32
- uid: AngeliA.Extension.ToColorF*
  commentId: Overload:AngeliA.Extension.ToColorF
  href: AngeliA.Extension.html#AngeliA_Extension_ToColorF_AngeliA_Color32_
  name: ToColorF
  nameWithType: Extension.ToColorF
  fullName: AngeliA.Extension.ToColorF
- uid: AngeliA.Extension.LookDifferent*
  commentId: Overload:AngeliA.Extension.LookDifferent
  href: AngeliA.Extension.html#AngeliA_Extension_LookDifferent_AngeliA_Color32_AngeliA_Color32_
  name: LookDifferent
  nameWithType: Extension.LookDifferent
  fullName: AngeliA.Extension.LookDifferent
- uid: AngeliA.Extension.Adjust*
  commentId: Overload:AngeliA.Extension.Adjust
  href: AngeliA.Extension.html#AngeliA_Extension_Adjust_AngeliA_Color32_System_Single_System_Single_System_Single_System_Single_
  name: Adjust
  nameWithType: Extension.Adjust
  fullName: AngeliA.Extension.Adjust
- uid: AngeliA.Extension.EnumLength*
  commentId: Overload:AngeliA.Extension.EnumLength
  href: AngeliA.Extension.html#AngeliA_Extension_EnumLength_System_Type_
  name: EnumLength
  nameWithType: Extension.EnumLength
  fullName: AngeliA.Extension.EnumLength
- uid: AngeliA.Extension.Next*
  commentId: Overload:AngeliA.Extension.Next
  href: AngeliA.Extension.html#AngeliA_Extension_Next__1___0_
  name: Next
  nameWithType: Extension.Next
  fullName: AngeliA.Extension.Next
- uid: '{E}'
  commentId: '!:E'
  definition: E
  name: E
  nameWithType: E
  fullName: E
- uid: E
  name: E
  nameWithType: E
  fullName: E
- uid: AngeliA.Extension.Prev*
  commentId: Overload:AngeliA.Extension.Prev
  href: AngeliA.Extension.html#AngeliA_Extension_Prev__1___0_
  name: Prev
  nameWithType: Extension.Prev
  fullName: AngeliA.Extension.Prev
- uid: AngeliA.Extension.GetTypePath*
  commentId: Overload:AngeliA.Extension.GetTypePath
  href: AngeliA.Extension.html#AngeliA_Extension_GetTypePath_System_Type_System_Type_
  name: GetTypePath
  nameWithType: Extension.GetTypePath
  fullName: AngeliA.Extension.GetTypePath
- uid: AngeliA.Extension.TrimWhiteForStartAndEnd*
  commentId: Overload:AngeliA.Extension.TrimWhiteForStartAndEnd
  href: AngeliA.Extension.html#AngeliA_Extension_TrimWhiteForStartAndEnd_System_String_
  name: TrimWhiteForStartAndEnd
  nameWithType: Extension.TrimWhiteForStartAndEnd
  fullName: AngeliA.Extension.TrimWhiteForStartAndEnd
- uid: AngeliA.Extension.TrimEnd_Numbers*
  commentId: Overload:AngeliA.Extension.TrimEnd_Numbers
  href: AngeliA.Extension.html#AngeliA_Extension_TrimEnd_Numbers_System_String_
  name: TrimEnd_Numbers
  nameWithType: Extension.TrimEnd_Numbers
  fullName: AngeliA.Extension.TrimEnd_Numbers
- uid: AngeliA.Extension.TrimEnd_NumbersEmpty*
  commentId: Overload:AngeliA.Extension.TrimEnd_NumbersEmpty
  href: AngeliA.Extension.html#AngeliA_Extension_TrimEnd_NumbersEmpty_System_String_
  name: TrimEnd_NumbersEmpty
  nameWithType: Extension.TrimEnd_NumbersEmpty
  fullName: AngeliA.Extension.TrimEnd_NumbersEmpty
- uid: AngeliA.Extension.TrimEnd_NumbersEmpty_*
  commentId: Overload:AngeliA.Extension.TrimEnd_NumbersEmpty_
  href: AngeliA.Extension.html#AngeliA_Extension_TrimEnd_NumbersEmpty__System_String_
  name: TrimEnd_NumbersEmpty_
  nameWithType: Extension.TrimEnd_NumbersEmpty_
  fullName: AngeliA.Extension.TrimEnd_NumbersEmpty_
- uid: AngeliA.Extension.TrimEnd_IfEndWith*
  commentId: Overload:AngeliA.Extension.TrimEnd_IfEndWith
  href: AngeliA.Extension.html#AngeliA_Extension_TrimEnd_IfEndWith_System_String_System_String_System_Char___
  name: TrimEnd_IfEndWith
  nameWithType: Extension.TrimEnd_IfEndWith
  fullName: AngeliA.Extension.TrimEnd_IfEndWith
- uid: AngeliA.Extension.TrimStart_Numbers*
  commentId: Overload:AngeliA.Extension.TrimStart_Numbers
  href: AngeliA.Extension.html#AngeliA_Extension_TrimStart_Numbers_System_String_
  name: TrimStart_Numbers
  nameWithType: Extension.TrimStart_Numbers
  fullName: AngeliA.Extension.TrimStart_Numbers
- uid: AngeliA.Extension.StartsWith*
  commentId: Overload:AngeliA.Extension.StartsWith
  href: AngeliA.Extension.html#AngeliA_Extension_StartsWith_System_String_System_Char_System_Char_
  name: StartsWith
  nameWithType: Extension.StartsWith
  fullName: AngeliA.Extension.StartsWith
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.char
  name: char
  nameWithType: char
  fullName: char
  nameWithType.vb: Char
  fullName.vb: Char
  name.vb: Char
- uid: AngeliA.Extension.StartsWith_IgnoreWhiteSpace*
  commentId: Overload:AngeliA.Extension.StartsWith_IgnoreWhiteSpace
  href: AngeliA.Extension.html#AngeliA_Extension_StartsWith_IgnoreWhiteSpace_System_String_System_Char_
  name: StartsWith_IgnoreWhiteSpace
  nameWithType: Extension.StartsWith_IgnoreWhiteSpace
  fullName: AngeliA.Extension.StartsWith_IgnoreWhiteSpace
- uid: AngeliA.Extension.JoinArray*
  commentId: Overload:AngeliA.Extension.JoinArray
  href: AngeliA.Extension.html#AngeliA_Extension_JoinArray__1_System_Collections_Generic_IEnumerable___0__System_Func___0_System_String__System_Char_
  name: JoinArray
  nameWithType: Extension.JoinArray
  fullName: AngeliA.Extension.JoinArray
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Func{{T},System.String}
  commentId: T:System.Func{``0,System.String}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, string>
  nameWithType: Func<T, string>
  fullName: System.Func<T, string>
  nameWithType.vb: Func(Of T, String)
  fullName.vb: System.Func(Of T, String)
  name.vb: Func(Of T, String)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: AngeliA.Extension.ForAllStaticFieldValue*
  commentId: Overload:AngeliA.Extension.ForAllStaticFieldValue
  href: AngeliA.Extension.html#AngeliA_Extension_ForAllStaticFieldValue__1_System_Type_System_Reflection_BindingFlags_System_Boolean_
  name: ForAllStaticFieldValue
  nameWithType: Extension.ForAllStaticFieldValue
  fullName: AngeliA.Extension.ForAllStaticFieldValue
- uid: System.Reflection.BindingFlags
  commentId: T:System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Reflection
    name: Reflection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Reflection
    name: Reflection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection
- uid: AngeliA.Extension.ForAllFields*
  commentId: Overload:AngeliA.Extension.ForAllFields
  href: AngeliA.Extension.html#AngeliA_Extension_ForAllFields__1_System_Object_System_Reflection_BindingFlags_System_Boolean_
  name: ForAllFields
  nameWithType: Extension.ForAllFields
  fullName: AngeliA.Extension.ForAllFields
- uid: System.Collections.Generic.IEnumerable{System.ValueTuple{System.Reflection.FieldInfo,{T}}}
  commentId: T:System.Collections.Generic.IEnumerable{System.ValueTuple{System.Reflection.FieldInfo,``0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<(FieldInfo field, T value)>
  nameWithType: IEnumerable<(FieldInfo field, T value)>
  fullName: System.Collections.Generic.IEnumerable<(System.Reflection.FieldInfo field, T value)>
  nameWithType.vb: IEnumerable(Of (field As FieldInfo, value As T))
  fullName.vb: System.Collections.Generic.IEnumerable(Of (field As System.Reflection.FieldInfo, value As T))
  name.vb: IEnumerable(Of (field As FieldInfo, value As T))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: (
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: " "
  - uid: System.ValueTuple{System.Reflection.FieldInfo,``0}.field
    name: field
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.reflection.fieldinfo,--0-.field
  - name: ','
  - name: " "
  - name: T
  - name: " "
  - uid: System.ValueTuple{System.Reflection.FieldInfo,``0}.value
    name: value
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.reflection.fieldinfo,--0-.value
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{System.Reflection.FieldInfo,``0}.field
    name: field
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.reflection.fieldinfo,--0-.field
  - name: " "
  - name: As
  - name: " "
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Reflection.FieldInfo,``0}.value
    name: value
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.reflection.fieldinfo,--0-.value
  - name: " "
  - name: As
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{System.Reflection.FieldInfo}
  commentId: T:System.Collections.Generic.IEnumerable{System.Reflection.FieldInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<FieldInfo>
  nameWithType: IEnumerable<FieldInfo>
  fullName: System.Collections.Generic.IEnumerable<System.Reflection.FieldInfo>
  nameWithType.vb: IEnumerable(Of FieldInfo)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Reflection.FieldInfo)
  name.vb: IEnumerable(Of FieldInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: )
- uid: AngeliA.Extension.ForAllProperties*
  commentId: Overload:AngeliA.Extension.ForAllProperties
  href: AngeliA.Extension.html#AngeliA_Extension_ForAllProperties__1_System_Object_
  name: ForAllProperties
  nameWithType: Extension.ForAllProperties
  fullName: AngeliA.Extension.ForAllProperties
- uid: System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,{T}}}
  commentId: T:System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,``0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<(string name, T value)>
  nameWithType: IEnumerable<(string name, T value)>
  fullName: System.Collections.Generic.IEnumerable<(string name, T value)>
  nameWithType.vb: IEnumerable(Of (name As String, value As T))
  fullName.vb: System.Collections.Generic.IEnumerable(Of (name As String, value As T))
  name.vb: IEnumerable(Of (name As String, value As T))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: " "
  - uid: System.ValueTuple{System.String,``0}.name
    name: name
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,--0-.name
  - name: ','
  - name: " "
  - name: T
  - name: " "
  - uid: System.ValueTuple{System.String,``0}.value
    name: value
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,--0-.value
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{System.String,``0}.name
    name: name
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,--0-.name
  - name: " "
  - name: As
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.String,``0}.value
    name: value
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,--0-.value
  - name: " "
  - name: As
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: AngeliA.Extension.InvokeSafe*
  commentId: Overload:AngeliA.Extension.InvokeSafe
  href: AngeliA.Extension.html#AngeliA_Extension_InvokeSafe_System_Action_
  name: InvokeSafe
  nameWithType: Extension.InvokeSafe
  fullName: AngeliA.Extension.InvokeSafe
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: System.Action{{T0}}
  commentId: T:System.Action{``0}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T0>
  nameWithType: Action<T0>
  fullName: System.Action<T0>
  nameWithType.vb: Action(Of T0)
  fullName.vb: System.Action(Of T0)
  name.vb: Action(Of T0)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T0
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: )
- uid: '{T0}'
  commentId: '!:T0'
  definition: T0
  name: T0
  nameWithType: T0
  fullName: T0
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: T0
  name: T0
  nameWithType: T0
  fullName: T0
- uid: System.Action{{T0},{T1}}
  commentId: T:System.Action{``0,``1}
  parent: System
  definition: System.Action`2
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<T0, T1>
  nameWithType: Action<T0, T1>
  fullName: System.Action<T0, T1>
  nameWithType.vb: Action(Of T0, T1)
  fullName.vb: System.Action(Of T0, T1)
  name.vb: Action(Of T0, T1)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
- uid: '{T1}'
  commentId: '!:T1'
  definition: T1
  name: T1
  nameWithType: T1
  fullName: T1
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: T1
  name: T1
  nameWithType: T1
  fullName: T1
- uid: System.Action{{T0},{T1},{T2}}
  commentId: T:System.Action{``0,``1,``2}
  parent: System
  definition: System.Action`3
  href: https://learn.microsoft.com/dotnet/api/system.action-3
  name: Action<T0, T1, T2>
  nameWithType: Action<T0, T1, T2>
  fullName: System.Action<T0, T1, T2>
  nameWithType.vb: Action(Of T0, T1, T2)
  fullName.vb: System.Action(Of T0, T1, T2)
  name.vb: Action(Of T0, T1, T2)
  spec.csharp:
  - uid: System.Action`3
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-3
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  spec.vb:
  - uid: System.Action`3
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-3
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: '{T2}'
  commentId: '!:T2'
  definition: T2
  name: T2
  nameWithType: T2
  fullName: T2
- uid: System.Action`3
  commentId: T:System.Action`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-3
  name: Action<T1, T2, T3>
  nameWithType: Action<T1, T2, T3>
  fullName: System.Action<T1, T2, T3>
  nameWithType.vb: Action(Of T1, T2, T3)
  fullName.vb: System.Action(Of T1, T2, T3)
  name.vb: Action(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Action`3
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: '>'
  spec.vb:
  - uid: System.Action`3
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
- uid: T2
  commentId: '!:T2'
  name: T2
  nameWithType: T2
  fullName: T2
