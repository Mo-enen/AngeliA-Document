### YamlMime:ManagedReference
items:
- uid: AngeliA.IRouteWalker
  commentId: T:AngeliA.IRouteWalker
  id: IRouteWalker
  parent: AngeliA
  children:
  - AngeliA.IRouteWalker.CurrentDirection
  - AngeliA.IRouteWalker.GetNextRoutePosition(AngeliA.Entity,AngeliA.Direction8@,AngeliA.Int2@,System.Int32,System.Int32,System.Boolean,AngeliA.BlockType,System.Boolean,System.Collections.Generic.HashSet{System.Int32})
  - AngeliA.IRouteWalker.GetNextRoutePosition(AngeliA.IRouteWalker,System.Int32,System.Int32,System.Boolean,AngeliA.BlockType,System.Boolean,System.Collections.Generic.HashSet{System.Int32})
  - AngeliA.IRouteWalker.TargetPosition
  - AngeliA.IRouteWalker.TryGetRouteFromMap(System.Collections.Generic.HashSet{System.Int32},System.Int32,System.Int32,AngeliA.Direction8,AngeliA.Direction8@,AngeliA.BlockType,System.Boolean)
  - AngeliA.IRouteWalker.TryGetRouteFromMap(System.Int32,System.Int32,System.Int32,AngeliA.Direction8,AngeliA.Direction8@,AngeliA.BlockType,System.Boolean)
  langs:
  - csharp
  - vb
  name: IRouteWalker
  nameWithType: IRouteWalker
  fullName: AngeliA.IRouteWalker
  type: Interface
  source:
    remote:
      path: AngeliA Framework/src/Entity/Interface/IRouteWalker.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IRouteWalker
    path: ../../AngeliA/AngeliA Framework/src/Entity/Interface/IRouteWalker.cs
    startLine: 8
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Interface that makes an entity walks along a given path
  example: []
  syntax:
    content: public interface IRouteWalker
    content.vb: Public Interface IRouteWalker
  extensionMethods:
  - System.Object.AngeliA.Extension.ForAllFields``1(System.Reflection.BindingFlags,System.Boolean)
  - System.Object.AngeliA.Extension.ForAllProperties``1
- uid: AngeliA.IRouteWalker.CurrentDirection
  commentId: P:AngeliA.IRouteWalker.CurrentDirection
  id: CurrentDirection
  parent: AngeliA.IRouteWalker
  langs:
  - csharp
  - vb
  name: CurrentDirection
  nameWithType: IRouteWalker.CurrentDirection
  fullName: AngeliA.IRouteWalker.CurrentDirection
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Entity/Interface/IRouteWalker.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: CurrentDirection
    path: ../../AngeliA/AngeliA Framework/src/Entity/Interface/IRouteWalker.cs
    startLine: 13
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Which direction this entity is currently walking
  example: []
  syntax:
    content: Direction8 CurrentDirection { get; set; }
    parameters: []
    return:
      type: AngeliA.Direction8
    content.vb: Property CurrentDirection As Direction8
  overload: AngeliA.IRouteWalker.CurrentDirection*
- uid: AngeliA.IRouteWalker.TargetPosition
  commentId: P:AngeliA.IRouteWalker.TargetPosition
  id: TargetPosition
  parent: AngeliA.IRouteWalker
  langs:
  - csharp
  - vb
  name: TargetPosition
  nameWithType: IRouteWalker.TargetPosition
  fullName: AngeliA.IRouteWalker.TargetPosition
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Entity/Interface/IRouteWalker.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TargetPosition
    path: ../../AngeliA/AngeliA Framework/src/Entity/Interface/IRouteWalker.cs
    startLine: 18
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Where does this entity currently walking
  example: []
  syntax:
    content: Int2 TargetPosition { get; set; }
    parameters: []
    return:
      type: AngeliA.Int2
    content.vb: Property TargetPosition As Int2
  overload: AngeliA.IRouteWalker.TargetPosition*
- uid: AngeliA.IRouteWalker.GetNextRoutePosition(AngeliA.IRouteWalker,System.Int32,System.Int32,System.Boolean,AngeliA.BlockType,System.Boolean,System.Collections.Generic.HashSet{System.Int32})
  commentId: M:AngeliA.IRouteWalker.GetNextRoutePosition(AngeliA.IRouteWalker,System.Int32,System.Int32,System.Boolean,AngeliA.BlockType,System.Boolean,System.Collections.Generic.HashSet{System.Int32})
  id: GetNextRoutePosition(AngeliA.IRouteWalker,System.Int32,System.Int32,System.Boolean,AngeliA.BlockType,System.Boolean,System.Collections.Generic.HashSet{System.Int32})
  parent: AngeliA.IRouteWalker
  langs:
  - csharp
  - vb
  name: GetNextRoutePosition(IRouteWalker, int, int, bool, BlockType, bool, HashSet<int>)
  nameWithType: IRouteWalker.GetNextRoutePosition(IRouteWalker, int, int, bool, BlockType, bool, HashSet<int>)
  fullName: AngeliA.IRouteWalker.GetNextRoutePosition(AngeliA.IRouteWalker, int, int, bool, AngeliA.BlockType, bool, System.Collections.Generic.HashSet<int>)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Entity/Interface/IRouteWalker.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetNextRoutePosition
    path: ../../AngeliA/AngeliA Framework/src/Entity/Interface/IRouteWalker.cs
    startLine: 21
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get the position in global space that the walker entity should go to
  example: []
  syntax:
    content: public static Int2 GetNextRoutePosition(IRouteWalker walker, int pathID, int speed, bool allowTurnBack = false, BlockType pathType = BlockType.Element, bool allowTilt = true, HashSet<int> pathSet = null)
    parameters:
    - id: walker
      type: AngeliA.IRouteWalker
      description: Target walker
    - id: pathID
      type: System.Int32
      description: Which map block should be treat as the path marker
    - id: speed
      type: System.Int32
      description: Movement speed in global space
    - id: allowTurnBack
      type: System.Boolean
      description: True if the walker turn back when reach the edge
    - id: pathType
      type: AngeliA.BlockType
      description: Block type of the path marker
    - id: allowTilt
      type: System.Boolean
      description: True if the walker can walk diagonally
    - id: pathSet
      type: System.Collections.Generic.HashSet{System.Int32}
      description: A hash set of path marks, set to null if there's only one mark
    return:
      type: AngeliA.Int2
      description: The final position in global space
    content.vb: Public Shared Function GetNextRoutePosition(walker As IRouteWalker, pathID As Integer, speed As Integer, allowTurnBack As Boolean = False, pathType As BlockType = BlockType.Element, allowTilt As Boolean = True, pathSet As HashSet(Of Integer) = Nothing) As Int2
  overload: AngeliA.IRouteWalker.GetNextRoutePosition*
  nameWithType.vb: IRouteWalker.GetNextRoutePosition(IRouteWalker, Integer, Integer, Boolean, BlockType, Boolean, HashSet(Of Integer))
  fullName.vb: AngeliA.IRouteWalker.GetNextRoutePosition(AngeliA.IRouteWalker, Integer, Integer, Boolean, AngeliA.BlockType, Boolean, System.Collections.Generic.HashSet(Of Integer))
  name.vb: GetNextRoutePosition(IRouteWalker, Integer, Integer, Boolean, BlockType, Boolean, HashSet(Of Integer))
- uid: AngeliA.IRouteWalker.GetNextRoutePosition(AngeliA.Entity,AngeliA.Direction8@,AngeliA.Int2@,System.Int32,System.Int32,System.Boolean,AngeliA.BlockType,System.Boolean,System.Collections.Generic.HashSet{System.Int32})
  commentId: M:AngeliA.IRouteWalker.GetNextRoutePosition(AngeliA.Entity,AngeliA.Direction8@,AngeliA.Int2@,System.Int32,System.Int32,System.Boolean,AngeliA.BlockType,System.Boolean,System.Collections.Generic.HashSet{System.Int32})
  id: GetNextRoutePosition(AngeliA.Entity,AngeliA.Direction8@,AngeliA.Int2@,System.Int32,System.Int32,System.Boolean,AngeliA.BlockType,System.Boolean,System.Collections.Generic.HashSet{System.Int32})
  parent: AngeliA.IRouteWalker
  langs:
  - csharp
  - vb
  name: GetNextRoutePosition(Entity, ref Direction8, ref Int2, int, int, bool, BlockType, bool, HashSet<int>)
  nameWithType: IRouteWalker.GetNextRoutePosition(Entity, ref Direction8, ref Int2, int, int, bool, BlockType, bool, HashSet<int>)
  fullName: AngeliA.IRouteWalker.GetNextRoutePosition(AngeliA.Entity, ref AngeliA.Direction8, ref AngeliA.Int2, int, int, bool, AngeliA.BlockType, bool, System.Collections.Generic.HashSet<int>)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Entity/Interface/IRouteWalker.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetNextRoutePosition
    path: ../../AngeliA/AngeliA Framework/src/Entity/Interface/IRouteWalker.cs
    startLine: 45
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get the position in global space that the walker entity should go to
  example: []
  syntax:
    content: public static Int2 GetNextRoutePosition(Entity entity, ref Direction8 currentDirection, ref Int2 targetPosition, int pathID, int speed, bool allowTurnBack = false, BlockType pathType = BlockType.Element, bool allowTilt = true, HashSet<int> pathSet = null)
    parameters:
    - id: entity
      type: AngeliA.Entity
      description: Target entity that walks
    - id: currentDirection
      type: AngeliA.Direction8
      description: Which direction this entity is currently walking
    - id: targetPosition
      type: AngeliA.Int2
      description: Where does this entity currently walking
    - id: pathID
      type: System.Int32
      description: Which map block should be treat as the path marker
    - id: speed
      type: System.Int32
      description: Movement speed in global space
    - id: allowTurnBack
      type: System.Boolean
      description: True if the walker turn back when reach the edge
    - id: pathType
      type: AngeliA.BlockType
      description: Block type of the path marker
    - id: allowTilt
      type: System.Boolean
      description: True if the walker can walk diagonally
    - id: pathSet
      type: System.Collections.Generic.HashSet{System.Int32}
      description: A hash set of path marks, set to null if there's only one mark
    return:
      type: AngeliA.Int2
      description: The final position in global space
    content.vb: Public Shared Function GetNextRoutePosition(entity As Entity, currentDirection As Direction8, targetPosition As Int2, pathID As Integer, speed As Integer, allowTurnBack As Boolean = False, pathType As BlockType = BlockType.Element, allowTilt As Boolean = True, pathSet As HashSet(Of Integer) = Nothing) As Int2
  overload: AngeliA.IRouteWalker.GetNextRoutePosition*
  nameWithType.vb: IRouteWalker.GetNextRoutePosition(Entity, Direction8, Int2, Integer, Integer, Boolean, BlockType, Boolean, HashSet(Of Integer))
  fullName.vb: AngeliA.IRouteWalker.GetNextRoutePosition(AngeliA.Entity, AngeliA.Direction8, AngeliA.Int2, Integer, Integer, Boolean, AngeliA.BlockType, Boolean, System.Collections.Generic.HashSet(Of Integer))
  name.vb: GetNextRoutePosition(Entity, Direction8, Int2, Integer, Integer, Boolean, BlockType, Boolean, HashSet(Of Integer))
- uid: AngeliA.IRouteWalker.TryGetRouteFromMap(System.Int32,System.Int32,System.Int32,AngeliA.Direction8,AngeliA.Direction8@,AngeliA.BlockType,System.Boolean)
  commentId: M:AngeliA.IRouteWalker.TryGetRouteFromMap(System.Int32,System.Int32,System.Int32,AngeliA.Direction8,AngeliA.Direction8@,AngeliA.BlockType,System.Boolean)
  id: TryGetRouteFromMap(System.Int32,System.Int32,System.Int32,AngeliA.Direction8,AngeliA.Direction8@,AngeliA.BlockType,System.Boolean)
  parent: AngeliA.IRouteWalker
  langs:
  - csharp
  - vb
  name: TryGetRouteFromMap(int, int, int, Direction8, out Direction8, BlockType, bool)
  nameWithType: IRouteWalker.TryGetRouteFromMap(int, int, int, Direction8, out Direction8, BlockType, bool)
  fullName: AngeliA.IRouteWalker.TryGetRouteFromMap(int, int, int, AngeliA.Direction8, out AngeliA.Direction8, AngeliA.BlockType, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Entity/Interface/IRouteWalker.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TryGetRouteFromMap
    path: ../../AngeliA/AngeliA Framework/src/Entity/Interface/IRouteWalker.cs
    startLine: 108
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get path marker block from map
  example: []
  syntax:
    content: public static bool TryGetRouteFromMap(int pathID, int unitX, int unitY, Direction8 currentDirection, out Direction8 result, BlockType pathType = BlockType.Element, bool allowTilt = true)
    parameters:
    - id: pathID
      type: System.Int32
      description: ID of the path marker block
    - id: unitX
      type: System.Int32
      description: Position X in unit space
    - id: unitY
      type: System.Int32
      description: Position Y in unit space
    - id: currentDirection
      type: AngeliA.Direction8
      description: Which direction this entity is currently walking
    - id: result
      type: AngeliA.Direction8
      description: Direction the walker should go
    - id: pathType
      type: AngeliA.BlockType
      description: Block type of the path marker
    - id: allowTilt
      type: System.Boolean
      description: True if the walker can walk diagonally
    return:
      type: System.Boolean
      description: True if the path is successfuly found
    content.vb: Public Shared Function TryGetRouteFromMap(pathID As Integer, unitX As Integer, unitY As Integer, currentDirection As Direction8, result As Direction8, pathType As BlockType = BlockType.Element, allowTilt As Boolean = True) As Boolean
  overload: AngeliA.IRouteWalker.TryGetRouteFromMap*
  nameWithType.vb: IRouteWalker.TryGetRouteFromMap(Integer, Integer, Integer, Direction8, Direction8, BlockType, Boolean)
  fullName.vb: AngeliA.IRouteWalker.TryGetRouteFromMap(Integer, Integer, Integer, AngeliA.Direction8, AngeliA.Direction8, AngeliA.BlockType, Boolean)
  name.vb: TryGetRouteFromMap(Integer, Integer, Integer, Direction8, Direction8, BlockType, Boolean)
- uid: AngeliA.IRouteWalker.TryGetRouteFromMap(System.Collections.Generic.HashSet{System.Int32},System.Int32,System.Int32,AngeliA.Direction8,AngeliA.Direction8@,AngeliA.BlockType,System.Boolean)
  commentId: M:AngeliA.IRouteWalker.TryGetRouteFromMap(System.Collections.Generic.HashSet{System.Int32},System.Int32,System.Int32,AngeliA.Direction8,AngeliA.Direction8@,AngeliA.BlockType,System.Boolean)
  id: TryGetRouteFromMap(System.Collections.Generic.HashSet{System.Int32},System.Int32,System.Int32,AngeliA.Direction8,AngeliA.Direction8@,AngeliA.BlockType,System.Boolean)
  parent: AngeliA.IRouteWalker
  langs:
  - csharp
  - vb
  name: TryGetRouteFromMap(HashSet<int>, int, int, Direction8, out Direction8, BlockType, bool)
  nameWithType: IRouteWalker.TryGetRouteFromMap(HashSet<int>, int, int, Direction8, out Direction8, BlockType, bool)
  fullName: AngeliA.IRouteWalker.TryGetRouteFromMap(System.Collections.Generic.HashSet<int>, int, int, AngeliA.Direction8, out AngeliA.Direction8, AngeliA.BlockType, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Entity/Interface/IRouteWalker.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TryGetRouteFromMap
    path: ../../AngeliA/AngeliA Framework/src/Entity/Interface/IRouteWalker.cs
    startLine: 155
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get path marker block from map
  example: []
  syntax:
    content: public static bool TryGetRouteFromMap(HashSet<int> pathSet, int unitX, int unitY, Direction8 currentDirection, out Direction8 result, BlockType pathType = BlockType.Element, bool allowTilt = true)
    parameters:
    - id: pathSet
      type: System.Collections.Generic.HashSet{System.Int32}
      description: A hash set of path marks, set to null if there's only one mark
    - id: unitX
      type: System.Int32
      description: Position X in unit space
    - id: unitY
      type: System.Int32
      description: Position Y in unit space
    - id: currentDirection
      type: AngeliA.Direction8
      description: Which direction this entity is currently walking
    - id: result
      type: AngeliA.Direction8
      description: Direction the walker should go
    - id: pathType
      type: AngeliA.BlockType
      description: Block type of the path marker
    - id: allowTilt
      type: System.Boolean
      description: True if the walker can walk diagonally
    return:
      type: System.Boolean
      description: True if the path is successfuly found
    content.vb: Public Shared Function TryGetRouteFromMap(pathSet As HashSet(Of Integer), unitX As Integer, unitY As Integer, currentDirection As Direction8, result As Direction8, pathType As BlockType = BlockType.Element, allowTilt As Boolean = True) As Boolean
  overload: AngeliA.IRouteWalker.TryGetRouteFromMap*
  nameWithType.vb: IRouteWalker.TryGetRouteFromMap(HashSet(Of Integer), Integer, Integer, Direction8, Direction8, BlockType, Boolean)
  fullName.vb: AngeliA.IRouteWalker.TryGetRouteFromMap(System.Collections.Generic.HashSet(Of Integer), Integer, Integer, AngeliA.Direction8, AngeliA.Direction8, AngeliA.BlockType, Boolean)
  name.vb: TryGetRouteFromMap(HashSet(Of Integer), Integer, Integer, Direction8, Direction8, BlockType, Boolean)
references:
- uid: AngeliA
  commentId: N:AngeliA
  href: AngeliA.html
  name: AngeliA
  nameWithType: AngeliA
  fullName: AngeliA
- uid: System.Object.AngeliA.Extension.ForAllFields``1(System.Reflection.BindingFlags,System.Boolean)
  commentId: M:AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
  parent: AngeliA.Extension
  definition: AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
  href: AngeliA.Extension.html#AngeliA_Extension_ForAllFields__1_System_Object_System_Reflection_BindingFlags_System_Boolean_
  name: ForAllFields<T>(object, BindingFlags, bool)
  nameWithType: Extension.ForAllFields<T>(object, BindingFlags, bool)
  fullName: AngeliA.Extension.ForAllFields<T>(object, System.Reflection.BindingFlags, bool)
  nameWithType.vb: Extension.ForAllFields(Of T)(Object, BindingFlags, Boolean)
  fullName.vb: AngeliA.Extension.ForAllFields(Of T)(Object, System.Reflection.BindingFlags, Boolean)
  name.vb: ForAllFields(Of T)(Object, BindingFlags, Boolean)
  spec.csharp:
  - uid: AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
    name: ForAllFields
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllFields__1_System_Object_System_Reflection_BindingFlags_System_Boolean_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
    name: ForAllFields
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllFields__1_System_Object_System_Reflection_BindingFlags_System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Object.AngeliA.Extension.ForAllProperties``1
  commentId: M:AngeliA.Extension.ForAllProperties``1(System.Object)
  parent: AngeliA.Extension
  definition: AngeliA.Extension.ForAllProperties``1(System.Object)
  href: AngeliA.Extension.html#AngeliA_Extension_ForAllProperties__1_System_Object_
  name: ForAllProperties<T>(object)
  nameWithType: Extension.ForAllProperties<T>(object)
  fullName: AngeliA.Extension.ForAllProperties<T>(object)
  nameWithType.vb: Extension.ForAllProperties(Of T)(Object)
  fullName.vb: AngeliA.Extension.ForAllProperties(Of T)(Object)
  name.vb: ForAllProperties(Of T)(Object)
  spec.csharp:
  - uid: AngeliA.Extension.ForAllProperties``1(System.Object)
    name: ForAllProperties
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllProperties__1_System_Object_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: AngeliA.Extension.ForAllProperties``1(System.Object)
    name: ForAllProperties
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllProperties__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
  commentId: M:AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
  isExternal: true
  href: AngeliA.Extension.html#AngeliA_Extension_ForAllFields__1_System_Object_System_Reflection_BindingFlags_System_Boolean_
  name: ForAllFields<T>(object, BindingFlags, bool)
  nameWithType: Extension.ForAllFields<T>(object, BindingFlags, bool)
  fullName: AngeliA.Extension.ForAllFields<T>(object, System.Reflection.BindingFlags, bool)
  nameWithType.vb: Extension.ForAllFields(Of T)(Object, BindingFlags, Boolean)
  fullName.vb: AngeliA.Extension.ForAllFields(Of T)(Object, System.Reflection.BindingFlags, Boolean)
  name.vb: ForAllFields(Of T)(Object, BindingFlags, Boolean)
  spec.csharp:
  - uid: AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
    name: ForAllFields
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllFields__1_System_Object_System_Reflection_BindingFlags_System_Boolean_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
    name: ForAllFields
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllFields__1_System_Object_System_Reflection_BindingFlags_System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: AngeliA.Extension
  commentId: T:AngeliA.Extension
  parent: AngeliA
  href: AngeliA.Extension.html
  name: Extension
  nameWithType: Extension
  fullName: AngeliA.Extension
- uid: AngeliA.Extension.ForAllProperties``1(System.Object)
  commentId: M:AngeliA.Extension.ForAllProperties``1(System.Object)
  isExternal: true
  href: AngeliA.Extension.html#AngeliA_Extension_ForAllProperties__1_System_Object_
  name: ForAllProperties<T>(object)
  nameWithType: Extension.ForAllProperties<T>(object)
  fullName: AngeliA.Extension.ForAllProperties<T>(object)
  nameWithType.vb: Extension.ForAllProperties(Of T)(Object)
  fullName.vb: AngeliA.Extension.ForAllProperties(Of T)(Object)
  name.vb: ForAllProperties(Of T)(Object)
  spec.csharp:
  - uid: AngeliA.Extension.ForAllProperties``1(System.Object)
    name: ForAllProperties
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllProperties__1_System_Object_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: AngeliA.Extension.ForAllProperties``1(System.Object)
    name: ForAllProperties
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllProperties__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: AngeliA.IRouteWalker.CurrentDirection*
  commentId: Overload:AngeliA.IRouteWalker.CurrentDirection
  href: AngeliA.IRouteWalker.html#AngeliA_IRouteWalker_CurrentDirection
  name: CurrentDirection
  nameWithType: IRouteWalker.CurrentDirection
  fullName: AngeliA.IRouteWalker.CurrentDirection
- uid: AngeliA.Direction8
  commentId: T:AngeliA.Direction8
  parent: AngeliA
  href: AngeliA.Direction8.html
  name: Direction8
  nameWithType: Direction8
  fullName: AngeliA.Direction8
- uid: AngeliA.IRouteWalker.TargetPosition*
  commentId: Overload:AngeliA.IRouteWalker.TargetPosition
  href: AngeliA.IRouteWalker.html#AngeliA_IRouteWalker_TargetPosition
  name: TargetPosition
  nameWithType: IRouteWalker.TargetPosition
  fullName: AngeliA.IRouteWalker.TargetPosition
- uid: AngeliA.Int2
  commentId: T:AngeliA.Int2
  parent: AngeliA
  href: AngeliA.Int2.html
  name: Int2
  nameWithType: Int2
  fullName: AngeliA.Int2
- uid: AngeliA.IRouteWalker.GetNextRoutePosition*
  commentId: Overload:AngeliA.IRouteWalker.GetNextRoutePosition
  href: AngeliA.IRouteWalker.html#AngeliA_IRouteWalker_GetNextRoutePosition_AngeliA_IRouteWalker_System_Int32_System_Int32_System_Boolean_AngeliA_BlockType_System_Boolean_System_Collections_Generic_HashSet_System_Int32__
  name: GetNextRoutePosition
  nameWithType: IRouteWalker.GetNextRoutePosition
  fullName: AngeliA.IRouteWalker.GetNextRoutePosition
- uid: AngeliA.IRouteWalker
  commentId: T:AngeliA.IRouteWalker
  parent: AngeliA
  href: AngeliA.IRouteWalker.html
  name: IRouteWalker
  nameWithType: IRouteWalker
  fullName: AngeliA.IRouteWalker
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: AngeliA.BlockType
  commentId: T:AngeliA.BlockType
  parent: AngeliA
  href: AngeliA.BlockType.html
  name: BlockType
  nameWithType: BlockType
  fullName: AngeliA.BlockType
- uid: System.Collections.Generic.HashSet{System.Int32}
  commentId: T:System.Collections.Generic.HashSet{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<int>
  nameWithType: HashSet<int>
  fullName: System.Collections.Generic.HashSet<int>
  nameWithType.vb: HashSet(Of Integer)
  fullName.vb: System.Collections.Generic.HashSet(Of Integer)
  name.vb: HashSet(Of Integer)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.HashSet`1
  commentId: T:System.Collections.Generic.HashSet`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: AngeliA.Entity
  commentId: T:AngeliA.Entity
  parent: AngeliA
  href: AngeliA.Entity.html
  name: Entity
  nameWithType: Entity
  fullName: AngeliA.Entity
- uid: AngeliA.IRouteWalker.TryGetRouteFromMap*
  commentId: Overload:AngeliA.IRouteWalker.TryGetRouteFromMap
  href: AngeliA.IRouteWalker.html#AngeliA_IRouteWalker_TryGetRouteFromMap_System_Int32_System_Int32_System_Int32_AngeliA_Direction8_AngeliA_Direction8__AngeliA_BlockType_System_Boolean_
  name: TryGetRouteFromMap
  nameWithType: IRouteWalker.TryGetRouteFromMap
  fullName: AngeliA.IRouteWalker.TryGetRouteFromMap
