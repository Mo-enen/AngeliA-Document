### YamlMime:ManagedReference
items:
- uid: AngeliA.Renderer
  commentId: T:AngeliA.Renderer
  id: Renderer
  parent: AngeliA
  children:
  - AngeliA.Renderer.AbandonLayerSort(System.Int32)
  - AngeliA.Renderer.AddAltSheet(AngeliA.Sheet)
  - AngeliA.Renderer.AltSheetCount
  - AngeliA.Renderer.CameraRange
  - AngeliA.Renderer.CameraRect
  - AngeliA.Renderer.ClampCells(AngeliA.Cell[],AngeliA.IRect,System.Int32,System.Int32)
  - AngeliA.Renderer.ClampCells(AngeliA.IRect,System.Int32,System.Int32)
  - AngeliA.Renderer.ClampCells(System.Int32,AngeliA.IRect,System.Int32,System.Int32)
  - AngeliA.Renderer.ClearCharSpritePool
  - AngeliA.Renderer.ClearFontIndexIdMap
  - AngeliA.Renderer.CurrentFontIndex
  - AngeliA.Renderer.CurrentLayerIndex
  - AngeliA.Renderer.CurrentSheet
  - AngeliA.Renderer.CurrentSheetIndex
  - AngeliA.Renderer.Draw(AngeliA.AngeSprite,AngeliA.IRect,AngeliA.Color32,System.Int32)
  - AngeliA.Renderer.Draw(AngeliA.AngeSprite,AngeliA.IRect,System.Int32)
  - AngeliA.Renderer.Draw(AngeliA.AngeSprite,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32,System.Boolean)
  - AngeliA.Renderer.Draw(AngeliA.AngeSprite,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - AngeliA.Renderer.Draw(AngeliA.SpriteCode,AngeliA.IRect,AngeliA.Color32,System.Int32)
  - AngeliA.Renderer.Draw(AngeliA.SpriteCode,AngeliA.IRect,System.Int32)
  - AngeliA.Renderer.Draw(AngeliA.SpriteCode,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  - AngeliA.Renderer.Draw(AngeliA.SpriteCode,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - AngeliA.Renderer.Draw(System.Int32,AngeliA.IRect,AngeliA.Color32,System.Int32)
  - AngeliA.Renderer.Draw(System.Int32,AngeliA.IRect,System.Int32)
  - AngeliA.Renderer.Draw(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  - AngeliA.Renderer.Draw(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - AngeliA.Renderer.DrawAnimation(AngeliA.SpriteGroup,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - AngeliA.Renderer.DrawAnimation(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - AngeliA.Renderer.DrawChar(AngeliA.CharSprite,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32)
  - AngeliA.Renderer.DrawChar(System.Char,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32)
  - AngeliA.Renderer.DrawPixel(AngeliA.IRect,AngeliA.Color32,System.Int32)
  - AngeliA.Renderer.DrawPixel(AngeliA.IRect,System.Int32)
  - AngeliA.Renderer.DrawPixel(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  - AngeliA.Renderer.DrawPixel(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - AngeliA.Renderer.DrawSlice(AngeliA.AngeSprite,AngeliA.IRect)
  - AngeliA.Renderer.DrawSlice(AngeliA.AngeSprite,AngeliA.IRect,AngeliA.Color32,System.Int32)
  - AngeliA.Renderer.DrawSlice(AngeliA.AngeSprite,AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  - AngeliA.Renderer.DrawSlice(AngeliA.AngeSprite,AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - AngeliA.Renderer.DrawSlice(AngeliA.AngeSprite,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  - AngeliA.Renderer.DrawSlice(AngeliA.AngeSprite,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - AngeliA.Renderer.DrawSlice(AngeliA.AngeSprite,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  - AngeliA.Renderer.DrawSlice(AngeliA.AngeSprite,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean[],AngeliA.Color32,System.Int32)
  - AngeliA.Renderer.DrawSlice(AngeliA.AngeSprite,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - AngeliA.Renderer.DrawSlice(AngeliA.SpriteCode,AngeliA.IRect)
  - AngeliA.Renderer.DrawSlice(AngeliA.SpriteCode,AngeliA.IRect,AngeliA.Color32,System.Int32)
  - AngeliA.Renderer.DrawSlice(AngeliA.SpriteCode,AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  - AngeliA.Renderer.DrawSlice(AngeliA.SpriteCode,AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - AngeliA.Renderer.DrawSlice(AngeliA.SpriteCode,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  - AngeliA.Renderer.DrawSlice(AngeliA.SpriteCode,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - AngeliA.Renderer.DrawSlice(AngeliA.SpriteCode,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  - AngeliA.Renderer.DrawSlice(AngeliA.SpriteCode,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean[],AngeliA.Color32,System.Int32)
  - AngeliA.Renderer.DrawSlice(AngeliA.SpriteCode,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - AngeliA.Renderer.DrawSlice(System.Int32,AngeliA.IRect)
  - AngeliA.Renderer.DrawSlice(System.Int32,AngeliA.IRect,AngeliA.Color32,System.Int32)
  - AngeliA.Renderer.DrawSlice(System.Int32,AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  - AngeliA.Renderer.DrawSlice(System.Int32,AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - AngeliA.Renderer.DrawSlice(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  - AngeliA.Renderer.DrawSlice(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - AngeliA.Renderer.DrawSlice(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  - AngeliA.Renderer.DrawSlice(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean[],AngeliA.Color32,System.Int32)
  - AngeliA.Renderer.DrawSlice(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - AngeliA.Renderer.GetAltSheet(System.Int32)
  - AngeliA.Renderer.GetAnimationGroupDuration(AngeliA.SpriteGroup)
  - AngeliA.Renderer.GetAnimationGroupDuration(System.Int32)
  - AngeliA.Renderer.GetCells(System.Int32,System.Span{AngeliA.Cell}@,System.Int32@)
  - AngeliA.Renderer.GetCells(System.Span{AngeliA.Cell}@,System.Int32@)
  - AngeliA.Renderer.GetLayerCapacity(System.Int32)
  - AngeliA.Renderer.GetLayerTint(System.Int32)
  - AngeliA.Renderer.GetUsedCellCount
  - AngeliA.Renderer.GetUsedCellCount(System.Int32)
  - AngeliA.Renderer.HasSprite(System.Int32)
  - AngeliA.Renderer.HasSpriteGroup(System.Int32)
  - AngeliA.Renderer.HasSpriteGroup(System.Int32,System.Int32@)
  - AngeliA.Renderer.IsReady
  - AngeliA.Renderer.LayerCount
  - AngeliA.Renderer.LoadMainSheet
  - AngeliA.Renderer.MainSheet
  - AngeliA.Renderer.MultLayerTint(System.Int32,AngeliA.Color32)
  - AngeliA.Renderer.OverrideFontIdAndIndex(System.Int32,System.Int32)
  - AngeliA.Renderer.RemoveAltSheet(System.Int32)
  - AngeliA.Renderer.RequireCharForPool(System.Char,AngeliA.CharSprite@)
  - AngeliA.Renderer.RequireCharForPool(System.Char,System.Int32,AngeliA.CharSprite@)
  - AngeliA.Renderer.ResetLayer(System.Int32)
  - AngeliA.Renderer.ReverseUnsortedCells(System.Int32)
  - AngeliA.Renderer.ScreenRenderRect
  - AngeliA.Renderer.SetFontID(System.Int32)
  - AngeliA.Renderer.SetFontIndex(System.Int32)
  - AngeliA.Renderer.SetLayer(System.Int32)
  - AngeliA.Renderer.SetLayerTint(System.Int32,AngeliA.Color32)
  - AngeliA.Renderer.SetLayerToAdditive
  - AngeliA.Renderer.SetLayerToBehind
  - AngeliA.Renderer.SetLayerToColor
  - AngeliA.Renderer.SetLayerToDefault
  - AngeliA.Renderer.SetLayerToMultiply
  - AngeliA.Renderer.SetLayerToShadow
  - AngeliA.Renderer.SetLayerToWallpaper
  - AngeliA.Renderer.SortLayer(System.Int32)
  - AngeliA.Renderer.TryGetAnimationGroup(System.Int32,AngeliA.SpriteGroup@)
  - AngeliA.Renderer.TryGetSprite(System.Int32,AngeliA.AngeSprite@,System.Boolean)
  - AngeliA.Renderer.TryGetSpriteForGizmos(System.Int32,AngeliA.AngeSprite@)
  - AngeliA.Renderer.TryGetSpriteFromGroup(System.Int32,System.Int32,AngeliA.AngeSprite@,System.Boolean,System.Boolean,System.Boolean)
  - AngeliA.Renderer.TryGetSpriteGroup(System.Int32,AngeliA.SpriteGroup@)
  - AngeliA.Renderer.TryGetTextureFromSheet``1(System.Int32,System.Int32,``0@)
  langs:
  - csharp
  - vb
  name: Renderer
  nameWithType: Renderer
  fullName: AngeliA.Renderer
  type: Class
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Renderer
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 9
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Core system for draw artwork on screen for current frame
  example: []
  syntax:
    content: public static class Renderer
    content.vb: Public Module Renderer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: AngeliA.Renderer.CameraRect
  commentId: P:AngeliA.Renderer.CameraRect
  id: CameraRect
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: CameraRect
  nameWithType: Renderer.CameraRect
  fullName: AngeliA.Renderer.CameraRect
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: CameraRect
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 73
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Current rect position in global space for rendering the screen
  example: []
  syntax:
    content: public static IRect CameraRect { get; }
    parameters: []
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Property CameraRect As IRect
  overload: AngeliA.Renderer.CameraRect*
- uid: AngeliA.Renderer.CameraRange
  commentId: P:AngeliA.Renderer.CameraRange
  id: CameraRange
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: CameraRange
  nameWithType: Renderer.CameraRange
  fullName: AngeliA.Renderer.CameraRange
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: CameraRange
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 77
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Local range for the actual range for content on screen (black bar appears when window too wide)
  example: []
  syntax:
    content: public static FRect CameraRange { get; }
    parameters: []
    return:
      type: AngeliA.FRect
    content.vb: Public Shared Property CameraRange As FRect
  overload: AngeliA.Renderer.CameraRange*
- uid: AngeliA.Renderer.ScreenRenderRect
  commentId: P:AngeliA.Renderer.ScreenRenderRect
  id: ScreenRenderRect
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: ScreenRenderRect
  nameWithType: Renderer.ScreenRenderRect
  fullName: AngeliA.Renderer.ScreenRenderRect
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ScreenRenderRect
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 81
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Rendering rect position in screen position
  example: []
  syntax:
    content: public static IRect ScreenRenderRect { get; }
    parameters: []
    return:
      type: AngeliA.IRect
    content.vb: Public Shared Property ScreenRenderRect As IRect
  overload: AngeliA.Renderer.ScreenRenderRect*
- uid: AngeliA.Renderer.LayerCount
  commentId: P:AngeliA.Renderer.LayerCount
  id: LayerCount
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: LayerCount
  nameWithType: Renderer.LayerCount
  fullName: AngeliA.Renderer.LayerCount
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: LayerCount
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 85
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Total rendering layer count
  example: []
  syntax:
    content: public static int LayerCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly Property LayerCount As Integer
  overload: AngeliA.Renderer.LayerCount*
- uid: AngeliA.Renderer.CurrentSheetIndex
  commentId: P:AngeliA.Renderer.CurrentSheetIndex
  id: CurrentSheetIndex
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: CurrentSheetIndex
  nameWithType: Renderer.CurrentSheetIndex
  fullName: AngeliA.Renderer.CurrentSheetIndex
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: CurrentSheetIndex
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 89
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Index of current using artwork sheet
  example: []
  syntax:
    content: public static int CurrentSheetIndex { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Shared Property CurrentSheetIndex As Integer
  overload: AngeliA.Renderer.CurrentSheetIndex*
- uid: AngeliA.Renderer.CurrentLayerIndex
  commentId: P:AngeliA.Renderer.CurrentLayerIndex
  id: CurrentLayerIndex
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: CurrentLayerIndex
  nameWithType: Renderer.CurrentLayerIndex
  fullName: AngeliA.Renderer.CurrentLayerIndex
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: CurrentLayerIndex
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 101
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Index of current using rendering layer
  example: []
  syntax:
    content: public static int CurrentLayerIndex { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Shared Property CurrentLayerIndex As Integer
  overload: AngeliA.Renderer.CurrentLayerIndex*
- uid: AngeliA.Renderer.CurrentFontIndex
  commentId: P:AngeliA.Renderer.CurrentFontIndex
  id: CurrentFontIndex
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: CurrentFontIndex
  nameWithType: Renderer.CurrentFontIndex
  fullName: AngeliA.Renderer.CurrentFontIndex
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: CurrentFontIndex
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 105
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Index of current using font
  example: []
  syntax:
    content: public static int CurrentFontIndex { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Shared Property CurrentFontIndex As Integer
  overload: AngeliA.Renderer.CurrentFontIndex*
- uid: AngeliA.Renderer.AltSheetCount
  commentId: P:AngeliA.Renderer.AltSheetCount
  id: AltSheetCount
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: AltSheetCount
  nameWithType: Renderer.AltSheetCount
  fullName: AngeliA.Renderer.AltSheetCount
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: AltSheetCount
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 109
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Total alt sheet count
  example: []
  syntax:
    content: public static int AltSheetCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly Property AltSheetCount As Integer
  overload: AngeliA.Renderer.AltSheetCount*
- uid: AngeliA.Renderer.IsReady
  commentId: P:AngeliA.Renderer.IsReady
  id: IsReady
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: IsReady
  nameWithType: Renderer.IsReady
  fullName: AngeliA.Renderer.IsReady
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IsReady
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 113
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: True if the system is ready to use
  example: []
  syntax:
    content: public static bool IsReady { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared Property IsReady As Boolean
  overload: AngeliA.Renderer.IsReady*
- uid: AngeliA.Renderer.CurrentSheet
  commentId: P:AngeliA.Renderer.CurrentSheet
  id: CurrentSheet
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: CurrentSheet
  nameWithType: Renderer.CurrentSheet
  fullName: AngeliA.Renderer.CurrentSheet
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: CurrentSheet
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 117
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Instance of current using artwork sheet
  example: []
  syntax:
    content: public static Sheet CurrentSheet { get; }
    parameters: []
    return:
      type: AngeliA.Sheet
    content.vb: Public Shared Property CurrentSheet As Sheet
  overload: AngeliA.Renderer.CurrentSheet*
- uid: AngeliA.Renderer.MainSheet
  commentId: F:AngeliA.Renderer.MainSheet
  id: MainSheet
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: MainSheet
  nameWithType: Renderer.MainSheet
  fullName: AngeliA.Renderer.MainSheet
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: MainSheet
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 121
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Instance of main/default artwork sheet
  example: []
  syntax:
    content: public static readonly Sheet MainSheet
    return:
      type: AngeliA.Sheet
    content.vb: Public Shared ReadOnly MainSheet As Sheet
- uid: AngeliA.Renderer.ClearCharSpritePool
  commentId: M:AngeliA.Renderer.ClearCharSpritePool
  id: ClearCharSpritePool
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: ClearCharSpritePool()
  nameWithType: Renderer.ClearCharSpritePool()
  fullName: AngeliA.Renderer.ClearCharSpritePool()
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ClearCharSpritePool
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 315
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Reset internal pool for rendering character and unload the textures for them
  example: []
  syntax:
    content: public static void ClearCharSpritePool()
    content.vb: Public Shared Sub ClearCharSpritePool()
  overload: AngeliA.Renderer.ClearCharSpritePool*
- uid: AngeliA.Renderer.TryGetTextureFromSheet``1(System.Int32,System.Int32,``0@)
  commentId: M:AngeliA.Renderer.TryGetTextureFromSheet``1(System.Int32,System.Int32,``0@)
  id: TryGetTextureFromSheet``1(System.Int32,System.Int32,``0@)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: TryGetTextureFromSheet<T>(int, int, out T)
  nameWithType: Renderer.TryGetTextureFromSheet<T>(int, int, out T)
  fullName: AngeliA.Renderer.TryGetTextureFromSheet<T>(int, int, out T)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TryGetTextureFromSheet
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 332
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get texture object for given sprite from sheet
  example: []
  syntax:
    content: public static bool TryGetTextureFromSheet<T>(int spriteID, int sheetIndex, out T texture)
    parameters:
    - id: spriteID
      type: System.Int32
      description: ''
    - id: sheetIndex
      type: System.Int32
      description: ''
    - id: texture
      type: '{T}'
      description: ''
    typeParameters:
    - id: T
      description: Type of texture object
    return:
      type: System.Boolean
      description: True if the texture founded
    content.vb: Public Shared Function TryGetTextureFromSheet(Of T)(spriteID As Integer, sheetIndex As Integer, texture As T) As Boolean
  overload: AngeliA.Renderer.TryGetTextureFromSheet*
  nameWithType.vb: Renderer.TryGetTextureFromSheet(Of T)(Integer, Integer, T)
  fullName.vb: AngeliA.Renderer.TryGetTextureFromSheet(Of T)(Integer, Integer, T)
  name.vb: TryGetTextureFromSheet(Of T)(Integer, Integer, T)
- uid: AngeliA.Renderer.LoadMainSheet
  commentId: M:AngeliA.Renderer.LoadMainSheet
  id: LoadMainSheet
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: LoadMainSheet()
  nameWithType: Renderer.LoadMainSheet()
  fullName: AngeliA.Renderer.LoadMainSheet()
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: LoadMainSheet
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 347
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Load main sheet from built-in path
  example: []
  syntax:
    content: public static void LoadMainSheet()
    content.vb: Public Shared Sub LoadMainSheet()
  overload: AngeliA.Renderer.LoadMainSheet*
- uid: AngeliA.Renderer.AddAltSheet(AngeliA.Sheet)
  commentId: M:AngeliA.Renderer.AddAltSheet(AngeliA.Sheet)
  id: AddAltSheet(AngeliA.Sheet)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: AddAltSheet(Sheet)
  nameWithType: Renderer.AddAltSheet(Sheet)
  fullName: AngeliA.Renderer.AddAltSheet(AngeliA.Sheet)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: AddAltSheet
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 373
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Add alt sheet into the system
  example: []
  syntax:
    content: public static int AddAltSheet(Sheet sheet)
    parameters:
    - id: sheet
      type: AngeliA.Sheet
      description: ''
    return:
      type: System.Int32
      description: Index of the added alt sheet
    content.vb: Public Shared Function AddAltSheet(sheet As Sheet) As Integer
  overload: AngeliA.Renderer.AddAltSheet*
- uid: AngeliA.Renderer.RemoveAltSheet(System.Int32)
  commentId: M:AngeliA.Renderer.RemoveAltSheet(System.Int32)
  id: RemoveAltSheet(System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: RemoveAltSheet(int)
  nameWithType: Renderer.RemoveAltSheet(int)
  fullName: AngeliA.Renderer.RemoveAltSheet(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: RemoveAltSheet
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 382
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Remove alt sheet at index from system
  example: []
  syntax:
    content: public static void RemoveAltSheet(int index)
    parameters:
    - id: index
      type: System.Int32
    content.vb: Public Shared Sub RemoveAltSheet(index As Integer)
  overload: AngeliA.Renderer.RemoveAltSheet*
  nameWithType.vb: Renderer.RemoveAltSheet(Integer)
  fullName.vb: AngeliA.Renderer.RemoveAltSheet(Integer)
  name.vb: RemoveAltSheet(Integer)
- uid: AngeliA.Renderer.GetAltSheet(System.Int32)
  commentId: M:AngeliA.Renderer.GetAltSheet(System.Int32)
  id: GetAltSheet(System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: GetAltSheet(int)
  nameWithType: Renderer.GetAltSheet(int)
  fullName: AngeliA.Renderer.GetAltSheet(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetAltSheet
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 388
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get instance of the alt sheet at given index
  example: []
  syntax:
    content: public static Sheet GetAltSheet(int index)
    parameters:
    - id: index
      type: System.Int32
    return:
      type: AngeliA.Sheet
    content.vb: Public Shared Function GetAltSheet(index As Integer) As Sheet
  overload: AngeliA.Renderer.GetAltSheet*
  nameWithType.vb: Renderer.GetAltSheet(Integer)
  fullName.vb: AngeliA.Renderer.GetAltSheet(Integer)
  name.vb: GetAltSheet(Integer)
- uid: AngeliA.Renderer.SetLayer(System.Int32)
  commentId: M:AngeliA.Renderer.SetLayer(System.Int32)
  id: SetLayer(System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: SetLayer(int)
  nameWithType: Renderer.SetLayer(int)
  fullName: AngeliA.Renderer.SetLayer(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SetLayer
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 395
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Set current using layer. Use RenderLayer.XXX to get this value.
  example: []
  syntax:
    content: public static void SetLayer(int index)
    parameters:
    - id: index
      type: System.Int32
    content.vb: Public Shared Sub SetLayer(index As Integer)
  overload: AngeliA.Renderer.SetLayer*
  nameWithType.vb: Renderer.SetLayer(Integer)
  fullName.vb: AngeliA.Renderer.SetLayer(Integer)
  name.vb: SetLayer(Integer)
- uid: AngeliA.Renderer.SetLayerToWallpaper
  commentId: M:AngeliA.Renderer.SetLayerToWallpaper
  id: SetLayerToWallpaper
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: SetLayerToWallpaper()
  nameWithType: Renderer.SetLayerToWallpaper()
  fullName: AngeliA.Renderer.SetLayerToWallpaper()
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SetLayerToWallpaper
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 402
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void SetLayerToWallpaper()
    content.vb: Public Shared Sub SetLayerToWallpaper()
  overload: AngeliA.Renderer.SetLayerToWallpaper*
- uid: AngeliA.Renderer.SetLayerToBehind
  commentId: M:AngeliA.Renderer.SetLayerToBehind
  id: SetLayerToBehind
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: SetLayerToBehind()
  nameWithType: Renderer.SetLayerToBehind()
  fullName: AngeliA.Renderer.SetLayerToBehind()
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SetLayerToBehind
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 403
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void SetLayerToBehind()
    content.vb: Public Shared Sub SetLayerToBehind()
  overload: AngeliA.Renderer.SetLayerToBehind*
- uid: AngeliA.Renderer.SetLayerToShadow
  commentId: M:AngeliA.Renderer.SetLayerToShadow
  id: SetLayerToShadow
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: SetLayerToShadow()
  nameWithType: Renderer.SetLayerToShadow()
  fullName: AngeliA.Renderer.SetLayerToShadow()
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SetLayerToShadow
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 404
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void SetLayerToShadow()
    content.vb: Public Shared Sub SetLayerToShadow()
  overload: AngeliA.Renderer.SetLayerToShadow*
- uid: AngeliA.Renderer.SetLayerToDefault
  commentId: M:AngeliA.Renderer.SetLayerToDefault
  id: SetLayerToDefault
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: SetLayerToDefault()
  nameWithType: Renderer.SetLayerToDefault()
  fullName: AngeliA.Renderer.SetLayerToDefault()
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SetLayerToDefault
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 405
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void SetLayerToDefault()
    content.vb: Public Shared Sub SetLayerToDefault()
  overload: AngeliA.Renderer.SetLayerToDefault*
- uid: AngeliA.Renderer.SetLayerToColor
  commentId: M:AngeliA.Renderer.SetLayerToColor
  id: SetLayerToColor
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: SetLayerToColor()
  nameWithType: Renderer.SetLayerToColor()
  fullName: AngeliA.Renderer.SetLayerToColor()
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SetLayerToColor
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 406
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void SetLayerToColor()
    content.vb: Public Shared Sub SetLayerToColor()
  overload: AngeliA.Renderer.SetLayerToColor*
- uid: AngeliA.Renderer.SetLayerToMultiply
  commentId: M:AngeliA.Renderer.SetLayerToMultiply
  id: SetLayerToMultiply
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: SetLayerToMultiply()
  nameWithType: Renderer.SetLayerToMultiply()
  fullName: AngeliA.Renderer.SetLayerToMultiply()
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SetLayerToMultiply
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 407
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void SetLayerToMultiply()
    content.vb: Public Shared Sub SetLayerToMultiply()
  overload: AngeliA.Renderer.SetLayerToMultiply*
- uid: AngeliA.Renderer.SetLayerToAdditive
  commentId: M:AngeliA.Renderer.SetLayerToAdditive
  id: SetLayerToAdditive
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: SetLayerToAdditive()
  nameWithType: Renderer.SetLayerToAdditive()
  fullName: AngeliA.Renderer.SetLayerToAdditive()
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SetLayerToAdditive
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 408
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void SetLayerToAdditive()
    content.vb: Public Shared Sub SetLayerToAdditive()
  overload: AngeliA.Renderer.SetLayerToAdditive*
- uid: AngeliA.Renderer.ResetLayer(System.Int32)
  commentId: M:AngeliA.Renderer.ResetLayer(System.Int32)
  id: ResetLayer(System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: ResetLayer(int)
  nameWithType: Renderer.ResetLayer(int)
  fullName: AngeliA.Renderer.ResetLayer(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ResetLayer
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 414
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Clear the whole render layer
  example: []
  syntax:
    content: public static void ResetLayer(int layerIndex)
    parameters:
    - id: layerIndex
      type: System.Int32
      description: Use RenderLayer.XXX to get this value
    content.vb: Public Shared Sub ResetLayer(layerIndex As Integer)
  overload: AngeliA.Renderer.ResetLayer*
  nameWithType.vb: Renderer.ResetLayer(Integer)
  fullName.vb: AngeliA.Renderer.ResetLayer(Integer)
  name.vb: ResetLayer(Integer)
- uid: AngeliA.Renderer.SortLayer(System.Int32)
  commentId: M:AngeliA.Renderer.SortLayer(System.Int32)
  id: SortLayer(System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: SortLayer(int)
  nameWithType: Renderer.SortLayer(int)
  fullName: AngeliA.Renderer.SortLayer(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SortLayer
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 424
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Sort cells inside layer with default comparer
  example: []
  syntax:
    content: public static void SortLayer(int layerIndex)
    parameters:
    - id: layerIndex
      type: System.Int32
      description: Use RenderLayer.XXX to get this value
    content.vb: Public Shared Sub SortLayer(layerIndex As Integer)
  overload: AngeliA.Renderer.SortLayer*
  nameWithType.vb: Renderer.SortLayer(Integer)
  fullName.vb: AngeliA.Renderer.SortLayer(Integer)
  name.vb: SortLayer(Integer)
- uid: AngeliA.Renderer.ReverseUnsortedCells(System.Int32)
  commentId: M:AngeliA.Renderer.ReverseUnsortedCells(System.Int32)
  id: ReverseUnsortedCells(System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: ReverseUnsortedCells(int)
  nameWithType: Renderer.ReverseUnsortedCells(int)
  fullName: AngeliA.Renderer.ReverseUnsortedCells(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ReverseUnsortedCells
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 430
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Sort cells inside layer reversely with default comparer
  example: []
  syntax:
    content: public static void ReverseUnsortedCells(int layerIndex)
    parameters:
    - id: layerIndex
      type: System.Int32
      description: Use RenderLayer.XXX to get this value
    content.vb: Public Shared Sub ReverseUnsortedCells(layerIndex As Integer)
  overload: AngeliA.Renderer.ReverseUnsortedCells*
  nameWithType.vb: Renderer.ReverseUnsortedCells(Integer)
  fullName.vb: AngeliA.Renderer.ReverseUnsortedCells(Integer)
  name.vb: ReverseUnsortedCells(Integer)
- uid: AngeliA.Renderer.AbandonLayerSort(System.Int32)
  commentId: M:AngeliA.Renderer.AbandonLayerSort(System.Int32)
  id: AbandonLayerSort(System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: AbandonLayerSort(int)
  nameWithType: Renderer.AbandonLayerSort(int)
  fullName: AngeliA.Renderer.AbandonLayerSort(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: AbandonLayerSort
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 437
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Do not sort the unsorted cells inside this layer
  example: []
  syntax:
    content: public static void AbandonLayerSort(int layerIndex)
    parameters:
    - id: layerIndex
      type: System.Int32
      description: Use RenderLayer.XXX to get this value
    content.vb: Public Shared Sub AbandonLayerSort(layerIndex As Integer)
  overload: AngeliA.Renderer.AbandonLayerSort*
  nameWithType.vb: Renderer.AbandonLayerSort(Integer)
  fullName.vb: AngeliA.Renderer.AbandonLayerSort(Integer)
  name.vb: AbandonLayerSort(Integer)
- uid: AngeliA.Renderer.GetUsedCellCount
  commentId: M:AngeliA.Renderer.GetUsedCellCount
  id: GetUsedCellCount
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: GetUsedCellCount()
  nameWithType: Renderer.GetUsedCellCount()
  fullName: AngeliA.Renderer.GetUsedCellCount()
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetUsedCellCount
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 443
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get current cells count inside the using layer
  example: []
  syntax:
    content: public static int GetUsedCellCount()
    return:
      type: System.Int32
    content.vb: Public Shared Function GetUsedCellCount() As Integer
  overload: AngeliA.Renderer.GetUsedCellCount*
- uid: AngeliA.Renderer.GetUsedCellCount(System.Int32)
  commentId: M:AngeliA.Renderer.GetUsedCellCount(System.Int32)
  id: GetUsedCellCount(System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: GetUsedCellCount(int)
  nameWithType: Renderer.GetUsedCellCount(int)
  fullName: AngeliA.Renderer.GetUsedCellCount(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetUsedCellCount
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 448
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get current cells count inside given layer
  example: []
  syntax:
    content: public static int GetUsedCellCount(int layerIndex)
    parameters:
    - id: layerIndex
      type: System.Int32
      description: Use RenderLayer.XXX to get this value
    return:
      type: System.Int32
    content.vb: Public Shared Function GetUsedCellCount(layerIndex As Integer) As Integer
  overload: AngeliA.Renderer.GetUsedCellCount*
  nameWithType.vb: Renderer.GetUsedCellCount(Integer)
  fullName.vb: AngeliA.Renderer.GetUsedCellCount(Integer)
  name.vb: GetUsedCellCount(Integer)
- uid: AngeliA.Renderer.GetLayerCapacity(System.Int32)
  commentId: M:AngeliA.Renderer.GetLayerCapacity(System.Int32)
  id: GetLayerCapacity(System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: GetLayerCapacity(int)
  nameWithType: Renderer.GetLayerCapacity(int)
  fullName: AngeliA.Renderer.GetLayerCapacity(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetLayerCapacity
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 454
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get total size of the layer
  example: []
  syntax:
    content: public static int GetLayerCapacity(int layerIndex)
    parameters:
    - id: layerIndex
      type: System.Int32
      description: Use RenderLayer.XXX to get this value
    return:
      type: System.Int32
    content.vb: Public Shared Function GetLayerCapacity(layerIndex As Integer) As Integer
  overload: AngeliA.Renderer.GetLayerCapacity*
  nameWithType.vb: Renderer.GetLayerCapacity(Integer)
  fullName.vb: AngeliA.Renderer.GetLayerCapacity(Integer)
  name.vb: GetLayerCapacity(Integer)
- uid: AngeliA.Renderer.SetFontID(System.Int32)
  commentId: M:AngeliA.Renderer.SetFontID(System.Int32)
  id: SetFontID(System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: SetFontID(int)
  nameWithType: Renderer.SetFontID(int)
  fullName: AngeliA.Renderer.SetFontID(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SetFontID
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 461
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Set current using font from ID
  example: []
  syntax:
    content: public static void SetFontID(int id)
    parameters:
    - id: id
      type: System.Int32
    content.vb: Public Shared Sub SetFontID(id As Integer)
  overload: AngeliA.Renderer.SetFontID*
  nameWithType.vb: Renderer.SetFontID(Integer)
  fullName.vb: AngeliA.Renderer.SetFontID(Integer)
  name.vb: SetFontID(Integer)
- uid: AngeliA.Renderer.SetFontIndex(System.Int32)
  commentId: M:AngeliA.Renderer.SetFontIndex(System.Int32)
  id: SetFontIndex(System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: SetFontIndex(int)
  nameWithType: Renderer.SetFontIndex(int)
  fullName: AngeliA.Renderer.SetFontIndex(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SetFontIndex
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 485
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Set current using font from index
  example: []
  syntax:
    content: public static void SetFontIndex(int index)
    parameters:
    - id: index
      type: System.Int32
    content.vb: Public Shared Sub SetFontIndex(index As Integer)
  overload: AngeliA.Renderer.SetFontIndex*
  nameWithType.vb: Renderer.SetFontIndex(Integer)
  fullName.vb: AngeliA.Renderer.SetFontIndex(Integer)
  name.vb: SetFontIndex(Integer)
- uid: AngeliA.Renderer.ClearFontIndexIdMap
  commentId: M:AngeliA.Renderer.ClearFontIndexIdMap
  id: ClearFontIndexIdMap
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: ClearFontIndexIdMap()
  nameWithType: Renderer.ClearFontIndexIdMap()
  fullName: AngeliA.Renderer.ClearFontIndexIdMap()
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ClearFontIndexIdMap
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 491
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Reset internal cache for font id with index
  example: []
  syntax:
    content: public static void ClearFontIndexIdMap()
    content.vb: Public Shared Sub ClearFontIndexIdMap()
  overload: AngeliA.Renderer.ClearFontIndexIdMap*
- uid: AngeliA.Renderer.OverrideFontIdAndIndex(System.Int32,System.Int32)
  commentId: M:AngeliA.Renderer.OverrideFontIdAndIndex(System.Int32,System.Int32)
  id: OverrideFontIdAndIndex(System.Int32,System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: OverrideFontIdAndIndex(int, int)
  nameWithType: Renderer.OverrideFontIdAndIndex(int, int)
  fullName: AngeliA.Renderer.OverrideFontIdAndIndex(int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: OverrideFontIdAndIndex
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 497
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Add/set internal cache for font id with index
  example: []
  syntax:
    content: public static void OverrideFontIdAndIndex(int fontId, int fontIndex)
    parameters:
    - id: fontId
      type: System.Int32
    - id: fontIndex
      type: System.Int32
    content.vb: Public Shared Sub OverrideFontIdAndIndex(fontId As Integer, fontIndex As Integer)
  overload: AngeliA.Renderer.OverrideFontIdAndIndex*
  nameWithType.vb: Renderer.OverrideFontIdAndIndex(Integer, Integer)
  fullName.vb: AngeliA.Renderer.OverrideFontIdAndIndex(Integer, Integer)
  name.vb: OverrideFontIdAndIndex(Integer, Integer)
- uid: AngeliA.Renderer.Draw(System.Int32,AngeliA.IRect,System.Int32)
  commentId: M:AngeliA.Renderer.Draw(System.Int32,AngeliA.IRect,System.Int32)
  id: Draw(System.Int32,AngeliA.IRect,System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: Draw(int, IRect, int)
  nameWithType: Renderer.Draw(int, IRect, int)
  fullName: AngeliA.Renderer.Draw(int, AngeliA.IRect, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Draw
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 502
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Draw a artwork sprite into using render layer
  example: []
  syntax:
    content: public static Cell Draw(int globalID, IRect rect, int z = -2147483648)
    parameters:
    - id: globalID
      type: System.Int32
      description: Artwork sprite ID
    - id: rect
      type: AngeliA.IRect
      description: Rect position in global space
    - id: z
      type: System.Int32
      description: Z value for sorting rendering cells
    return:
      type: AngeliA.Cell
      description: Rendering cell for this sprite
    content.vb: Public Shared Function Draw(globalID As Integer, rect As IRect, z As Integer = -2147483648) As Cell
  overload: AngeliA.Renderer.Draw*
  nameWithType.vb: Renderer.Draw(Integer, IRect, Integer)
  fullName.vb: AngeliA.Renderer.Draw(Integer, AngeliA.IRect, Integer)
  name.vb: Draw(Integer, IRect, Integer)
- uid: AngeliA.Renderer.Draw(System.Int32,AngeliA.IRect,AngeliA.Color32,System.Int32)
  commentId: M:AngeliA.Renderer.Draw(System.Int32,AngeliA.IRect,AngeliA.Color32,System.Int32)
  id: Draw(System.Int32,AngeliA.IRect,AngeliA.Color32,System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: Draw(int, IRect, Color32, int)
  nameWithType: Renderer.Draw(int, IRect, Color32, int)
  fullName: AngeliA.Renderer.Draw(int, AngeliA.IRect, AngeliA.Color32, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Draw
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 504
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Draw a artwork sprite into using render layer
  example: []
  syntax:
    content: public static Cell Draw(int globalID, IRect rect, Color32 color, int z = -2147483648)
    parameters:
    - id: globalID
      type: System.Int32
      description: Artwork sprite ID
    - id: rect
      type: AngeliA.IRect
      description: Rect position in global space
    - id: color
      type: AngeliA.Color32
      description: Color tint
    - id: z
      type: System.Int32
      description: Z value for sorting rendering cells
    return:
      type: AngeliA.Cell
      description: Rendering cell for this sprite
    content.vb: Public Shared Function Draw(globalID As Integer, rect As IRect, color As Color32, z As Integer = -2147483648) As Cell
  overload: AngeliA.Renderer.Draw*
  nameWithType.vb: Renderer.Draw(Integer, IRect, Color32, Integer)
  fullName.vb: AngeliA.Renderer.Draw(Integer, AngeliA.IRect, AngeliA.Color32, Integer)
  name.vb: Draw(Integer, IRect, Color32, Integer)
- uid: AngeliA.Renderer.Draw(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Renderer.Draw(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: Draw(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: Draw(int, int, int, int, int, int, int, int, int)
  nameWithType: Renderer.Draw(int, int, int, int, int, int, int, int, int)
  fullName: AngeliA.Renderer.Draw(int, int, int, int, int, int, int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Draw
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 506
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Draw a artwork sprite into using render layer
  example: []
  syntax:
    content: public static Cell Draw(int globalID, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int z = -2147483648)
    parameters:
    - id: globalID
      type: System.Int32
      description: Artwork sprite ID
    - id: x
      type: System.Int32
      description: Position in global space
    - id: y
      type: System.Int32
      description: Position in global space
    - id: pivotX
      type: System.Int32
      description: 0 means "x" align with left edge. 1000 means "x" align with right edge.
    - id: pivotY
      type: System.Int32
      description: 0 means "y" align with bottom edge. 1000 means "y" align with top edge.
    - id: rotation
      type: System.Int32
      description: Rotation in degree. 90 means facing right.
    - id: width
      type: System.Int32
      description: Size in global space
    - id: height
      type: System.Int32
      description: Size in global space
    - id: z
      type: System.Int32
      description: Z value for sorting rendering cells
    return:
      type: AngeliA.Cell
      description: Rendering cell for this sprite
    content.vb: Public Shared Function Draw(globalID As Integer, x As Integer, y As Integer, pivotX As Integer, pivotY As Integer, rotation As Integer, width As Integer, height As Integer, z As Integer = -2147483648) As Cell
  overload: AngeliA.Renderer.Draw*
  nameWithType.vb: Renderer.Draw(Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.Renderer.Draw(Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
  name.vb: Draw(Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
- uid: AngeliA.Renderer.Draw(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  commentId: M:AngeliA.Renderer.Draw(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  id: Draw(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: Draw(int, int, int, int, int, int, int, int, Color32, int)
  nameWithType: Renderer.Draw(int, int, int, int, int, int, int, int, Color32, int)
  fullName: AngeliA.Renderer.Draw(int, int, int, int, int, int, int, int, AngeliA.Color32, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Draw
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 508
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Draw a artwork sprite into using render layer
  example: []
  syntax:
    content: public static Cell Draw(int globalID, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, Color32 color, int z = -2147483648)
    parameters:
    - id: globalID
      type: System.Int32
      description: Artwork sprite ID
    - id: x
      type: System.Int32
      description: Position in global space
    - id: y
      type: System.Int32
      description: Position in global space
    - id: pivotX
      type: System.Int32
      description: 0 means "x" align with left edge. 1000 means "x" align with right edge.
    - id: pivotY
      type: System.Int32
      description: 0 means "y" align with bottom edge. 1000 means "y" align with top edge.
    - id: rotation
      type: System.Int32
      description: Rotation in degree. 90 means facing right.
    - id: width
      type: System.Int32
      description: Size in global space
    - id: height
      type: System.Int32
      description: Size in global space
    - id: color
      type: AngeliA.Color32
      description: Color tint
    - id: z
      type: System.Int32
      description: Z value for sorting rendering cells
    return:
      type: AngeliA.Cell
      description: Rendering cell for this sprite
    content.vb: Public Shared Function Draw(globalID As Integer, x As Integer, y As Integer, pivotX As Integer, pivotY As Integer, rotation As Integer, width As Integer, height As Integer, color As Color32, z As Integer = -2147483648) As Cell
  overload: AngeliA.Renderer.Draw*
  nameWithType.vb: Renderer.Draw(Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Color32, Integer)
  fullName.vb: AngeliA.Renderer.Draw(Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, AngeliA.Color32, Integer)
  name.vb: Draw(Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Color32, Integer)
- uid: AngeliA.Renderer.Draw(AngeliA.SpriteCode,AngeliA.IRect,System.Int32)
  commentId: M:AngeliA.Renderer.Draw(AngeliA.SpriteCode,AngeliA.IRect,System.Int32)
  id: Draw(AngeliA.SpriteCode,AngeliA.IRect,System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: Draw(SpriteCode, IRect, int)
  nameWithType: Renderer.Draw(SpriteCode, IRect, int)
  fullName: AngeliA.Renderer.Draw(AngeliA.SpriteCode, AngeliA.IRect, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Draw
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 510
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Draw a artwork sprite into using render layer
  example: []
  syntax:
    content: public static Cell Draw(SpriteCode globalID, IRect rect, int z = -2147483648)
    parameters:
    - id: globalID
      type: AngeliA.SpriteCode
      description: Artwork sprite ID
    - id: rect
      type: AngeliA.IRect
      description: Rect position in global space
    - id: z
      type: System.Int32
      description: Z value for sorting rendering cells
    return:
      type: AngeliA.Cell
      description: Rendering cell for this sprite
    content.vb: Public Shared Function Draw(globalID As SpriteCode, rect As IRect, z As Integer = -2147483648) As Cell
  overload: AngeliA.Renderer.Draw*
  nameWithType.vb: Renderer.Draw(SpriteCode, IRect, Integer)
  fullName.vb: AngeliA.Renderer.Draw(AngeliA.SpriteCode, AngeliA.IRect, Integer)
  name.vb: Draw(SpriteCode, IRect, Integer)
- uid: AngeliA.Renderer.Draw(AngeliA.SpriteCode,AngeliA.IRect,AngeliA.Color32,System.Int32)
  commentId: M:AngeliA.Renderer.Draw(AngeliA.SpriteCode,AngeliA.IRect,AngeliA.Color32,System.Int32)
  id: Draw(AngeliA.SpriteCode,AngeliA.IRect,AngeliA.Color32,System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: Draw(SpriteCode, IRect, Color32, int)
  nameWithType: Renderer.Draw(SpriteCode, IRect, Color32, int)
  fullName: AngeliA.Renderer.Draw(AngeliA.SpriteCode, AngeliA.IRect, AngeliA.Color32, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Draw
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 512
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Draw a artwork sprite into using render layer
  example: []
  syntax:
    content: public static Cell Draw(SpriteCode globalID, IRect rect, Color32 color, int z = -2147483648)
    parameters:
    - id: globalID
      type: AngeliA.SpriteCode
      description: Artwork sprite ID
    - id: rect
      type: AngeliA.IRect
      description: Rect position in global space
    - id: color
      type: AngeliA.Color32
      description: Color tint
    - id: z
      type: System.Int32
      description: Z value for sorting rendering cells
    return:
      type: AngeliA.Cell
      description: Rendering cell for this sprite
    content.vb: Public Shared Function Draw(globalID As SpriteCode, rect As IRect, color As Color32, z As Integer = -2147483648) As Cell
  overload: AngeliA.Renderer.Draw*
  nameWithType.vb: Renderer.Draw(SpriteCode, IRect, Color32, Integer)
  fullName.vb: AngeliA.Renderer.Draw(AngeliA.SpriteCode, AngeliA.IRect, AngeliA.Color32, Integer)
  name.vb: Draw(SpriteCode, IRect, Color32, Integer)
- uid: AngeliA.Renderer.Draw(AngeliA.SpriteCode,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Renderer.Draw(AngeliA.SpriteCode,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: Draw(AngeliA.SpriteCode,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: Draw(SpriteCode, int, int, int, int, int, int, int, int)
  nameWithType: Renderer.Draw(SpriteCode, int, int, int, int, int, int, int, int)
  fullName: AngeliA.Renderer.Draw(AngeliA.SpriteCode, int, int, int, int, int, int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Draw
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 514
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Draw a artwork sprite into using render layer
  example: []
  syntax:
    content: public static Cell Draw(SpriteCode globalID, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int z = -2147483648)
    parameters:
    - id: globalID
      type: AngeliA.SpriteCode
      description: Artwork sprite ID
    - id: x
      type: System.Int32
      description: Position in global space
    - id: y
      type: System.Int32
      description: Position in global space
    - id: pivotX
      type: System.Int32
      description: 0 means "x" align with left edge. 1000 means "x" align with right edge.
    - id: pivotY
      type: System.Int32
      description: 0 means "y" align with bottom edge. 1000 means "y" align with top edge.
    - id: rotation
      type: System.Int32
      description: Rotation in degree. 90 means facing right.
    - id: width
      type: System.Int32
      description: Size in global space
    - id: height
      type: System.Int32
      description: Size in global space
    - id: z
      type: System.Int32
      description: Z value for sorting rendering cells
    return:
      type: AngeliA.Cell
      description: Rendering cell for this sprite
    content.vb: Public Shared Function Draw(globalID As SpriteCode, x As Integer, y As Integer, pivotX As Integer, pivotY As Integer, rotation As Integer, width As Integer, height As Integer, z As Integer = -2147483648) As Cell
  overload: AngeliA.Renderer.Draw*
  nameWithType.vb: Renderer.Draw(SpriteCode, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.Renderer.Draw(AngeliA.SpriteCode, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
  name.vb: Draw(SpriteCode, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
- uid: AngeliA.Renderer.Draw(AngeliA.SpriteCode,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  commentId: M:AngeliA.Renderer.Draw(AngeliA.SpriteCode,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  id: Draw(AngeliA.SpriteCode,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: Draw(SpriteCode, int, int, int, int, int, int, int, Color32, int)
  nameWithType: Renderer.Draw(SpriteCode, int, int, int, int, int, int, int, Color32, int)
  fullName: AngeliA.Renderer.Draw(AngeliA.SpriteCode, int, int, int, int, int, int, int, AngeliA.Color32, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Draw
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 516
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Draw a artwork sprite into using render layer
  example: []
  syntax:
    content: public static Cell Draw(SpriteCode globalID, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, Color32 color, int z = -2147483648)
    parameters:
    - id: globalID
      type: AngeliA.SpriteCode
      description: Artwork sprite ID
    - id: x
      type: System.Int32
      description: Position in global space
    - id: y
      type: System.Int32
      description: Position in global space
    - id: pivotX
      type: System.Int32
      description: 0 means "x" align with left edge. 1000 means "x" align with right edge.
    - id: pivotY
      type: System.Int32
      description: 0 means "y" align with bottom edge. 1000 means "y" align with top edge.
    - id: rotation
      type: System.Int32
      description: Rotation in degree. 90 means facing right.
    - id: width
      type: System.Int32
      description: Size in global space
    - id: height
      type: System.Int32
      description: Size in global space
    - id: color
      type: AngeliA.Color32
      description: Color tint
    - id: z
      type: System.Int32
      description: Z value for sorting rendering cells
    return:
      type: AngeliA.Cell
      description: Rendering cell for this sprite
    content.vb: Public Shared Function Draw(globalID As SpriteCode, x As Integer, y As Integer, pivotX As Integer, pivotY As Integer, rotation As Integer, width As Integer, height As Integer, color As Color32, z As Integer = -2147483648) As Cell
  overload: AngeliA.Renderer.Draw*
  nameWithType.vb: Renderer.Draw(SpriteCode, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Color32, Integer)
  fullName.vb: AngeliA.Renderer.Draw(AngeliA.SpriteCode, Integer, Integer, Integer, Integer, Integer, Integer, Integer, AngeliA.Color32, Integer)
  name.vb: Draw(SpriteCode, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Color32, Integer)
- uid: AngeliA.Renderer.Draw(AngeliA.AngeSprite,AngeliA.IRect,System.Int32)
  commentId: M:AngeliA.Renderer.Draw(AngeliA.AngeSprite,AngeliA.IRect,System.Int32)
  id: Draw(AngeliA.AngeSprite,AngeliA.IRect,System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: Draw(AngeSprite, IRect, int)
  nameWithType: Renderer.Draw(AngeSprite, IRect, int)
  fullName: AngeliA.Renderer.Draw(AngeliA.AngeSprite, AngeliA.IRect, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Draw
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 518
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Draw a artwork sprite into using render layer
  example: []
  syntax:
    content: public static Cell Draw(AngeSprite sprite, IRect rect, int z = -2147483648)
    parameters:
    - id: sprite
      type: AngeliA.AngeSprite
      description: Artwork sprite
    - id: rect
      type: AngeliA.IRect
      description: Rect position in global space
    - id: z
      type: System.Int32
      description: Z value for sorting rendering cells
    return:
      type: AngeliA.Cell
      description: Rendering cell for this sprite
    content.vb: Public Shared Function Draw(sprite As AngeSprite, rect As IRect, z As Integer = -2147483648) As Cell
  overload: AngeliA.Renderer.Draw*
  nameWithType.vb: Renderer.Draw(AngeSprite, IRect, Integer)
  fullName.vb: AngeliA.Renderer.Draw(AngeliA.AngeSprite, AngeliA.IRect, Integer)
  name.vb: Draw(AngeSprite, IRect, Integer)
- uid: AngeliA.Renderer.Draw(AngeliA.AngeSprite,AngeliA.IRect,AngeliA.Color32,System.Int32)
  commentId: M:AngeliA.Renderer.Draw(AngeliA.AngeSprite,AngeliA.IRect,AngeliA.Color32,System.Int32)
  id: Draw(AngeliA.AngeSprite,AngeliA.IRect,AngeliA.Color32,System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: Draw(AngeSprite, IRect, Color32, int)
  nameWithType: Renderer.Draw(AngeSprite, IRect, Color32, int)
  fullName: AngeliA.Renderer.Draw(AngeliA.AngeSprite, AngeliA.IRect, AngeliA.Color32, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Draw
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 520
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Draw a artwork sprite into using render layer
  example: []
  syntax:
    content: public static Cell Draw(AngeSprite sprite, IRect rect, Color32 color, int z = -2147483648)
    parameters:
    - id: sprite
      type: AngeliA.AngeSprite
      description: Artwork sprite
    - id: rect
      type: AngeliA.IRect
      description: Rect position in global space
    - id: color
      type: AngeliA.Color32
      description: Color tint
    - id: z
      type: System.Int32
      description: Z value for sorting rendering cells
    return:
      type: AngeliA.Cell
      description: Rendering cell for this sprite
    content.vb: Public Shared Function Draw(sprite As AngeSprite, rect As IRect, color As Color32, z As Integer = -2147483648) As Cell
  overload: AngeliA.Renderer.Draw*
  nameWithType.vb: Renderer.Draw(AngeSprite, IRect, Color32, Integer)
  fullName.vb: AngeliA.Renderer.Draw(AngeliA.AngeSprite, AngeliA.IRect, AngeliA.Color32, Integer)
  name.vb: Draw(AngeSprite, IRect, Color32, Integer)
- uid: AngeliA.Renderer.Draw(AngeliA.AngeSprite,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Renderer.Draw(AngeliA.AngeSprite,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: Draw(AngeliA.AngeSprite,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: Draw(AngeSprite, int, int, int, int, int, int, int, int)
  nameWithType: Renderer.Draw(AngeSprite, int, int, int, int, int, int, int, int)
  fullName: AngeliA.Renderer.Draw(AngeliA.AngeSprite, int, int, int, int, int, int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Draw
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 522
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Draw a artwork sprite into using render layer
  example: []
  syntax:
    content: public static Cell Draw(AngeSprite sprite, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int z = -2147483648)
    parameters:
    - id: sprite
      type: AngeliA.AngeSprite
      description: Artwork sprite
    - id: x
      type: System.Int32
      description: Position in global space
    - id: y
      type: System.Int32
      description: Position in global space
    - id: pivotX
      type: System.Int32
      description: 0 means "x" align with left edge. 1000 means "x" align with right edge.
    - id: pivotY
      type: System.Int32
      description: 0 means "y" align with bottom edge. 1000 means "y" align with top edge.
    - id: rotation
      type: System.Int32
      description: Rotation in degree. 90 means facing right.
    - id: width
      type: System.Int32
      description: Size in global space
    - id: height
      type: System.Int32
      description: Size in global space
    - id: z
      type: System.Int32
      description: Z value for sorting rendering cells
    return:
      type: AngeliA.Cell
      description: Rendering cell for this sprite
    content.vb: Public Shared Function Draw(sprite As AngeSprite, x As Integer, y As Integer, pivotX As Integer, pivotY As Integer, rotation As Integer, width As Integer, height As Integer, z As Integer = -2147483648) As Cell
  overload: AngeliA.Renderer.Draw*
  nameWithType.vb: Renderer.Draw(AngeSprite, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.Renderer.Draw(AngeliA.AngeSprite, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
  name.vb: Draw(AngeSprite, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
- uid: AngeliA.Renderer.Draw(AngeliA.AngeSprite,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32,System.Boolean)
  commentId: M:AngeliA.Renderer.Draw(AngeliA.AngeSprite,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32,System.Boolean)
  id: Draw(AngeliA.AngeSprite,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32,System.Boolean)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: Draw(AngeSprite, int, int, int, int, int, int, int, Color32, int, bool)
  nameWithType: Renderer.Draw(AngeSprite, int, int, int, int, int, int, int, Color32, int, bool)
  fullName: AngeliA.Renderer.Draw(AngeliA.AngeSprite, int, int, int, int, int, int, int, AngeliA.Color32, int, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Draw
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 540
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Draw a artwork sprite into using render layer
  example: []
  syntax:
    content: public static Cell Draw(AngeSprite sprite, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, Color32 color, int z = -2147483648, bool ignoreAttach = false)
    parameters:
    - id: sprite
      type: AngeliA.AngeSprite
      description: Artwork sprite
    - id: x
      type: System.Int32
      description: Position in global space
    - id: y
      type: System.Int32
      description: Position in global space
    - id: pivotX
      type: System.Int32
      description: 0 means "x" align with left edge. 1000 means "x" align with right edge.
    - id: pivotY
      type: System.Int32
      description: 0 means "y" align with bottom edge. 1000 means "y" align with top edge.
    - id: rotation
      type: System.Int32
      description: Rotation in degree. 90 means facing right.
    - id: width
      type: System.Int32
      description: Size in global space
    - id: height
      type: System.Int32
      description: Size in global space
    - id: color
      type: AngeliA.Color32
      description: Color tint
    - id: z
      type: System.Int32
      description: Z value for sorting rendering cells
    - id: ignoreAttach
      type: System.Boolean
      description: True if do not draw attaching sprite
    return:
      type: AngeliA.Cell
      description: Rendering cell for this sprite
    content.vb: Public Shared Function Draw(sprite As AngeSprite, x As Integer, y As Integer, pivotX As Integer, pivotY As Integer, rotation As Integer, width As Integer, height As Integer, color As Color32, z As Integer = -2147483648, ignoreAttach As Boolean = False) As Cell
  overload: AngeliA.Renderer.Draw*
  nameWithType.vb: Renderer.Draw(AngeSprite, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Color32, Integer, Boolean)
  fullName.vb: AngeliA.Renderer.Draw(AngeliA.AngeSprite, Integer, Integer, Integer, Integer, Integer, Integer, Integer, AngeliA.Color32, Integer, Boolean)
  name.vb: Draw(AngeSprite, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Color32, Integer, Boolean)
- uid: AngeliA.Renderer.DrawPixel(AngeliA.IRect,System.Int32)
  commentId: M:AngeliA.Renderer.DrawPixel(AngeliA.IRect,System.Int32)
  id: DrawPixel(AngeliA.IRect,System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: DrawPixel(IRect, int)
  nameWithType: Renderer.DrawPixel(IRect, int)
  fullName: AngeliA.Renderer.DrawPixel(AngeliA.IRect, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawPixel
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 602
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Draw a solid rectangle into using render layer
  example: []
  syntax:
    content: public static Cell DrawPixel(IRect rect, int z = -2147483648)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: z
      type: System.Int32
      description: Z value for sorting rendering cells
    return:
      type: AngeliA.Cell
      description: Rendering cell for this sprite
    content.vb: Public Shared Function DrawPixel(rect As IRect, z As Integer = -2147483648) As Cell
  overload: AngeliA.Renderer.DrawPixel*
  nameWithType.vb: Renderer.DrawPixel(IRect, Integer)
  fullName.vb: AngeliA.Renderer.DrawPixel(AngeliA.IRect, Integer)
  name.vb: DrawPixel(IRect, Integer)
- uid: AngeliA.Renderer.DrawPixel(AngeliA.IRect,AngeliA.Color32,System.Int32)
  commentId: M:AngeliA.Renderer.DrawPixel(AngeliA.IRect,AngeliA.Color32,System.Int32)
  id: DrawPixel(AngeliA.IRect,AngeliA.Color32,System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: DrawPixel(IRect, Color32, int)
  nameWithType: Renderer.DrawPixel(IRect, Color32, int)
  fullName: AngeliA.Renderer.DrawPixel(AngeliA.IRect, AngeliA.Color32, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawPixel
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 604
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Draw a solid rectangle into using render layer
  example: []
  syntax:
    content: public static Cell DrawPixel(IRect rect, Color32 color, int z = -2147483648)
    parameters:
    - id: rect
      type: AngeliA.IRect
    - id: color
      type: AngeliA.Color32
      description: Color tint
    - id: z
      type: System.Int32
      description: Z value for sorting rendering cells
    return:
      type: AngeliA.Cell
      description: Rendering cell for this sprite
    content.vb: Public Shared Function DrawPixel(rect As IRect, color As Color32, z As Integer = -2147483648) As Cell
  overload: AngeliA.Renderer.DrawPixel*
  nameWithType.vb: Renderer.DrawPixel(IRect, Color32, Integer)
  fullName.vb: AngeliA.Renderer.DrawPixel(AngeliA.IRect, AngeliA.Color32, Integer)
  name.vb: DrawPixel(IRect, Color32, Integer)
- uid: AngeliA.Renderer.DrawPixel(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Renderer.DrawPixel(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: DrawPixel(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: DrawPixel(int, int, int, int, int, int, int, int)
  nameWithType: Renderer.DrawPixel(int, int, int, int, int, int, int, int)
  fullName: AngeliA.Renderer.DrawPixel(int, int, int, int, int, int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawPixel
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 606
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Draw a solid rectangle into using render layer
  example: []
  syntax:
    content: public static Cell DrawPixel(int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int z = -2147483648)
    parameters:
    - id: x
      type: System.Int32
      description: Position in global space
    - id: y
      type: System.Int32
      description: Position in global space
    - id: pivotX
      type: System.Int32
      description: 0 means "x" align with left edge. 1000 means "x" align with right edge.
    - id: pivotY
      type: System.Int32
      description: 0 means "y" align with bottom edge. 1000 means "y" align with top edge.
    - id: rotation
      type: System.Int32
      description: Rotation in degree. 90 means facing right.
    - id: width
      type: System.Int32
      description: Size in global space
    - id: height
      type: System.Int32
      description: Size in global space
    - id: z
      type: System.Int32
      description: Z value for sorting rendering cells
    return:
      type: AngeliA.Cell
      description: Rendering cell for this sprite
    content.vb: Public Shared Function DrawPixel(x As Integer, y As Integer, pivotX As Integer, pivotY As Integer, rotation As Integer, width As Integer, height As Integer, z As Integer = -2147483648) As Cell
  overload: AngeliA.Renderer.DrawPixel*
  nameWithType.vb: Renderer.DrawPixel(Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.Renderer.DrawPixel(Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
  name.vb: DrawPixel(Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
- uid: AngeliA.Renderer.DrawPixel(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  commentId: M:AngeliA.Renderer.DrawPixel(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  id: DrawPixel(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: DrawPixel(int, int, int, int, int, int, int, Color32, int)
  nameWithType: Renderer.DrawPixel(int, int, int, int, int, int, int, Color32, int)
  fullName: AngeliA.Renderer.DrawPixel(int, int, int, int, int, int, int, AngeliA.Color32, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawPixel
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 620
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Draw a solid rectangle into using render layer
  example: []
  syntax:
    content: public static Cell DrawPixel(int x, int y, int pivotX, int pivotY, int rotation, int width, int height, Color32 color, int z = -2147483648)
    parameters:
    - id: x
      type: System.Int32
      description: Position in global space
    - id: y
      type: System.Int32
      description: Position in global space
    - id: pivotX
      type: System.Int32
      description: 0 means "x" align with left edge. 1000 means "x" align with right edge.
    - id: pivotY
      type: System.Int32
      description: 0 means "y" align with bottom edge. 1000 means "y" align with top edge.
    - id: rotation
      type: System.Int32
      description: Rotation in degree. 90 means facing right.
    - id: width
      type: System.Int32
      description: Size in global space
    - id: height
      type: System.Int32
      description: Size in global space
    - id: color
      type: AngeliA.Color32
      description: Color tint
    - id: z
      type: System.Int32
      description: Z value for sorting rendering cells
    return:
      type: AngeliA.Cell
      description: Rendering cell for this sprite
    content.vb: Public Shared Function DrawPixel(x As Integer, y As Integer, pivotX As Integer, pivotY As Integer, rotation As Integer, width As Integer, height As Integer, color As Color32, z As Integer = -2147483648) As Cell
  overload: AngeliA.Renderer.DrawPixel*
  nameWithType.vb: Renderer.DrawPixel(Integer, Integer, Integer, Integer, Integer, Integer, Integer, Color32, Integer)
  fullName.vb: AngeliA.Renderer.DrawPixel(Integer, Integer, Integer, Integer, Integer, Integer, Integer, AngeliA.Color32, Integer)
  name.vb: DrawPixel(Integer, Integer, Integer, Integer, Integer, Integer, Integer, Color32, Integer)
- uid: AngeliA.Renderer.DrawChar(System.Char,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32)
  commentId: M:AngeliA.Renderer.DrawChar(System.Char,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32)
  id: DrawChar(System.Char,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: DrawChar(char, int, int, int, int, Color32)
  nameWithType: Renderer.DrawChar(char, int, int, int, int, Color32)
  fullName: AngeliA.Renderer.DrawChar(char, int, int, int, int, AngeliA.Color32)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawChar
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 625
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Draw a text character into using render layer
  example: []
  syntax:
    content: public static Cell DrawChar(char c, int x, int y, int width, int height, Color32 color)
    parameters:
    - id: c
      type: System.Char
    - id: x
      type: System.Int32
      description: Position in global space
    - id: y
      type: System.Int32
      description: Position in global space
    - id: width
      type: System.Int32
      description: Size in global space
    - id: height
      type: System.Int32
      description: Size in global space
    - id: color
      type: AngeliA.Color32
      description: Color tint
    return:
      type: AngeliA.Cell
      description: Rendering cell for this text character
    content.vb: Public Shared Function DrawChar(c As Char, x As Integer, y As Integer, width As Integer, height As Integer, color As Color32) As Cell
  overload: AngeliA.Renderer.DrawChar*
  nameWithType.vb: Renderer.DrawChar(Char, Integer, Integer, Integer, Integer, Color32)
  fullName.vb: AngeliA.Renderer.DrawChar(Char, Integer, Integer, Integer, Integer, AngeliA.Color32)
  name.vb: DrawChar(Char, Integer, Integer, Integer, Integer, Color32)
- uid: AngeliA.Renderer.DrawChar(AngeliA.CharSprite,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32)
  commentId: M:AngeliA.Renderer.DrawChar(AngeliA.CharSprite,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32)
  id: DrawChar(AngeliA.CharSprite,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: DrawChar(CharSprite, int, int, int, int, Color32)
  nameWithType: Renderer.DrawChar(CharSprite, int, int, int, int, Color32)
  fullName: AngeliA.Renderer.DrawChar(AngeliA.CharSprite, int, int, int, int, AngeliA.Color32)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawChar
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 640
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Draw a text character into using render layer
  example: []
  syntax:
    content: public static Cell DrawChar(CharSprite sprite, int x, int y, int width, int height, Color32 color)
    parameters:
    - id: sprite
      type: AngeliA.CharSprite
      description: ''
    - id: x
      type: System.Int32
      description: Position in global space
    - id: y
      type: System.Int32
      description: Position in global space
    - id: width
      type: System.Int32
      description: Size in global space
    - id: height
      type: System.Int32
      description: Size in global space
    - id: color
      type: AngeliA.Color32
      description: Color tint
    return:
      type: AngeliA.Cell
      description: Rendering cell for this text character
    content.vb: Public Shared Function DrawChar(sprite As CharSprite, x As Integer, y As Integer, width As Integer, height As Integer, color As Color32) As Cell
  overload: AngeliA.Renderer.DrawChar*
  nameWithType.vb: Renderer.DrawChar(CharSprite, Integer, Integer, Integer, Integer, Color32)
  fullName.vb: AngeliA.Renderer.DrawChar(AngeliA.CharSprite, Integer, Integer, Integer, Integer, AngeliA.Color32)
  name.vb: DrawChar(CharSprite, Integer, Integer, Integer, Integer, Color32)
- uid: AngeliA.Renderer.DrawSlice(System.Int32,AngeliA.IRect)
  commentId: M:AngeliA.Renderer.DrawSlice(System.Int32,AngeliA.IRect)
  id: DrawSlice(System.Int32,AngeliA.IRect)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: DrawSlice(int, IRect)
  nameWithType: Renderer.DrawSlice(int, IRect)
  fullName: AngeliA.Renderer.DrawSlice(int, AngeliA.IRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawSlice
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 676
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Proportionally scale the sprite by dividing it into nine sections, protecting the corners and scaling/tiling the edges and center to maintain the image's integrity and prevent distortion.
  example: []
  syntax:
    content: public static Cell[] DrawSlice(int globalID, IRect rect)
    parameters:
    - id: globalID
      type: System.Int32
      description: Artwork sprite ID
    - id: rect
      type: AngeliA.IRect
      description: Rect position in global space
    return:
      type: AngeliA.Cell[]
      description: 9 Rendering cells for this sprite
    content.vb: Public Shared Function DrawSlice(globalID As Integer, rect As IRect) As Cell()
  overload: AngeliA.Renderer.DrawSlice*
  nameWithType.vb: Renderer.DrawSlice(Integer, IRect)
  fullName.vb: AngeliA.Renderer.DrawSlice(Integer, AngeliA.IRect)
  name.vb: DrawSlice(Integer, IRect)
- uid: AngeliA.Renderer.DrawSlice(System.Int32,AngeliA.IRect,AngeliA.Color32,System.Int32)
  commentId: M:AngeliA.Renderer.DrawSlice(System.Int32,AngeliA.IRect,AngeliA.Color32,System.Int32)
  id: DrawSlice(System.Int32,AngeliA.IRect,AngeliA.Color32,System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: DrawSlice(int, IRect, Color32, int)
  nameWithType: Renderer.DrawSlice(int, IRect, Color32, int)
  fullName: AngeliA.Renderer.DrawSlice(int, AngeliA.IRect, AngeliA.Color32, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawSlice
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 678
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Proportionally scale the sprite by dividing it into nine sections, protecting the corners and scaling/tiling the edges and center to maintain the image's integrity and prevent distortion.
  example: []
  syntax:
    content: public static Cell[] DrawSlice(int globalID, IRect rect, Color32 color, int z = -2147483648)
    parameters:
    - id: globalID
      type: System.Int32
      description: Artwork sprite ID
    - id: rect
      type: AngeliA.IRect
      description: Rect position in global space
    - id: color
      type: AngeliA.Color32
      description: Color tint
    - id: z
      type: System.Int32
      description: Z value for sorting rendering cells
    return:
      type: AngeliA.Cell[]
      description: 9 Rendering cells for this sprite
    content.vb: Public Shared Function DrawSlice(globalID As Integer, rect As IRect, color As Color32, z As Integer = -2147483648) As Cell()
  overload: AngeliA.Renderer.DrawSlice*
  nameWithType.vb: Renderer.DrawSlice(Integer, IRect, Color32, Integer)
  fullName.vb: AngeliA.Renderer.DrawSlice(Integer, AngeliA.IRect, AngeliA.Color32, Integer)
  name.vb: DrawSlice(Integer, IRect, Color32, Integer)
- uid: AngeliA.Renderer.DrawSlice(System.Int32,AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Renderer.DrawSlice(System.Int32,AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: DrawSlice(System.Int32,AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: DrawSlice(int, IRect, int, int, int, int, int)
  nameWithType: Renderer.DrawSlice(int, IRect, int, int, int, int, int)
  fullName: AngeliA.Renderer.DrawSlice(int, AngeliA.IRect, int, int, int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawSlice
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 680
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Proportionally scale the sprite by dividing it into nine sections, protecting the corners and scaling/tiling the edges and center to maintain the image's integrity and prevent distortion.
  example: []
  syntax:
    content: public static Cell[] DrawSlice(int globalID, IRect rect, int borderL, int borderR, int borderD, int borderU, int z = -2147483648)
    parameters:
    - id: globalID
      type: System.Int32
      description: Artwork sprite ID
    - id: rect
      type: AngeliA.IRect
      description: Rect position in global space
    - id: borderL
      type: System.Int32
      description: Padding left in global space
    - id: borderR
      type: System.Int32
      description: Padding right in global space
    - id: borderD
      type: System.Int32
      description: Padding down in global space
    - id: borderU
      type: System.Int32
      description: Padding up in global space
    - id: z
      type: System.Int32
      description: Z value for sorting rendering cells
    return:
      type: AngeliA.Cell[]
      description: 9 Rendering cells for this sprite
    content.vb: Public Shared Function DrawSlice(globalID As Integer, rect As IRect, borderL As Integer, borderR As Integer, borderD As Integer, borderU As Integer, z As Integer = -2147483648) As Cell()
  overload: AngeliA.Renderer.DrawSlice*
  nameWithType.vb: Renderer.DrawSlice(Integer, IRect, Integer, Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.Renderer.DrawSlice(Integer, AngeliA.IRect, Integer, Integer, Integer, Integer, Integer)
  name.vb: DrawSlice(Integer, IRect, Integer, Integer, Integer, Integer, Integer)
- uid: AngeliA.Renderer.DrawSlice(System.Int32,AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  commentId: M:AngeliA.Renderer.DrawSlice(System.Int32,AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  id: DrawSlice(System.Int32,AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: DrawSlice(int, IRect, int, int, int, int, Color32, int)
  nameWithType: Renderer.DrawSlice(int, IRect, int, int, int, int, Color32, int)
  fullName: AngeliA.Renderer.DrawSlice(int, AngeliA.IRect, int, int, int, int, AngeliA.Color32, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawSlice
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 682
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Proportionally scale the sprite by dividing it into nine sections, protecting the corners and scaling/tiling the edges and center to maintain the image's integrity and prevent distortion.
  example: []
  syntax:
    content: public static Cell[] DrawSlice(int globalID, IRect rect, int borderL, int borderR, int borderD, int borderU, Color32 color, int z = -2147483648)
    parameters:
    - id: globalID
      type: System.Int32
      description: Artwork sprite ID
    - id: rect
      type: AngeliA.IRect
      description: Rect position in global space
    - id: borderL
      type: System.Int32
      description: Padding left in global space
    - id: borderR
      type: System.Int32
      description: Padding right in global space
    - id: borderD
      type: System.Int32
      description: Padding down in global space
    - id: borderU
      type: System.Int32
      description: Padding up in global space
    - id: color
      type: AngeliA.Color32
      description: Color tint
    - id: z
      type: System.Int32
      description: Z value for sorting rendering cells
    return:
      type: AngeliA.Cell[]
      description: 9 Rendering cells for this sprite
    content.vb: Public Shared Function DrawSlice(globalID As Integer, rect As IRect, borderL As Integer, borderR As Integer, borderD As Integer, borderU As Integer, color As Color32, z As Integer = -2147483648) As Cell()
  overload: AngeliA.Renderer.DrawSlice*
  nameWithType.vb: Renderer.DrawSlice(Integer, IRect, Integer, Integer, Integer, Integer, Color32, Integer)
  fullName.vb: AngeliA.Renderer.DrawSlice(Integer, AngeliA.IRect, Integer, Integer, Integer, Integer, AngeliA.Color32, Integer)
  name.vb: DrawSlice(Integer, IRect, Integer, Integer, Integer, Integer, Color32, Integer)
- uid: AngeliA.Renderer.DrawSlice(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Renderer.DrawSlice(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: DrawSlice(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: DrawSlice(int, int, int, int, int, int, int, int, int)
  nameWithType: Renderer.DrawSlice(int, int, int, int, int, int, int, int, int)
  fullName: AngeliA.Renderer.DrawSlice(int, int, int, int, int, int, int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawSlice
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 684
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Proportionally scale the sprite by dividing it into nine sections, protecting the corners and scaling/tiling the edges and center to maintain the image's integrity and prevent distortion.
  example: []
  syntax:
    content: public static Cell[] DrawSlice(int globalID, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int z = -2147483648)
    parameters:
    - id: globalID
      type: System.Int32
      description: Artwork sprite ID
    - id: x
      type: System.Int32
      description: Position in global space
    - id: y
      type: System.Int32
      description: Position in global space
    - id: pivotX
      type: System.Int32
      description: 0 means "x" align with left edge. 1000 means "x" align with right edge.
    - id: pivotY
      type: System.Int32
      description: 0 means "y" align with bottom edge. 1000 means "y" align with top edge.
    - id: rotation
      type: System.Int32
      description: Rotation in degree. 90 means facing right.
    - id: width
      type: System.Int32
      description: Size in global space
    - id: height
      type: System.Int32
      description: Size in global space
    - id: z
      type: System.Int32
      description: Z value for sorting rendering cells
    return:
      type: AngeliA.Cell[]
      description: 9 Rendering cells for this sprite
    content.vb: Public Shared Function DrawSlice(globalID As Integer, x As Integer, y As Integer, pivotX As Integer, pivotY As Integer, rotation As Integer, width As Integer, height As Integer, z As Integer = -2147483648) As Cell()
  overload: AngeliA.Renderer.DrawSlice*
  nameWithType.vb: Renderer.DrawSlice(Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.Renderer.DrawSlice(Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
  name.vb: DrawSlice(Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
- uid: AngeliA.Renderer.DrawSlice(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  commentId: M:AngeliA.Renderer.DrawSlice(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  id: DrawSlice(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: DrawSlice(int, int, int, int, int, int, int, int, Color32, int)
  nameWithType: Renderer.DrawSlice(int, int, int, int, int, int, int, int, Color32, int)
  fullName: AngeliA.Renderer.DrawSlice(int, int, int, int, int, int, int, int, AngeliA.Color32, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawSlice
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 686
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Proportionally scale the sprite by dividing it into nine sections, protecting the corners and scaling/tiling the edges and center to maintain the image's integrity and prevent distortion.
  example: []
  syntax:
    content: public static Cell[] DrawSlice(int globalID, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, Color32 color, int z = -2147483648)
    parameters:
    - id: globalID
      type: System.Int32
      description: Artwork sprite ID
    - id: x
      type: System.Int32
      description: Position in global space
    - id: y
      type: System.Int32
      description: Position in global space
    - id: pivotX
      type: System.Int32
      description: 0 means "x" align with left edge. 1000 means "x" align with right edge.
    - id: pivotY
      type: System.Int32
      description: 0 means "y" align with bottom edge. 1000 means "y" align with top edge.
    - id: rotation
      type: System.Int32
      description: Rotation in degree. 90 means facing right.
    - id: width
      type: System.Int32
      description: Size in global space
    - id: height
      type: System.Int32
      description: Size in global space
    - id: color
      type: AngeliA.Color32
      description: Color tint
    - id: z
      type: System.Int32
      description: Z value for sorting rendering cells
    return:
      type: AngeliA.Cell[]
      description: 9 Rendering cells for this sprite
    content.vb: Public Shared Function DrawSlice(globalID As Integer, x As Integer, y As Integer, pivotX As Integer, pivotY As Integer, rotation As Integer, width As Integer, height As Integer, color As Color32, z As Integer = -2147483648) As Cell()
  overload: AngeliA.Renderer.DrawSlice*
  nameWithType.vb: Renderer.DrawSlice(Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Color32, Integer)
  fullName.vb: AngeliA.Renderer.DrawSlice(Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, AngeliA.Color32, Integer)
  name.vb: DrawSlice(Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Color32, Integer)
- uid: AngeliA.Renderer.DrawSlice(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Renderer.DrawSlice(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: DrawSlice(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: DrawSlice(int, int, int, int, int, int, int, int, int, int, int, int, int)
  nameWithType: Renderer.DrawSlice(int, int, int, int, int, int, int, int, int, int, int, int, int)
  fullName: AngeliA.Renderer.DrawSlice(int, int, int, int, int, int, int, int, int, int, int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawSlice
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 696
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Proportionally scale the sprite by dividing it into nine sections, protecting the corners and scaling/tiling the edges and center to maintain the image's integrity and prevent distortion.
  example: []
  syntax:
    content: public static Cell[] DrawSlice(int globalID, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int borderL, int borderR, int borderD, int borderU, int z = -2147483648)
    parameters:
    - id: globalID
      type: System.Int32
      description: Artwork sprite ID
    - id: x
      type: System.Int32
      description: Position in global space
    - id: y
      type: System.Int32
      description: Position in global space
    - id: pivotX
      type: System.Int32
      description: 0 means "x" align with left edge. 1000 means "x" align with right edge.
    - id: pivotY
      type: System.Int32
      description: 0 means "y" align with bottom edge. 1000 means "y" align with top edge.
    - id: rotation
      type: System.Int32
      description: Rotation in degree. 90 means facing right.
    - id: width
      type: System.Int32
      description: Size in global space
    - id: height
      type: System.Int32
      description: Size in global space
    - id: borderL
      type: System.Int32
      description: Padding left in global space
    - id: borderR
      type: System.Int32
      description: Padding right in global space
    - id: borderD
      type: System.Int32
      description: Padding down in global space
    - id: borderU
      type: System.Int32
      description: Padding up in global space
    - id: z
      type: System.Int32
      description: Z value for sorting rendering cells
    return:
      type: AngeliA.Cell[]
      description: 9 Rendering cells for this sprite
    content.vb: Public Shared Function DrawSlice(globalID As Integer, x As Integer, y As Integer, pivotX As Integer, pivotY As Integer, rotation As Integer, width As Integer, height As Integer, borderL As Integer, borderR As Integer, borderD As Integer, borderU As Integer, z As Integer = -2147483648) As Cell()
  overload: AngeliA.Renderer.DrawSlice*
  nameWithType.vb: Renderer.DrawSlice(Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.Renderer.DrawSlice(Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
  name.vb: DrawSlice(Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
- uid: AngeliA.Renderer.DrawSlice(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  commentId: M:AngeliA.Renderer.DrawSlice(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  id: DrawSlice(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: DrawSlice(int, int, int, int, int, int, int, int, int, int, int, int, Color32, int)
  nameWithType: Renderer.DrawSlice(int, int, int, int, int, int, int, int, int, int, int, int, Color32, int)
  fullName: AngeliA.Renderer.DrawSlice(int, int, int, int, int, int, int, int, int, int, int, int, AngeliA.Color32, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawSlice
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 698
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Proportionally scale the sprite by dividing it into nine sections, protecting the corners and scaling/tiling the edges and center to maintain the image's integrity and prevent distortion.
  example: []
  syntax:
    content: public static Cell[] DrawSlice(int globalID, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int borderL, int borderR, int borderD, int borderU, Color32 color, int z = -2147483648)
    parameters:
    - id: globalID
      type: System.Int32
      description: Artwork sprite ID
    - id: x
      type: System.Int32
      description: Position in global space
    - id: y
      type: System.Int32
      description: Position in global space
    - id: pivotX
      type: System.Int32
      description: 0 means "x" align with left edge. 1000 means "x" align with right edge.
    - id: pivotY
      type: System.Int32
      description: 0 means "y" align with bottom edge. 1000 means "y" align with top edge.
    - id: rotation
      type: System.Int32
      description: Rotation in degree. 90 means facing right.
    - id: width
      type: System.Int32
      description: Size in global space
    - id: height
      type: System.Int32
      description: Size in global space
    - id: borderL
      type: System.Int32
      description: Padding left in global space
    - id: borderR
      type: System.Int32
      description: Padding right in global space
    - id: borderD
      type: System.Int32
      description: Padding down in global space
    - id: borderU
      type: System.Int32
      description: Padding up in global space
    - id: color
      type: AngeliA.Color32
      description: Color tint
    - id: z
      type: System.Int32
      description: Z value for sorting rendering cells
    return:
      type: AngeliA.Cell[]
      description: 9 Rendering cells for this sprite
    content.vb: Public Shared Function DrawSlice(globalID As Integer, x As Integer, y As Integer, pivotX As Integer, pivotY As Integer, rotation As Integer, width As Integer, height As Integer, borderL As Integer, borderR As Integer, borderD As Integer, borderU As Integer, color As Color32, z As Integer = -2147483648) As Cell()
  overload: AngeliA.Renderer.DrawSlice*
  nameWithType.vb: Renderer.DrawSlice(Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Color32, Integer)
  fullName.vb: AngeliA.Renderer.DrawSlice(Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, AngeliA.Color32, Integer)
  name.vb: DrawSlice(Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Color32, Integer)
- uid: AngeliA.Renderer.DrawSlice(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean[],AngeliA.Color32,System.Int32)
  commentId: M:AngeliA.Renderer.DrawSlice(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean[],AngeliA.Color32,System.Int32)
  id: DrawSlice(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean[],AngeliA.Color32,System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: DrawSlice(int, int, int, int, int, int, int, int, int, int, int, int, bool[], Color32, int)
  nameWithType: Renderer.DrawSlice(int, int, int, int, int, int, int, int, int, int, int, int, bool[], Color32, int)
  fullName: AngeliA.Renderer.DrawSlice(int, int, int, int, int, int, int, int, int, int, int, int, bool[], AngeliA.Color32, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawSlice
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 700
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Proportionally scale the sprite by dividing it into nine sections, protecting the corners and scaling/tiling the edges and center to maintain the image's integrity and prevent distortion.
  example: []
  syntax:
    content: public static Cell[] DrawSlice(int globalID, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int borderL, int borderR, int borderD, int borderU, bool[] partIgnore, Color32 color, int z = -2147483648)
    parameters:
    - id: globalID
      type: System.Int32
      description: Artwork sprite ID
    - id: x
      type: System.Int32
      description: Position in global space
    - id: y
      type: System.Int32
      description: Position in global space
    - id: pivotX
      type: System.Int32
      description: 0 means "x" align with left edge. 1000 means "x" align with right edge.
    - id: pivotY
      type: System.Int32
      description: 0 means "y" align with bottom edge. 1000 means "y" align with top edge.
    - id: rotation
      type: System.Int32
      description: Rotation in degree. 90 means facing right.
    - id: width
      type: System.Int32
      description: Size in global space
    - id: height
      type: System.Int32
      description: Size in global space
    - id: borderL
      type: System.Int32
      description: Padding left in global space
    - id: borderR
      type: System.Int32
      description: Padding right in global space
    - id: borderD
      type: System.Int32
      description: Padding down in global space
    - id: borderU
      type: System.Int32
      description: Padding up in global space
    - id: partIgnore
      type: System.Boolean[]
      description: Which part should be ignored. Set to true to exclude that part.
    - id: color
      type: AngeliA.Color32
      description: Color tint
    - id: z
      type: System.Int32
      description: Z value for sorting rendering cells
    return:
      type: AngeliA.Cell[]
      description: 9 Rendering cells for this sprite
    content.vb: Public Shared Function DrawSlice(globalID As Integer, x As Integer, y As Integer, pivotX As Integer, pivotY As Integer, rotation As Integer, width As Integer, height As Integer, borderL As Integer, borderR As Integer, borderD As Integer, borderU As Integer, partIgnore As Boolean(), color As Color32, z As Integer = -2147483648) As Cell()
  overload: AngeliA.Renderer.DrawSlice*
  nameWithType.vb: Renderer.DrawSlice(Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Boolean(), Color32, Integer)
  fullName.vb: AngeliA.Renderer.DrawSlice(Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Boolean(), AngeliA.Color32, Integer)
  name.vb: DrawSlice(Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Boolean(), Color32, Integer)
- uid: AngeliA.Renderer.DrawSlice(AngeliA.SpriteCode,AngeliA.IRect)
  commentId: M:AngeliA.Renderer.DrawSlice(AngeliA.SpriteCode,AngeliA.IRect)
  id: DrawSlice(AngeliA.SpriteCode,AngeliA.IRect)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: DrawSlice(SpriteCode, IRect)
  nameWithType: Renderer.DrawSlice(SpriteCode, IRect)
  fullName: AngeliA.Renderer.DrawSlice(AngeliA.SpriteCode, AngeliA.IRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawSlice
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 709
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Proportionally scale the sprite by dividing it into nine sections, protecting the corners and scaling/tiling the edges and center to maintain the image's integrity and prevent distortion.
  example: []
  syntax:
    content: public static Cell[] DrawSlice(SpriteCode globalID, IRect rect)
    parameters:
    - id: globalID
      type: AngeliA.SpriteCode
      description: Artwork sprite ID
    - id: rect
      type: AngeliA.IRect
      description: Rect position in global space
    return:
      type: AngeliA.Cell[]
      description: 9 Rendering cells for this sprite
    content.vb: Public Shared Function DrawSlice(globalID As SpriteCode, rect As IRect) As Cell()
  overload: AngeliA.Renderer.DrawSlice*
- uid: AngeliA.Renderer.DrawSlice(AngeliA.SpriteCode,AngeliA.IRect,AngeliA.Color32,System.Int32)
  commentId: M:AngeliA.Renderer.DrawSlice(AngeliA.SpriteCode,AngeliA.IRect,AngeliA.Color32,System.Int32)
  id: DrawSlice(AngeliA.SpriteCode,AngeliA.IRect,AngeliA.Color32,System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: DrawSlice(SpriteCode, IRect, Color32, int)
  nameWithType: Renderer.DrawSlice(SpriteCode, IRect, Color32, int)
  fullName: AngeliA.Renderer.DrawSlice(AngeliA.SpriteCode, AngeliA.IRect, AngeliA.Color32, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawSlice
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 711
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Proportionally scale the sprite by dividing it into nine sections, protecting the corners and scaling/tiling the edges and center to maintain the image's integrity and prevent distortion.
  example: []
  syntax:
    content: public static Cell[] DrawSlice(SpriteCode globalID, IRect rect, Color32 color, int z = -2147483648)
    parameters:
    - id: globalID
      type: AngeliA.SpriteCode
      description: Artwork sprite ID
    - id: rect
      type: AngeliA.IRect
      description: Rect position in global space
    - id: color
      type: AngeliA.Color32
      description: Color tint
    - id: z
      type: System.Int32
      description: Z value for sorting rendering cells
    return:
      type: AngeliA.Cell[]
      description: 9 Rendering cells for this sprite
    content.vb: Public Shared Function DrawSlice(globalID As SpriteCode, rect As IRect, color As Color32, z As Integer = -2147483648) As Cell()
  overload: AngeliA.Renderer.DrawSlice*
  nameWithType.vb: Renderer.DrawSlice(SpriteCode, IRect, Color32, Integer)
  fullName.vb: AngeliA.Renderer.DrawSlice(AngeliA.SpriteCode, AngeliA.IRect, AngeliA.Color32, Integer)
  name.vb: DrawSlice(SpriteCode, IRect, Color32, Integer)
- uid: AngeliA.Renderer.DrawSlice(AngeliA.SpriteCode,AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Renderer.DrawSlice(AngeliA.SpriteCode,AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: DrawSlice(AngeliA.SpriteCode,AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: DrawSlice(SpriteCode, IRect, int, int, int, int, int)
  nameWithType: Renderer.DrawSlice(SpriteCode, IRect, int, int, int, int, int)
  fullName: AngeliA.Renderer.DrawSlice(AngeliA.SpriteCode, AngeliA.IRect, int, int, int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawSlice
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 713
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Proportionally scale the sprite by dividing it into nine sections, protecting the corners and scaling/tiling the edges and center to maintain the image's integrity and prevent distortion.
  example: []
  syntax:
    content: public static Cell[] DrawSlice(SpriteCode globalID, IRect rect, int borderL, int borderR, int borderD, int borderU, int z = -2147483648)
    parameters:
    - id: globalID
      type: AngeliA.SpriteCode
      description: Artwork sprite ID
    - id: rect
      type: AngeliA.IRect
      description: Rect position in global space
    - id: borderL
      type: System.Int32
      description: Padding left in global space
    - id: borderR
      type: System.Int32
      description: Padding right in global space
    - id: borderD
      type: System.Int32
      description: Padding down in global space
    - id: borderU
      type: System.Int32
      description: Padding up in global space
    - id: z
      type: System.Int32
      description: Z value for sorting rendering cells
    return:
      type: AngeliA.Cell[]
      description: 9 Rendering cells for this sprite
    content.vb: Public Shared Function DrawSlice(globalID As SpriteCode, rect As IRect, borderL As Integer, borderR As Integer, borderD As Integer, borderU As Integer, z As Integer = -2147483648) As Cell()
  overload: AngeliA.Renderer.DrawSlice*
  nameWithType.vb: Renderer.DrawSlice(SpriteCode, IRect, Integer, Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.Renderer.DrawSlice(AngeliA.SpriteCode, AngeliA.IRect, Integer, Integer, Integer, Integer, Integer)
  name.vb: DrawSlice(SpriteCode, IRect, Integer, Integer, Integer, Integer, Integer)
- uid: AngeliA.Renderer.DrawSlice(AngeliA.SpriteCode,AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  commentId: M:AngeliA.Renderer.DrawSlice(AngeliA.SpriteCode,AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  id: DrawSlice(AngeliA.SpriteCode,AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: DrawSlice(SpriteCode, IRect, int, int, int, int, Color32, int)
  nameWithType: Renderer.DrawSlice(SpriteCode, IRect, int, int, int, int, Color32, int)
  fullName: AngeliA.Renderer.DrawSlice(AngeliA.SpriteCode, AngeliA.IRect, int, int, int, int, AngeliA.Color32, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawSlice
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 715
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Proportionally scale the sprite by dividing it into nine sections, protecting the corners and scaling/tiling the edges and center to maintain the image's integrity and prevent distortion.
  example: []
  syntax:
    content: public static Cell[] DrawSlice(SpriteCode globalID, IRect rect, int borderL, int borderR, int borderD, int borderU, Color32 color, int z = -2147483648)
    parameters:
    - id: globalID
      type: AngeliA.SpriteCode
      description: Artwork sprite ID
    - id: rect
      type: AngeliA.IRect
      description: Rect position in global space
    - id: borderL
      type: System.Int32
      description: Padding left in global space
    - id: borderR
      type: System.Int32
      description: Padding right in global space
    - id: borderD
      type: System.Int32
      description: Padding down in global space
    - id: borderU
      type: System.Int32
      description: Padding up in global space
    - id: color
      type: AngeliA.Color32
      description: Color tint
    - id: z
      type: System.Int32
      description: Z value for sorting rendering cells
    return:
      type: AngeliA.Cell[]
      description: 9 Rendering cells for this sprite
    content.vb: Public Shared Function DrawSlice(globalID As SpriteCode, rect As IRect, borderL As Integer, borderR As Integer, borderD As Integer, borderU As Integer, color As Color32, z As Integer = -2147483648) As Cell()
  overload: AngeliA.Renderer.DrawSlice*
  nameWithType.vb: Renderer.DrawSlice(SpriteCode, IRect, Integer, Integer, Integer, Integer, Color32, Integer)
  fullName.vb: AngeliA.Renderer.DrawSlice(AngeliA.SpriteCode, AngeliA.IRect, Integer, Integer, Integer, Integer, AngeliA.Color32, Integer)
  name.vb: DrawSlice(SpriteCode, IRect, Integer, Integer, Integer, Integer, Color32, Integer)
- uid: AngeliA.Renderer.DrawSlice(AngeliA.SpriteCode,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Renderer.DrawSlice(AngeliA.SpriteCode,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: DrawSlice(AngeliA.SpriteCode,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: DrawSlice(SpriteCode, int, int, int, int, int, int, int, int)
  nameWithType: Renderer.DrawSlice(SpriteCode, int, int, int, int, int, int, int, int)
  fullName: AngeliA.Renderer.DrawSlice(AngeliA.SpriteCode, int, int, int, int, int, int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawSlice
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 717
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Proportionally scale the sprite by dividing it into nine sections, protecting the corners and scaling/tiling the edges and center to maintain the image's integrity and prevent distortion.
  example: []
  syntax:
    content: public static Cell[] DrawSlice(SpriteCode globalID, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int z = -2147483648)
    parameters:
    - id: globalID
      type: AngeliA.SpriteCode
      description: Artwork sprite ID
    - id: x
      type: System.Int32
      description: Position in global space
    - id: y
      type: System.Int32
      description: Position in global space
    - id: pivotX
      type: System.Int32
      description: 0 means "x" align with left edge. 1000 means "x" align with right edge.
    - id: pivotY
      type: System.Int32
      description: 0 means "y" align with bottom edge. 1000 means "y" align with top edge.
    - id: rotation
      type: System.Int32
      description: Rotation in degree. 90 means facing right.
    - id: width
      type: System.Int32
      description: Size in global space
    - id: height
      type: System.Int32
      description: Size in global space
    - id: z
      type: System.Int32
      description: Z value for sorting rendering cells
    return:
      type: AngeliA.Cell[]
      description: 9 Rendering cells for this sprite
    content.vb: Public Shared Function DrawSlice(globalID As SpriteCode, x As Integer, y As Integer, pivotX As Integer, pivotY As Integer, rotation As Integer, width As Integer, height As Integer, z As Integer = -2147483648) As Cell()
  overload: AngeliA.Renderer.DrawSlice*
  nameWithType.vb: Renderer.DrawSlice(SpriteCode, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.Renderer.DrawSlice(AngeliA.SpriteCode, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
  name.vb: DrawSlice(SpriteCode, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
- uid: AngeliA.Renderer.DrawSlice(AngeliA.SpriteCode,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  commentId: M:AngeliA.Renderer.DrawSlice(AngeliA.SpriteCode,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  id: DrawSlice(AngeliA.SpriteCode,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: DrawSlice(SpriteCode, int, int, int, int, int, int, int, Color32, int)
  nameWithType: Renderer.DrawSlice(SpriteCode, int, int, int, int, int, int, int, Color32, int)
  fullName: AngeliA.Renderer.DrawSlice(AngeliA.SpriteCode, int, int, int, int, int, int, int, AngeliA.Color32, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawSlice
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 719
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Proportionally scale the sprite by dividing it into nine sections, protecting the corners and scaling/tiling the edges and center to maintain the image's integrity and prevent distortion.
  example: []
  syntax:
    content: public static Cell[] DrawSlice(SpriteCode globalID, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, Color32 color, int z = -2147483648)
    parameters:
    - id: globalID
      type: AngeliA.SpriteCode
      description: Artwork sprite ID
    - id: x
      type: System.Int32
      description: Position in global space
    - id: y
      type: System.Int32
      description: Position in global space
    - id: pivotX
      type: System.Int32
      description: 0 means "x" align with left edge. 1000 means "x" align with right edge.
    - id: pivotY
      type: System.Int32
      description: 0 means "y" align with bottom edge. 1000 means "y" align with top edge.
    - id: rotation
      type: System.Int32
      description: Rotation in degree. 90 means facing right.
    - id: width
      type: System.Int32
      description: Size in global space
    - id: height
      type: System.Int32
      description: Size in global space
    - id: color
      type: AngeliA.Color32
      description: Color tint
    - id: z
      type: System.Int32
      description: Z value for sorting rendering cells
    return:
      type: AngeliA.Cell[]
      description: 9 Rendering cells for this sprite
    content.vb: Public Shared Function DrawSlice(globalID As SpriteCode, x As Integer, y As Integer, pivotX As Integer, pivotY As Integer, rotation As Integer, width As Integer, height As Integer, color As Color32, z As Integer = -2147483648) As Cell()
  overload: AngeliA.Renderer.DrawSlice*
  nameWithType.vb: Renderer.DrawSlice(SpriteCode, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Color32, Integer)
  fullName.vb: AngeliA.Renderer.DrawSlice(AngeliA.SpriteCode, Integer, Integer, Integer, Integer, Integer, Integer, Integer, AngeliA.Color32, Integer)
  name.vb: DrawSlice(SpriteCode, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Color32, Integer)
- uid: AngeliA.Renderer.DrawSlice(AngeliA.SpriteCode,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Renderer.DrawSlice(AngeliA.SpriteCode,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: DrawSlice(AngeliA.SpriteCode,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: DrawSlice(SpriteCode, int, int, int, int, int, int, int, int, int, int, int, int)
  nameWithType: Renderer.DrawSlice(SpriteCode, int, int, int, int, int, int, int, int, int, int, int, int)
  fullName: AngeliA.Renderer.DrawSlice(AngeliA.SpriteCode, int, int, int, int, int, int, int, int, int, int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawSlice
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 729
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Proportionally scale the sprite by dividing it into nine sections, protecting the corners and scaling/tiling the edges and center to maintain the image's integrity and prevent distortion.
  example: []
  syntax:
    content: public static Cell[] DrawSlice(SpriteCode globalID, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int borderL, int borderR, int borderD, int borderU, int z = -2147483648)
    parameters:
    - id: globalID
      type: AngeliA.SpriteCode
      description: Artwork sprite ID
    - id: x
      type: System.Int32
      description: Position in global space
    - id: y
      type: System.Int32
      description: Position in global space
    - id: pivotX
      type: System.Int32
      description: 0 means "x" align with left edge. 1000 means "x" align with right edge.
    - id: pivotY
      type: System.Int32
      description: 0 means "y" align with bottom edge. 1000 means "y" align with top edge.
    - id: rotation
      type: System.Int32
      description: Rotation in degree. 90 means facing right.
    - id: width
      type: System.Int32
      description: Size in global space
    - id: height
      type: System.Int32
      description: Size in global space
    - id: borderL
      type: System.Int32
      description: Padding left in global space
    - id: borderR
      type: System.Int32
      description: Padding right in global space
    - id: borderD
      type: System.Int32
      description: Padding down in global space
    - id: borderU
      type: System.Int32
      description: Padding up in global space
    - id: z
      type: System.Int32
      description: Z value for sorting rendering cells
    return:
      type: AngeliA.Cell[]
      description: 9 Rendering cells for this sprite
    content.vb: Public Shared Function DrawSlice(globalID As SpriteCode, x As Integer, y As Integer, pivotX As Integer, pivotY As Integer, rotation As Integer, width As Integer, height As Integer, borderL As Integer, borderR As Integer, borderD As Integer, borderU As Integer, z As Integer = -2147483648) As Cell()
  overload: AngeliA.Renderer.DrawSlice*
  nameWithType.vb: Renderer.DrawSlice(SpriteCode, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.Renderer.DrawSlice(AngeliA.SpriteCode, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
  name.vb: DrawSlice(SpriteCode, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
- uid: AngeliA.Renderer.DrawSlice(AngeliA.SpriteCode,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  commentId: M:AngeliA.Renderer.DrawSlice(AngeliA.SpriteCode,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  id: DrawSlice(AngeliA.SpriteCode,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: DrawSlice(SpriteCode, int, int, int, int, int, int, int, int, int, int, int, Color32, int)
  nameWithType: Renderer.DrawSlice(SpriteCode, int, int, int, int, int, int, int, int, int, int, int, Color32, int)
  fullName: AngeliA.Renderer.DrawSlice(AngeliA.SpriteCode, int, int, int, int, int, int, int, int, int, int, int, AngeliA.Color32, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawSlice
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 731
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Proportionally scale the sprite by dividing it into nine sections, protecting the corners and scaling/tiling the edges and center to maintain the image's integrity and prevent distortion.
  example: []
  syntax:
    content: public static Cell[] DrawSlice(SpriteCode globalID, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int borderL, int borderR, int borderD, int borderU, Color32 color, int z = -2147483648)
    parameters:
    - id: globalID
      type: AngeliA.SpriteCode
      description: Artwork sprite ID
    - id: x
      type: System.Int32
      description: Position in global space
    - id: y
      type: System.Int32
      description: Position in global space
    - id: pivotX
      type: System.Int32
      description: 0 means "x" align with left edge. 1000 means "x" align with right edge.
    - id: pivotY
      type: System.Int32
      description: 0 means "y" align with bottom edge. 1000 means "y" align with top edge.
    - id: rotation
      type: System.Int32
      description: Rotation in degree. 90 means facing right.
    - id: width
      type: System.Int32
      description: Size in global space
    - id: height
      type: System.Int32
      description: Size in global space
    - id: borderL
      type: System.Int32
      description: Padding left in global space
    - id: borderR
      type: System.Int32
      description: Padding right in global space
    - id: borderD
      type: System.Int32
      description: Padding down in global space
    - id: borderU
      type: System.Int32
      description: Padding up in global space
    - id: color
      type: AngeliA.Color32
      description: Color tint
    - id: z
      type: System.Int32
      description: Z value for sorting rendering cells
    return:
      type: AngeliA.Cell[]
      description: 9 Rendering cells for this sprite
    content.vb: Public Shared Function DrawSlice(globalID As SpriteCode, x As Integer, y As Integer, pivotX As Integer, pivotY As Integer, rotation As Integer, width As Integer, height As Integer, borderL As Integer, borderR As Integer, borderD As Integer, borderU As Integer, color As Color32, z As Integer = -2147483648) As Cell()
  overload: AngeliA.Renderer.DrawSlice*
  nameWithType.vb: Renderer.DrawSlice(SpriteCode, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Color32, Integer)
  fullName.vb: AngeliA.Renderer.DrawSlice(AngeliA.SpriteCode, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, AngeliA.Color32, Integer)
  name.vb: DrawSlice(SpriteCode, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Color32, Integer)
- uid: AngeliA.Renderer.DrawSlice(AngeliA.SpriteCode,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean[],AngeliA.Color32,System.Int32)
  commentId: M:AngeliA.Renderer.DrawSlice(AngeliA.SpriteCode,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean[],AngeliA.Color32,System.Int32)
  id: DrawSlice(AngeliA.SpriteCode,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean[],AngeliA.Color32,System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: DrawSlice(SpriteCode, int, int, int, int, int, int, int, int, int, int, int, bool[], Color32, int)
  nameWithType: Renderer.DrawSlice(SpriteCode, int, int, int, int, int, int, int, int, int, int, int, bool[], Color32, int)
  fullName: AngeliA.Renderer.DrawSlice(AngeliA.SpriteCode, int, int, int, int, int, int, int, int, int, int, int, bool[], AngeliA.Color32, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawSlice
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 733
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Proportionally scale the sprite by dividing it into nine sections, protecting the corners and scaling/tiling the edges and center to maintain the image's integrity and prevent distortion.
  example: []
  syntax:
    content: public static Cell[] DrawSlice(SpriteCode globalID, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int borderL, int borderR, int borderD, int borderU, bool[] partIgnore, Color32 color, int z = -2147483648)
    parameters:
    - id: globalID
      type: AngeliA.SpriteCode
      description: Artwork sprite ID
    - id: x
      type: System.Int32
      description: Position in global space
    - id: y
      type: System.Int32
      description: Position in global space
    - id: pivotX
      type: System.Int32
      description: 0 means "x" align with left edge. 1000 means "x" align with right edge.
    - id: pivotY
      type: System.Int32
      description: 0 means "y" align with bottom edge. 1000 means "y" align with top edge.
    - id: rotation
      type: System.Int32
      description: Rotation in degree. 90 means facing right.
    - id: width
      type: System.Int32
      description: Size in global space
    - id: height
      type: System.Int32
      description: Size in global space
    - id: borderL
      type: System.Int32
      description: Padding left in global space
    - id: borderR
      type: System.Int32
      description: Padding right in global space
    - id: borderD
      type: System.Int32
      description: Padding down in global space
    - id: borderU
      type: System.Int32
      description: Padding up in global space
    - id: partIgnore
      type: System.Boolean[]
      description: Which part should be ignored. Set to true to exclude that part.
    - id: color
      type: AngeliA.Color32
      description: Color tint
    - id: z
      type: System.Int32
      description: Z value for sorting rendering cells
    return:
      type: AngeliA.Cell[]
      description: 9 Rendering cells for this sprite
    content.vb: Public Shared Function DrawSlice(globalID As SpriteCode, x As Integer, y As Integer, pivotX As Integer, pivotY As Integer, rotation As Integer, width As Integer, height As Integer, borderL As Integer, borderR As Integer, borderD As Integer, borderU As Integer, partIgnore As Boolean(), color As Color32, z As Integer = -2147483648) As Cell()
  overload: AngeliA.Renderer.DrawSlice*
  nameWithType.vb: Renderer.DrawSlice(SpriteCode, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Boolean(), Color32, Integer)
  fullName.vb: AngeliA.Renderer.DrawSlice(AngeliA.SpriteCode, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Boolean(), AngeliA.Color32, Integer)
  name.vb: DrawSlice(SpriteCode, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Boolean(), Color32, Integer)
- uid: AngeliA.Renderer.DrawSlice(AngeliA.AngeSprite,AngeliA.IRect)
  commentId: M:AngeliA.Renderer.DrawSlice(AngeliA.AngeSprite,AngeliA.IRect)
  id: DrawSlice(AngeliA.AngeSprite,AngeliA.IRect)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: DrawSlice(AngeSprite, IRect)
  nameWithType: Renderer.DrawSlice(AngeSprite, IRect)
  fullName: AngeliA.Renderer.DrawSlice(AngeliA.AngeSprite, AngeliA.IRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawSlice
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 741
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Proportionally scale the sprite by dividing it into nine sections, protecting the corners and scaling/tiling the edges and center to maintain the image's integrity and prevent distortion.
  example: []
  syntax:
    content: public static Cell[] DrawSlice(AngeSprite sprite, IRect rect)
    parameters:
    - id: sprite
      type: AngeliA.AngeSprite
      description: Artwork sprite
    - id: rect
      type: AngeliA.IRect
      description: Rect position in global space
    return:
      type: AngeliA.Cell[]
      description: 9 Rendering cells for this sprite
    content.vb: Public Shared Function DrawSlice(sprite As AngeSprite, rect As IRect) As Cell()
  overload: AngeliA.Renderer.DrawSlice*
- uid: AngeliA.Renderer.DrawSlice(AngeliA.AngeSprite,AngeliA.IRect,AngeliA.Color32,System.Int32)
  commentId: M:AngeliA.Renderer.DrawSlice(AngeliA.AngeSprite,AngeliA.IRect,AngeliA.Color32,System.Int32)
  id: DrawSlice(AngeliA.AngeSprite,AngeliA.IRect,AngeliA.Color32,System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: DrawSlice(AngeSprite, IRect, Color32, int)
  nameWithType: Renderer.DrawSlice(AngeSprite, IRect, Color32, int)
  fullName: AngeliA.Renderer.DrawSlice(AngeliA.AngeSprite, AngeliA.IRect, AngeliA.Color32, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawSlice
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 743
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Proportionally scale the sprite by dividing it into nine sections, protecting the corners and scaling/tiling the edges and center to maintain the image's integrity and prevent distortion.
  example: []
  syntax:
    content: public static Cell[] DrawSlice(AngeSprite sprite, IRect rect, Color32 color, int z = -2147483648)
    parameters:
    - id: sprite
      type: AngeliA.AngeSprite
      description: Artwork sprite
    - id: rect
      type: AngeliA.IRect
      description: Rect position in global space
    - id: color
      type: AngeliA.Color32
      description: Color tint
    - id: z
      type: System.Int32
      description: Z value for sorting rendering cells
    return:
      type: AngeliA.Cell[]
      description: 9 Rendering cells for this sprite
    content.vb: Public Shared Function DrawSlice(sprite As AngeSprite, rect As IRect, color As Color32, z As Integer = -2147483648) As Cell()
  overload: AngeliA.Renderer.DrawSlice*
  nameWithType.vb: Renderer.DrawSlice(AngeSprite, IRect, Color32, Integer)
  fullName.vb: AngeliA.Renderer.DrawSlice(AngeliA.AngeSprite, AngeliA.IRect, AngeliA.Color32, Integer)
  name.vb: DrawSlice(AngeSprite, IRect, Color32, Integer)
- uid: AngeliA.Renderer.DrawSlice(AngeliA.AngeSprite,AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Renderer.DrawSlice(AngeliA.AngeSprite,AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: DrawSlice(AngeliA.AngeSprite,AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: DrawSlice(AngeSprite, IRect, int, int, int, int, int)
  nameWithType: Renderer.DrawSlice(AngeSprite, IRect, int, int, int, int, int)
  fullName: AngeliA.Renderer.DrawSlice(AngeliA.AngeSprite, AngeliA.IRect, int, int, int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawSlice
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 745
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Proportionally scale the sprite by dividing it into nine sections, protecting the corners and scaling/tiling the edges and center to maintain the image's integrity and prevent distortion.
  example: []
  syntax:
    content: public static Cell[] DrawSlice(AngeSprite sprite, IRect rect, int borderL, int borderR, int borderD, int borderU, int z = -2147483648)
    parameters:
    - id: sprite
      type: AngeliA.AngeSprite
      description: Artwork sprite
    - id: rect
      type: AngeliA.IRect
      description: Rect position in global space
    - id: borderL
      type: System.Int32
      description: Padding left in global space
    - id: borderR
      type: System.Int32
      description: Padding right in global space
    - id: borderD
      type: System.Int32
      description: Padding down in global space
    - id: borderU
      type: System.Int32
      description: Padding up in global space
    - id: z
      type: System.Int32
      description: Z value for sorting rendering cells
    return:
      type: AngeliA.Cell[]
      description: 9 Rendering cells for this sprite
    content.vb: Public Shared Function DrawSlice(sprite As AngeSprite, rect As IRect, borderL As Integer, borderR As Integer, borderD As Integer, borderU As Integer, z As Integer = -2147483648) As Cell()
  overload: AngeliA.Renderer.DrawSlice*
  nameWithType.vb: Renderer.DrawSlice(AngeSprite, IRect, Integer, Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.Renderer.DrawSlice(AngeliA.AngeSprite, AngeliA.IRect, Integer, Integer, Integer, Integer, Integer)
  name.vb: DrawSlice(AngeSprite, IRect, Integer, Integer, Integer, Integer, Integer)
- uid: AngeliA.Renderer.DrawSlice(AngeliA.AngeSprite,AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  commentId: M:AngeliA.Renderer.DrawSlice(AngeliA.AngeSprite,AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  id: DrawSlice(AngeliA.AngeSprite,AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: DrawSlice(AngeSprite, IRect, int, int, int, int, Color32, int)
  nameWithType: Renderer.DrawSlice(AngeSprite, IRect, int, int, int, int, Color32, int)
  fullName: AngeliA.Renderer.DrawSlice(AngeliA.AngeSprite, AngeliA.IRect, int, int, int, int, AngeliA.Color32, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawSlice
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 747
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Proportionally scale the sprite by dividing it into nine sections, protecting the corners and scaling/tiling the edges and center to maintain the image's integrity and prevent distortion.
  example: []
  syntax:
    content: public static Cell[] DrawSlice(AngeSprite sprite, IRect rect, int borderL, int borderR, int borderD, int borderU, Color32 color, int z = -2147483648)
    parameters:
    - id: sprite
      type: AngeliA.AngeSprite
      description: Artwork sprite
    - id: rect
      type: AngeliA.IRect
      description: Rect position in global space
    - id: borderL
      type: System.Int32
      description: Padding left in global space
    - id: borderR
      type: System.Int32
      description: Padding right in global space
    - id: borderD
      type: System.Int32
      description: Padding down in global space
    - id: borderU
      type: System.Int32
      description: Padding up in global space
    - id: color
      type: AngeliA.Color32
      description: Color tint
    - id: z
      type: System.Int32
      description: Z value for sorting rendering cells
    return:
      type: AngeliA.Cell[]
      description: 9 Rendering cells for this sprite
    content.vb: Public Shared Function DrawSlice(sprite As AngeSprite, rect As IRect, borderL As Integer, borderR As Integer, borderD As Integer, borderU As Integer, color As Color32, z As Integer = -2147483648) As Cell()
  overload: AngeliA.Renderer.DrawSlice*
  nameWithType.vb: Renderer.DrawSlice(AngeSprite, IRect, Integer, Integer, Integer, Integer, Color32, Integer)
  fullName.vb: AngeliA.Renderer.DrawSlice(AngeliA.AngeSprite, AngeliA.IRect, Integer, Integer, Integer, Integer, AngeliA.Color32, Integer)
  name.vb: DrawSlice(AngeSprite, IRect, Integer, Integer, Integer, Integer, Color32, Integer)
- uid: AngeliA.Renderer.DrawSlice(AngeliA.AngeSprite,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Renderer.DrawSlice(AngeliA.AngeSprite,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: DrawSlice(AngeliA.AngeSprite,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: DrawSlice(AngeSprite, int, int, int, int, int, int, int, int)
  nameWithType: Renderer.DrawSlice(AngeSprite, int, int, int, int, int, int, int, int)
  fullName: AngeliA.Renderer.DrawSlice(AngeliA.AngeSprite, int, int, int, int, int, int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawSlice
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 749
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Proportionally scale the sprite by dividing it into nine sections, protecting the corners and scaling/tiling the edges and center to maintain the image's integrity and prevent distortion.
  example: []
  syntax:
    content: public static Cell[] DrawSlice(AngeSprite sprite, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int z = -2147483648)
    parameters:
    - id: sprite
      type: AngeliA.AngeSprite
      description: Artwork sprite
    - id: x
      type: System.Int32
      description: Position in global space
    - id: y
      type: System.Int32
      description: Position in global space
    - id: pivotX
      type: System.Int32
      description: 0 means "x" align with left edge. 1000 means "x" align with right edge.
    - id: pivotY
      type: System.Int32
      description: 0 means "y" align with bottom edge. 1000 means "y" align with top edge.
    - id: rotation
      type: System.Int32
      description: Rotation in degree. 90 means facing right.
    - id: width
      type: System.Int32
      description: Size in global space
    - id: height
      type: System.Int32
      description: Size in global space
    - id: z
      type: System.Int32
      description: Z value for sorting rendering cells
    return:
      type: AngeliA.Cell[]
      description: 9 Rendering cells for this sprite
    content.vb: Public Shared Function DrawSlice(sprite As AngeSprite, x As Integer, y As Integer, pivotX As Integer, pivotY As Integer, rotation As Integer, width As Integer, height As Integer, z As Integer = -2147483648) As Cell()
  overload: AngeliA.Renderer.DrawSlice*
  nameWithType.vb: Renderer.DrawSlice(AngeSprite, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.Renderer.DrawSlice(AngeliA.AngeSprite, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
  name.vb: DrawSlice(AngeSprite, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
- uid: AngeliA.Renderer.DrawSlice(AngeliA.AngeSprite,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  commentId: M:AngeliA.Renderer.DrawSlice(AngeliA.AngeSprite,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  id: DrawSlice(AngeliA.AngeSprite,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: DrawSlice(AngeSprite, int, int, int, int, int, int, int, Color32, int)
  nameWithType: Renderer.DrawSlice(AngeSprite, int, int, int, int, int, int, int, Color32, int)
  fullName: AngeliA.Renderer.DrawSlice(AngeliA.AngeSprite, int, int, int, int, int, int, int, AngeliA.Color32, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawSlice
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 751
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Proportionally scale the sprite by dividing it into nine sections, protecting the corners and scaling/tiling the edges and center to maintain the image's integrity and prevent distortion.
  example: []
  syntax:
    content: public static Cell[] DrawSlice(AngeSprite sprite, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, Color32 color, int z = -2147483648)
    parameters:
    - id: sprite
      type: AngeliA.AngeSprite
      description: Artwork sprite
    - id: x
      type: System.Int32
      description: Position in global space
    - id: y
      type: System.Int32
      description: Position in global space
    - id: pivotX
      type: System.Int32
      description: 0 means "x" align with left edge. 1000 means "x" align with right edge.
    - id: pivotY
      type: System.Int32
      description: 0 means "y" align with bottom edge. 1000 means "y" align with top edge.
    - id: rotation
      type: System.Int32
      description: Rotation in degree. 90 means facing right.
    - id: width
      type: System.Int32
      description: Size in global space
    - id: height
      type: System.Int32
      description: Size in global space
    - id: color
      type: AngeliA.Color32
      description: Color tint
    - id: z
      type: System.Int32
      description: Z value for sorting rendering cells
    return:
      type: AngeliA.Cell[]
      description: 9 Rendering cells for this sprite
    content.vb: Public Shared Function DrawSlice(sprite As AngeSprite, x As Integer, y As Integer, pivotX As Integer, pivotY As Integer, rotation As Integer, width As Integer, height As Integer, color As Color32, z As Integer = -2147483648) As Cell()
  overload: AngeliA.Renderer.DrawSlice*
  nameWithType.vb: Renderer.DrawSlice(AngeSprite, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Color32, Integer)
  fullName.vb: AngeliA.Renderer.DrawSlice(AngeliA.AngeSprite, Integer, Integer, Integer, Integer, Integer, Integer, Integer, AngeliA.Color32, Integer)
  name.vb: DrawSlice(AngeSprite, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Color32, Integer)
- uid: AngeliA.Renderer.DrawSlice(AngeliA.AngeSprite,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Renderer.DrawSlice(AngeliA.AngeSprite,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: DrawSlice(AngeliA.AngeSprite,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: DrawSlice(AngeSprite, int, int, int, int, int, int, int, int, int, int, int, int)
  nameWithType: Renderer.DrawSlice(AngeSprite, int, int, int, int, int, int, int, int, int, int, int, int)
  fullName: AngeliA.Renderer.DrawSlice(AngeliA.AngeSprite, int, int, int, int, int, int, int, int, int, int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawSlice
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 760
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Proportionally scale the sprite by dividing it into nine sections, protecting the corners and scaling/tiling the edges and center to maintain the image's integrity and prevent distortion.
  example: []
  syntax:
    content: public static Cell[] DrawSlice(AngeSprite sprite, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int borderL, int borderR, int borderD, int borderU, int z = -2147483648)
    parameters:
    - id: sprite
      type: AngeliA.AngeSprite
      description: Artwork sprite
    - id: x
      type: System.Int32
      description: Position in global space
    - id: y
      type: System.Int32
      description: Position in global space
    - id: pivotX
      type: System.Int32
      description: 0 means "x" align with left edge. 1000 means "x" align with right edge.
    - id: pivotY
      type: System.Int32
      description: 0 means "y" align with bottom edge. 1000 means "y" align with top edge.
    - id: rotation
      type: System.Int32
      description: Rotation in degree. 90 means facing right.
    - id: width
      type: System.Int32
      description: Size in global space
    - id: height
      type: System.Int32
      description: Size in global space
    - id: borderL
      type: System.Int32
      description: Padding left in global space
    - id: borderR
      type: System.Int32
      description: Padding right in global space
    - id: borderD
      type: System.Int32
      description: Padding down in global space
    - id: borderU
      type: System.Int32
      description: Padding up in global space
    - id: z
      type: System.Int32
      description: Z value for sorting rendering cells
    return:
      type: AngeliA.Cell[]
      description: 9 Rendering cells for this sprite
    content.vb: Public Shared Function DrawSlice(sprite As AngeSprite, x As Integer, y As Integer, pivotX As Integer, pivotY As Integer, rotation As Integer, width As Integer, height As Integer, borderL As Integer, borderR As Integer, borderD As Integer, borderU As Integer, z As Integer = -2147483648) As Cell()
  overload: AngeliA.Renderer.DrawSlice*
  nameWithType.vb: Renderer.DrawSlice(AngeSprite, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.Renderer.DrawSlice(AngeliA.AngeSprite, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
  name.vb: DrawSlice(AngeSprite, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
- uid: AngeliA.Renderer.DrawSlice(AngeliA.AngeSprite,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  commentId: M:AngeliA.Renderer.DrawSlice(AngeliA.AngeSprite,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  id: DrawSlice(AngeliA.AngeSprite,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: DrawSlice(AngeSprite, int, int, int, int, int, int, int, int, int, int, int, Color32, int)
  nameWithType: Renderer.DrawSlice(AngeSprite, int, int, int, int, int, int, int, int, int, int, int, Color32, int)
  fullName: AngeliA.Renderer.DrawSlice(AngeliA.AngeSprite, int, int, int, int, int, int, int, int, int, int, int, AngeliA.Color32, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawSlice
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 762
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Proportionally scale the sprite by dividing it into nine sections, protecting the corners and scaling/tiling the edges and center to maintain the image's integrity and prevent distortion.
  example: []
  syntax:
    content: public static Cell[] DrawSlice(AngeSprite sprite, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int borderL, int borderR, int borderD, int borderU, Color32 color, int z = -2147483648)
    parameters:
    - id: sprite
      type: AngeliA.AngeSprite
      description: Artwork sprite
    - id: x
      type: System.Int32
      description: Position in global space
    - id: y
      type: System.Int32
      description: Position in global space
    - id: pivotX
      type: System.Int32
      description: 0 means "x" align with left edge. 1000 means "x" align with right edge.
    - id: pivotY
      type: System.Int32
      description: 0 means "y" align with bottom edge. 1000 means "y" align with top edge.
    - id: rotation
      type: System.Int32
      description: Rotation in degree. 90 means facing right.
    - id: width
      type: System.Int32
      description: Size in global space
    - id: height
      type: System.Int32
      description: Size in global space
    - id: borderL
      type: System.Int32
      description: Padding left in global space
    - id: borderR
      type: System.Int32
      description: Padding right in global space
    - id: borderD
      type: System.Int32
      description: Padding down in global space
    - id: borderU
      type: System.Int32
      description: Padding up in global space
    - id: color
      type: AngeliA.Color32
      description: Color tint
    - id: z
      type: System.Int32
      description: Z value for sorting rendering cells
    return:
      type: AngeliA.Cell[]
      description: 9 Rendering cells for this sprite
    content.vb: Public Shared Function DrawSlice(sprite As AngeSprite, x As Integer, y As Integer, pivotX As Integer, pivotY As Integer, rotation As Integer, width As Integer, height As Integer, borderL As Integer, borderR As Integer, borderD As Integer, borderU As Integer, color As Color32, z As Integer = -2147483648) As Cell()
  overload: AngeliA.Renderer.DrawSlice*
  nameWithType.vb: Renderer.DrawSlice(AngeSprite, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Color32, Integer)
  fullName.vb: AngeliA.Renderer.DrawSlice(AngeliA.AngeSprite, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, AngeliA.Color32, Integer)
  name.vb: DrawSlice(AngeSprite, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Color32, Integer)
- uid: AngeliA.Renderer.DrawSlice(AngeliA.AngeSprite,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean[],AngeliA.Color32,System.Int32)
  commentId: M:AngeliA.Renderer.DrawSlice(AngeliA.AngeSprite,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean[],AngeliA.Color32,System.Int32)
  id: DrawSlice(AngeliA.AngeSprite,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean[],AngeliA.Color32,System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: DrawSlice(AngeSprite, int, int, int, int, int, int, int, int, int, int, int, bool[], Color32, int)
  nameWithType: Renderer.DrawSlice(AngeSprite, int, int, int, int, int, int, int, int, int, int, int, bool[], Color32, int)
  fullName: AngeliA.Renderer.DrawSlice(AngeliA.AngeSprite, int, int, int, int, int, int, int, int, int, int, int, bool[], AngeliA.Color32, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawSlice
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 784
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Proportionally scale the sprite by dividing it into nine sections, protecting the corners and scaling/tiling the edges and center to maintain the image's integrity and prevent distortion.
  example: []
  syntax:
    content: public static Cell[] DrawSlice(AngeSprite sprite, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int borderL, int borderR, int borderD, int borderU, bool[] partIgnore, Color32 color, int z)
    parameters:
    - id: sprite
      type: AngeliA.AngeSprite
      description: Artwork sprite
    - id: x
      type: System.Int32
      description: Position in global space
    - id: y
      type: System.Int32
      description: Position in global space
    - id: pivotX
      type: System.Int32
      description: 0 means "x" align with left edge. 1000 means "x" align with right edge.
    - id: pivotY
      type: System.Int32
      description: 0 means "y" align with bottom edge. 1000 means "y" align with top edge.
    - id: rotation
      type: System.Int32
      description: Rotation in degree. 90 means facing right.
    - id: width
      type: System.Int32
      description: Size in global space
    - id: height
      type: System.Int32
      description: Size in global space
    - id: borderL
      type: System.Int32
      description: Padding left in global space
    - id: borderR
      type: System.Int32
      description: Padding right in global space
    - id: borderD
      type: System.Int32
      description: Padding down in global space
    - id: borderU
      type: System.Int32
      description: Padding up in global space
    - id: partIgnore
      type: System.Boolean[]
      description: Which part should be ignored. Set to true to exclude that part.
    - id: color
      type: AngeliA.Color32
      description: Color tint
    - id: z
      type: System.Int32
      description: Z value for sorting rendering cells
    return:
      type: AngeliA.Cell[]
      description: 9 Rendering cells for this sprite
    content.vb: Public Shared Function DrawSlice(sprite As AngeSprite, x As Integer, y As Integer, pivotX As Integer, pivotY As Integer, rotation As Integer, width As Integer, height As Integer, borderL As Integer, borderR As Integer, borderD As Integer, borderU As Integer, partIgnore As Boolean(), color As Color32, z As Integer) As Cell()
  overload: AngeliA.Renderer.DrawSlice*
  nameWithType.vb: Renderer.DrawSlice(AngeSprite, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Boolean(), Color32, Integer)
  fullName.vb: AngeliA.Renderer.DrawSlice(AngeliA.AngeSprite, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Boolean(), AngeliA.Color32, Integer)
  name.vb: DrawSlice(AngeSprite, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Boolean(), Color32, Integer)
- uid: AngeliA.Renderer.GetAnimationGroupDuration(System.Int32)
  commentId: M:AngeliA.Renderer.GetAnimationGroupDuration(System.Int32)
  id: GetAnimationGroupDuration(System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: GetAnimationGroupDuration(int)
  nameWithType: Renderer.GetAnimationGroupDuration(int)
  fullName: AngeliA.Renderer.GetAnimationGroupDuration(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetAnimationGroupDuration
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 953
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get total duration in frame of an animation group
  example: []
  syntax:
    content: public static int GetAnimationGroupDuration(int chainID)
    parameters:
    - id: chainID
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function GetAnimationGroupDuration(chainID As Integer) As Integer
  overload: AngeliA.Renderer.GetAnimationGroupDuration*
  nameWithType.vb: Renderer.GetAnimationGroupDuration(Integer)
  fullName.vb: AngeliA.Renderer.GetAnimationGroupDuration(Integer)
  name.vb: GetAnimationGroupDuration(Integer)
- uid: AngeliA.Renderer.GetAnimationGroupDuration(AngeliA.SpriteGroup)
  commentId: M:AngeliA.Renderer.GetAnimationGroupDuration(AngeliA.SpriteGroup)
  id: GetAnimationGroupDuration(AngeliA.SpriteGroup)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: GetAnimationGroupDuration(SpriteGroup)
  nameWithType: Renderer.GetAnimationGroupDuration(SpriteGroup)
  fullName: AngeliA.Renderer.GetAnimationGroupDuration(AngeliA.SpriteGroup)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetAnimationGroupDuration
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 961
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get total duration in frame of an animation group
  example: []
  syntax:
    content: public static int GetAnimationGroupDuration(SpriteGroup group)
    parameters:
    - id: group
      type: AngeliA.SpriteGroup
    return:
      type: System.Int32
    content.vb: Public Shared Function GetAnimationGroupDuration(group As SpriteGroup) As Integer
  overload: AngeliA.Renderer.GetAnimationGroupDuration*
- uid: AngeliA.Renderer.DrawAnimation(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Renderer.DrawAnimation(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: DrawAnimation(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: DrawAnimation(int, int, int, int, int, int, int, int, int, int)
  nameWithType: Renderer.DrawAnimation(int, int, int, int, int, int, int, int, int, int)
  fullName: AngeliA.Renderer.DrawAnimation(int, int, int, int, int, int, int, int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawAnimation
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 965
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Draw the given animation into using render layer
  example: []
  syntax:
    content: public static Cell DrawAnimation(int chainID, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int frame, int z = -2147483648)
    parameters:
    - id: chainID
      type: System.Int32
    - id: x
      type: System.Int32
      description: Position in global space
    - id: y
      type: System.Int32
      description: Position in global space
    - id: pivotX
      type: System.Int32
      description: 0 means "x" align with left edge. 1000 means "x" align with right edge.
    - id: pivotY
      type: System.Int32
      description: 0 means "y" align with bottom edge. 1000 means "y" align with top edge.
    - id: rotation
      type: System.Int32
      description: Rotation in degree. 90 means facing right.
    - id: width
      type: System.Int32
      description: Size in global space
    - id: height
      type: System.Int32
      description: Size in global space
    - id: frame
      type: System.Int32
      description: Animation frame
    - id: z
      type: System.Int32
      description: Z value for sorting rendering cells
    return:
      type: AngeliA.Cell
      description: Rendering cell for this sprite
    content.vb: Public Shared Function DrawAnimation(chainID As Integer, x As Integer, y As Integer, pivotX As Integer, pivotY As Integer, rotation As Integer, width As Integer, height As Integer, frame As Integer, z As Integer = -2147483648) As Cell
  overload: AngeliA.Renderer.DrawAnimation*
  nameWithType.vb: Renderer.DrawAnimation(Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.Renderer.DrawAnimation(Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
  name.vb: DrawAnimation(Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
- uid: AngeliA.Renderer.DrawAnimation(AngeliA.SpriteGroup,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Renderer.DrawAnimation(AngeliA.SpriteGroup,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: DrawAnimation(AngeliA.SpriteGroup,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: DrawAnimation(SpriteGroup, int, int, int, int, int, int, int, int, int)
  nameWithType: Renderer.DrawAnimation(SpriteGroup, int, int, int, int, int, int, int, int, int)
  fullName: AngeliA.Renderer.DrawAnimation(AngeliA.SpriteGroup, int, int, int, int, int, int, int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawAnimation
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 983
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Draw the given animation into using render layer
  example: []
  syntax:
    content: public static Cell DrawAnimation(SpriteGroup group, int x, int y, int pivotX, int pivotY, int rotation, int width, int height, int frame, int z = -2147483648)
    parameters:
    - id: group
      type: AngeliA.SpriteGroup
      description: ''
    - id: x
      type: System.Int32
      description: Position in global space
    - id: y
      type: System.Int32
      description: Position in global space
    - id: pivotX
      type: System.Int32
      description: 0 means "x" align with left edge. 1000 means "x" align with right edge.
    - id: pivotY
      type: System.Int32
      description: 0 means "y" align with bottom edge. 1000 means "y" align with top edge.
    - id: rotation
      type: System.Int32
      description: Rotation in degree. 90 means facing right.
    - id: width
      type: System.Int32
      description: Size in global space
    - id: height
      type: System.Int32
      description: Size in global space
    - id: frame
      type: System.Int32
      description: Animation frame
    - id: z
      type: System.Int32
      description: Z value for sorting rendering cells
    return:
      type: AngeliA.Cell
      description: Rendering cell for this sprite
    content.vb: Public Shared Function DrawAnimation(group As SpriteGroup, x As Integer, y As Integer, pivotX As Integer, pivotY As Integer, rotation As Integer, width As Integer, height As Integer, frame As Integer, z As Integer = -2147483648) As Cell
  overload: AngeliA.Renderer.DrawAnimation*
  nameWithType.vb: Renderer.DrawAnimation(SpriteGroup, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.Renderer.DrawAnimation(AngeliA.SpriteGroup, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
  name.vb: DrawAnimation(SpriteGroup, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
- uid: AngeliA.Renderer.HasSprite(System.Int32)
  commentId: M:AngeliA.Renderer.HasSprite(System.Int32)
  id: HasSprite(System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: HasSprite(int)
  nameWithType: Renderer.HasSprite(int)
  fullName: AngeliA.Renderer.HasSprite(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: HasSprite
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 995
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: True if sprite with given ID is founded
  example: []
  syntax:
    content: public static bool HasSprite(int globalID)
    parameters:
    - id: globalID
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function HasSprite(globalID As Integer) As Boolean
  overload: AngeliA.Renderer.HasSprite*
  nameWithType.vb: Renderer.HasSprite(Integer)
  fullName.vb: AngeliA.Renderer.HasSprite(Integer)
  name.vb: HasSprite(Integer)
- uid: AngeliA.Renderer.HasSpriteGroup(System.Int32)
  commentId: M:AngeliA.Renderer.HasSpriteGroup(System.Int32)
  id: HasSpriteGroup(System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: HasSpriteGroup(int)
  nameWithType: Renderer.HasSpriteGroup(int)
  fullName: AngeliA.Renderer.HasSpriteGroup(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: HasSpriteGroup
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 1001
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: True if sprite group with given ID is founded
  example: []
  syntax:
    content: public static bool HasSpriteGroup(int groupID)
    parameters:
    - id: groupID
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function HasSpriteGroup(groupID As Integer) As Boolean
  overload: AngeliA.Renderer.HasSpriteGroup*
  nameWithType.vb: Renderer.HasSpriteGroup(Integer)
  fullName.vb: AngeliA.Renderer.HasSpriteGroup(Integer)
  name.vb: HasSpriteGroup(Integer)
- uid: AngeliA.Renderer.HasSpriteGroup(System.Int32,System.Int32@)
  commentId: M:AngeliA.Renderer.HasSpriteGroup(System.Int32,System.Int32@)
  id: HasSpriteGroup(System.Int32,System.Int32@)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: HasSpriteGroup(int, out int)
  nameWithType: Renderer.HasSpriteGroup(int, out int)
  fullName: AngeliA.Renderer.HasSpriteGroup(int, out int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: HasSpriteGroup
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 1007
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: True if sprite group with given ID is founded
  example: []
  syntax:
    content: public static bool HasSpriteGroup(int groupID, out int groupLength)
    parameters:
    - id: groupID
      type: System.Int32
      description: ''
    - id: groupLength
      type: System.Int32
      description: ''
    return:
      type: System.Boolean
    content.vb: Public Shared Function HasSpriteGroup(groupID As Integer, groupLength As Integer) As Boolean
  overload: AngeliA.Renderer.HasSpriteGroup*
  nameWithType.vb: Renderer.HasSpriteGroup(Integer, Integer)
  fullName.vb: AngeliA.Renderer.HasSpriteGroup(Integer, Integer)
  name.vb: HasSpriteGroup(Integer, Integer)
- uid: AngeliA.Renderer.TryGetSprite(System.Int32,AngeliA.AngeSprite@,System.Boolean)
  commentId: M:AngeliA.Renderer.TryGetSprite(System.Int32,AngeliA.AngeSprite@,System.Boolean)
  id: TryGetSprite(System.Int32,AngeliA.AngeSprite@,System.Boolean)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: TryGetSprite(int, out AngeSprite, bool)
  nameWithType: Renderer.TryGetSprite(int, out AngeSprite, bool)
  fullName: AngeliA.Renderer.TryGetSprite(int, out AngeliA.AngeSprite, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TryGetSprite
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 1025
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get instance of sprite
  example: []
  syntax:
    content: public static bool TryGetSprite(int globalID, out AngeSprite sprite, bool ignoreAnimation = true)
    parameters:
    - id: globalID
      type: System.Int32
      description: ''
    - id: sprite
      type: AngeliA.AngeSprite
      description: ''
    - id: ignoreAnimation
      type: System.Boolean
      description: True if ignore animation group with "globalID" as chainID
    return:
      type: System.Boolean
      description: True if sprite founded
    content.vb: Public Shared Function TryGetSprite(globalID As Integer, sprite As AngeSprite, ignoreAnimation As Boolean = True) As Boolean
  overload: AngeliA.Renderer.TryGetSprite*
  nameWithType.vb: Renderer.TryGetSprite(Integer, AngeSprite, Boolean)
  fullName.vb: AngeliA.Renderer.TryGetSprite(Integer, AngeliA.AngeSprite, Boolean)
  name.vb: TryGetSprite(Integer, AngeSprite, Boolean)
- uid: AngeliA.Renderer.TryGetAnimationGroup(System.Int32,AngeliA.SpriteGroup@)
  commentId: M:AngeliA.Renderer.TryGetAnimationGroup(System.Int32,AngeliA.SpriteGroup@)
  id: TryGetAnimationGroup(System.Int32,AngeliA.SpriteGroup@)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: TryGetAnimationGroup(int, out SpriteGroup)
  nameWithType: Renderer.TryGetAnimationGroup(int, out SpriteGroup)
  fullName: AngeliA.Renderer.TryGetAnimationGroup(int, out AngeliA.SpriteGroup)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TryGetAnimationGroup
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 1042
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get instance of animation group
  example: []
  syntax:
    content: public static bool TryGetAnimationGroup(int groupID, out SpriteGroup group)
    parameters:
    - id: groupID
      type: System.Int32
      description: ''
    - id: group
      type: AngeliA.SpriteGroup
      description: ''
    return:
      type: System.Boolean
      description: True if animation group founded
    content.vb: Public Shared Function TryGetAnimationGroup(groupID As Integer, group As SpriteGroup) As Boolean
  overload: AngeliA.Renderer.TryGetAnimationGroup*
  nameWithType.vb: Renderer.TryGetAnimationGroup(Integer, SpriteGroup)
  fullName.vb: AngeliA.Renderer.TryGetAnimationGroup(Integer, AngeliA.SpriteGroup)
  name.vb: TryGetAnimationGroup(Integer, SpriteGroup)
- uid: AngeliA.Renderer.TryGetSpriteGroup(System.Int32,AngeliA.SpriteGroup@)
  commentId: M:AngeliA.Renderer.TryGetSpriteGroup(System.Int32,AngeliA.SpriteGroup@)
  id: TryGetSpriteGroup(System.Int32,AngeliA.SpriteGroup@)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: TryGetSpriteGroup(int, out SpriteGroup)
  nameWithType: Renderer.TryGetSpriteGroup(int, out SpriteGroup)
  fullName: AngeliA.Renderer.TryGetSpriteGroup(int, out AngeliA.SpriteGroup)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TryGetSpriteGroup
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 1051
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get instance of sprite group
  example: []
  syntax:
    content: public static bool TryGetSpriteGroup(int groupID, out SpriteGroup group)
    parameters:
    - id: groupID
      type: System.Int32
      description: ''
    - id: group
      type: AngeliA.SpriteGroup
      description: ''
    return:
      type: System.Boolean
      description: True if sprite group founded
    content.vb: Public Shared Function TryGetSpriteGroup(groupID As Integer, group As SpriteGroup) As Boolean
  overload: AngeliA.Renderer.TryGetSpriteGroup*
  nameWithType.vb: Renderer.TryGetSpriteGroup(Integer, SpriteGroup)
  fullName.vb: AngeliA.Renderer.TryGetSpriteGroup(Integer, AngeliA.SpriteGroup)
  name.vb: TryGetSpriteGroup(Integer, SpriteGroup)
- uid: AngeliA.Renderer.TryGetSpriteFromGroup(System.Int32,System.Int32,AngeliA.AngeSprite@,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:AngeliA.Renderer.TryGetSpriteFromGroup(System.Int32,System.Int32,AngeliA.AngeSprite@,System.Boolean,System.Boolean,System.Boolean)
  id: TryGetSpriteFromGroup(System.Int32,System.Int32,AngeliA.AngeSprite@,System.Boolean,System.Boolean,System.Boolean)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: TryGetSpriteFromGroup(int, int, out AngeSprite, bool, bool, bool)
  nameWithType: Renderer.TryGetSpriteFromGroup(int, int, out AngeSprite, bool, bool, bool)
  fullName: AngeliA.Renderer.TryGetSpriteFromGroup(int, int, out AngeliA.AngeSprite, bool, bool, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TryGetSpriteFromGroup
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 1064
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get sprite instance from given group ID and index
  example: []
  syntax:
    content: public static bool TryGetSpriteFromGroup(int groupID, int index, out AngeSprite sprite, bool loopIndex = true, bool clampIndex = true, bool ignoreAnimatedWhenFailback = true)
    parameters:
    - id: groupID
      type: System.Int32
      description: ''
    - id: index
      type: System.Int32
      description: ''
    - id: sprite
      type: AngeliA.AngeSprite
      description: ''
    - id: loopIndex
      type: System.Boolean
      description: True if the index loop
    - id: clampIndex
      type: System.Boolean
      description: True if clamp the index when out of range
    - id: ignoreAnimatedWhenFailback
      type: System.Boolean
      description: True if don't use animated sprite when returning the failback sprite
    return:
      type: System.Boolean
      description: True if sprite founded
    content.vb: Public Shared Function TryGetSpriteFromGroup(groupID As Integer, index As Integer, sprite As AngeSprite, loopIndex As Boolean = True, clampIndex As Boolean = True, ignoreAnimatedWhenFailback As Boolean = True) As Boolean
  overload: AngeliA.Renderer.TryGetSpriteFromGroup*
  nameWithType.vb: Renderer.TryGetSpriteFromGroup(Integer, Integer, AngeSprite, Boolean, Boolean, Boolean)
  fullName.vb: AngeliA.Renderer.TryGetSpriteFromGroup(Integer, Integer, AngeliA.AngeSprite, Boolean, Boolean, Boolean)
  name.vb: TryGetSpriteFromGroup(Integer, Integer, AngeSprite, Boolean, Boolean, Boolean)
- uid: AngeliA.Renderer.TryGetSpriteForGizmos(System.Int32,AngeliA.AngeSprite@)
  commentId: M:AngeliA.Renderer.TryGetSpriteForGizmos(System.Int32,AngeliA.AngeSprite@)
  id: TryGetSpriteForGizmos(System.Int32,AngeliA.AngeSprite@)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: TryGetSpriteForGizmos(int, out AngeSprite)
  nameWithType: Renderer.TryGetSpriteForGizmos(int, out AngeSprite)
  fullName: AngeliA.Renderer.TryGetSpriteForGizmos(int, out AngeliA.AngeSprite)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TryGetSpriteForGizmos
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 1087
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get sprite for rendering UI/icon/gizmos
  example: []
  syntax:
    content: public static bool TryGetSpriteForGizmos(int artworkID, out AngeSprite sprite)
    parameters:
    - id: artworkID
      type: System.Int32
      description: ''
    - id: sprite
      type: AngeliA.AngeSprite
      description: ''
    return:
      type: System.Boolean
      description: True if sprite founded
    content.vb: Public Shared Function TryGetSpriteForGizmos(artworkID As Integer, sprite As AngeSprite) As Boolean
  overload: AngeliA.Renderer.TryGetSpriteForGizmos*
  nameWithType.vb: Renderer.TryGetSpriteForGizmos(Integer, AngeSprite)
  fullName.vb: AngeliA.Renderer.TryGetSpriteForGizmos(Integer, AngeliA.AngeSprite)
  name.vb: TryGetSpriteForGizmos(Integer, AngeSprite)
- uid: AngeliA.Renderer.ClampCells(AngeliA.IRect,System.Int32,System.Int32)
  commentId: M:AngeliA.Renderer.ClampCells(AngeliA.IRect,System.Int32,System.Int32)
  id: ClampCells(AngeliA.IRect,System.Int32,System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: ClampCells(IRect, int, int)
  nameWithType: Renderer.ClampCells(IRect, int, int)
  fullName: AngeliA.Renderer.ClampCells(AngeliA.IRect, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ClampCells
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 1097
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Clamp cells in using layer inside rect range
  example: []
  syntax:
    content: public static void ClampCells(IRect rect, int startIndex, int endIndex = -1)
    parameters:
    - id: rect
      type: AngeliA.IRect
      description: Target range in global space
    - id: startIndex
      type: System.Int32
      description: ''
    - id: endIndex
      type: System.Int32
      description: (excluded)
    content.vb: Public Shared Sub ClampCells(rect As IRect, startIndex As Integer, endIndex As Integer = -1)
  overload: AngeliA.Renderer.ClampCells*
  nameWithType.vb: Renderer.ClampCells(IRect, Integer, Integer)
  fullName.vb: AngeliA.Renderer.ClampCells(AngeliA.IRect, Integer, Integer)
  name.vb: ClampCells(IRect, Integer, Integer)
- uid: AngeliA.Renderer.ClampCells(System.Int32,AngeliA.IRect,System.Int32,System.Int32)
  commentId: M:AngeliA.Renderer.ClampCells(System.Int32,AngeliA.IRect,System.Int32,System.Int32)
  id: ClampCells(System.Int32,AngeliA.IRect,System.Int32,System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: ClampCells(int, IRect, int, int)
  nameWithType: Renderer.ClampCells(int, IRect, int, int)
  fullName: AngeliA.Renderer.ClampCells(int, AngeliA.IRect, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ClampCells
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 1109
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Clamp cells for given layer inside rect range
  example: []
  syntax:
    content: public static void ClampCells(int layerIndex, IRect rect, int startIndex, int endIndex = -1)
    parameters:
    - id: layerIndex
      type: System.Int32
      description: Use RenderLayer.XXX to get this value
    - id: rect
      type: AngeliA.IRect
      description: Target range in global space
    - id: startIndex
      type: System.Int32
      description: ''
    - id: endIndex
      type: System.Int32
      description: (excluded)
    content.vb: Public Shared Sub ClampCells(layerIndex As Integer, rect As IRect, startIndex As Integer, endIndex As Integer = -1)
  overload: AngeliA.Renderer.ClampCells*
  nameWithType.vb: Renderer.ClampCells(Integer, IRect, Integer, Integer)
  fullName.vb: AngeliA.Renderer.ClampCells(Integer, AngeliA.IRect, Integer, Integer)
  name.vb: ClampCells(Integer, IRect, Integer, Integer)
- uid: AngeliA.Renderer.ClampCells(AngeliA.Cell[],AngeliA.IRect,System.Int32,System.Int32)
  commentId: M:AngeliA.Renderer.ClampCells(AngeliA.Cell[],AngeliA.IRect,System.Int32,System.Int32)
  id: ClampCells(AngeliA.Cell[],AngeliA.IRect,System.Int32,System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: ClampCells(Cell[], IRect, int, int)
  nameWithType: Renderer.ClampCells(Cell[], IRect, int, int)
  fullName: AngeliA.Renderer.ClampCells(AngeliA.Cell[], AngeliA.IRect, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ClampCells
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 1121
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Clamp cells inside rect range
  example: []
  syntax:
    content: public static void ClampCells(Cell[] cells, IRect rect, int startIndex = 0, int endIndex = -1)
    parameters:
    - id: cells
      type: AngeliA.Cell[]
      description: ''
    - id: rect
      type: AngeliA.IRect
      description: Target range in global space
    - id: startIndex
      type: System.Int32
      description: ''
    - id: endIndex
      type: System.Int32
      description: (excluded)
    content.vb: Public Shared Sub ClampCells(cells As Cell(), rect As IRect, startIndex As Integer = 0, endIndex As Integer = -1)
  overload: AngeliA.Renderer.ClampCells*
  nameWithType.vb: Renderer.ClampCells(Cell(), IRect, Integer, Integer)
  fullName.vb: AngeliA.Renderer.ClampCells(AngeliA.Cell(), AngeliA.IRect, Integer, Integer)
  name.vb: ClampCells(Cell(), IRect, Integer, Integer)
- uid: AngeliA.Renderer.GetCells(System.Span{AngeliA.Cell}@,System.Int32@)
  commentId: M:AngeliA.Renderer.GetCells(System.Span{AngeliA.Cell}@,System.Int32@)
  id: GetCells(System.Span{AngeliA.Cell}@,System.Int32@)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: GetCells(out Span<Cell>, out int)
  nameWithType: Renderer.GetCells(out Span<Cell>, out int)
  fullName: AngeliA.Renderer.GetCells(out System.Span<AngeliA.Cell>, out int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetCells
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 1131
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get cells inside using layer
  example: []
  syntax:
    content: public static bool GetCells(out Span<Cell> cells, out int count)
    parameters:
    - id: cells
      type: System.Span{AngeliA.Cell}
      description: ''
    - id: count
      type: System.Int32
      description: ''
    return:
      type: System.Boolean
      description: True if cells founded
    content.vb: Public Shared Function GetCells(cells As Span(Of Cell), count As Integer) As Boolean
  overload: AngeliA.Renderer.GetCells*
  nameWithType.vb: Renderer.GetCells(Span(Of Cell), Integer)
  fullName.vb: AngeliA.Renderer.GetCells(System.Span(Of AngeliA.Cell), Integer)
  name.vb: GetCells(Span(Of Cell), Integer)
- uid: AngeliA.Renderer.GetCells(System.Int32,System.Span{AngeliA.Cell}@,System.Int32@)
  commentId: M:AngeliA.Renderer.GetCells(System.Int32,System.Span{AngeliA.Cell}@,System.Int32@)
  id: GetCells(System.Int32,System.Span{AngeliA.Cell}@,System.Int32@)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: GetCells(int, out Span<Cell>, out int)
  nameWithType: Renderer.GetCells(int, out Span<Cell>, out int)
  fullName: AngeliA.Renderer.GetCells(int, out System.Span<AngeliA.Cell>, out int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetCells
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 1140
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get cells inside given layer
  example: []
  syntax:
    content: public static bool GetCells(int layer, out Span<Cell> cells, out int count)
    parameters:
    - id: layer
      type: System.Int32
      description: Use RenderLayer.XXX to get this value
    - id: cells
      type: System.Span{AngeliA.Cell}
      description: ''
    - id: count
      type: System.Int32
      description: ''
    return:
      type: System.Boolean
      description: True if cells founded
    content.vb: Public Shared Function GetCells(layer As Integer, cells As Span(Of Cell), count As Integer) As Boolean
  overload: AngeliA.Renderer.GetCells*
  nameWithType.vb: Renderer.GetCells(Integer, Span(Of Cell), Integer)
  fullName.vb: AngeliA.Renderer.GetCells(Integer, System.Span(Of AngeliA.Cell), Integer)
  name.vb: GetCells(Integer, Span(Of Cell), Integer)
- uid: AngeliA.Renderer.GetLayerTint(System.Int32)
  commentId: M:AngeliA.Renderer.GetLayerTint(System.Int32)
  id: GetLayerTint(System.Int32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: GetLayerTint(int)
  nameWithType: Renderer.GetLayerTint(int)
  fullName: AngeliA.Renderer.GetLayerTint(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetLayerTint
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 1158
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get current color tint for given layer
  example: []
  syntax:
    content: public static Color32 GetLayerTint(int layer)
    parameters:
    - id: layer
      type: System.Int32
      description: Use RenderLayer.XXX to get this value
    return:
      type: AngeliA.Color32
    content.vb: Public Shared Function GetLayerTint(layer As Integer) As Color32
  overload: AngeliA.Renderer.GetLayerTint*
  nameWithType.vb: Renderer.GetLayerTint(Integer)
  fullName.vb: AngeliA.Renderer.GetLayerTint(Integer)
  name.vb: GetLayerTint(Integer)
- uid: AngeliA.Renderer.SetLayerTint(System.Int32,AngeliA.Color32)
  commentId: M:AngeliA.Renderer.SetLayerTint(System.Int32,AngeliA.Color32)
  id: SetLayerTint(System.Int32,AngeliA.Color32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: SetLayerTint(int, Color32)
  nameWithType: Renderer.SetLayerTint(int, Color32)
  fullName: AngeliA.Renderer.SetLayerTint(int, AngeliA.Color32)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SetLayerTint
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 1165
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Set current color tint for given layer
  example: []
  syntax:
    content: public static void SetLayerTint(int layer, Color32 tint)
    parameters:
    - id: layer
      type: System.Int32
      description: Use RenderLayer.XXX to get this value
    - id: tint
      type: AngeliA.Color32
      description: ''
    content.vb: Public Shared Sub SetLayerTint(layer As Integer, tint As Color32)
  overload: AngeliA.Renderer.SetLayerTint*
  nameWithType.vb: Renderer.SetLayerTint(Integer, Color32)
  fullName.vb: AngeliA.Renderer.SetLayerTint(Integer, AngeliA.Color32)
  name.vb: SetLayerTint(Integer, Color32)
- uid: AngeliA.Renderer.MultLayerTint(System.Int32,AngeliA.Color32)
  commentId: M:AngeliA.Renderer.MultLayerTint(System.Int32,AngeliA.Color32)
  id: MultLayerTint(System.Int32,AngeliA.Color32)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: MultLayerTint(int, Color32)
  nameWithType: Renderer.MultLayerTint(int, Color32)
  fullName: AngeliA.Renderer.MultLayerTint(int, AngeliA.Color32)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: MultLayerTint
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 1172
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Make current color tint multiply given value for given layer
  example: []
  syntax:
    content: public static void MultLayerTint(int layer, Color32 tint)
    parameters:
    - id: layer
      type: System.Int32
      description: Use RenderLayer.XXX to get this value
    - id: tint
      type: AngeliA.Color32
      description: ''
    content.vb: Public Shared Sub MultLayerTint(layer As Integer, tint As Color32)
  overload: AngeliA.Renderer.MultLayerTint*
  nameWithType.vb: Renderer.MultLayerTint(Integer, Color32)
  fullName.vb: AngeliA.Renderer.MultLayerTint(Integer, AngeliA.Color32)
  name.vb: MultLayerTint(Integer, Color32)
- uid: AngeliA.Renderer.RequireCharForPool(System.Char,AngeliA.CharSprite@)
  commentId: M:AngeliA.Renderer.RequireCharForPool(System.Char,AngeliA.CharSprite@)
  id: RequireCharForPool(System.Char,AngeliA.CharSprite@)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: RequireCharForPool(char, out CharSprite)
  nameWithType: Renderer.RequireCharForPool(char, out CharSprite)
  fullName: AngeliA.Renderer.RequireCharForPool(char, out AngeliA.CharSprite)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: RequireCharForPool
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 1179
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Require given text character from internal caching
  example: []
  syntax:
    content: public static bool RequireCharForPool(char c, out CharSprite charSprite)
    parameters:
    - id: c
      type: System.Char
    - id: charSprite
      type: AngeliA.CharSprite
    return:
      type: System.Boolean
    content.vb: Public Shared Function RequireCharForPool(c As Char, charSprite As CharSprite) As Boolean
  overload: AngeliA.Renderer.RequireCharForPool*
  nameWithType.vb: Renderer.RequireCharForPool(Char, CharSprite)
  fullName.vb: AngeliA.Renderer.RequireCharForPool(Char, AngeliA.CharSprite)
  name.vb: RequireCharForPool(Char, CharSprite)
- uid: AngeliA.Renderer.RequireCharForPool(System.Char,System.Int32,AngeliA.CharSprite@)
  commentId: M:AngeliA.Renderer.RequireCharForPool(System.Char,System.Int32,AngeliA.CharSprite@)
  id: RequireCharForPool(System.Char,System.Int32,AngeliA.CharSprite@)
  parent: AngeliA.Renderer
  langs:
  - csharp
  - vb
  name: RequireCharForPool(char, int, out CharSprite)
  nameWithType: Renderer.RequireCharForPool(char, int, out CharSprite)
  fullName: AngeliA.Renderer.RequireCharForPool(char, int, out AngeliA.CharSprite)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/Renderer.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: RequireCharForPool
    path: ../../AngeliA/AngeliA Framework/src/Core/Renderer.cs
    startLine: 1184
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Require given text character from internal caching
  example: []
  syntax:
    content: public static bool RequireCharForPool(char c, int fontIndex, out CharSprite charSprite)
    parameters:
    - id: c
      type: System.Char
    - id: fontIndex
      type: System.Int32
    - id: charSprite
      type: AngeliA.CharSprite
    return:
      type: System.Boolean
    content.vb: Public Shared Function RequireCharForPool(c As Char, fontIndex As Integer, charSprite As CharSprite) As Boolean
  overload: AngeliA.Renderer.RequireCharForPool*
  nameWithType.vb: Renderer.RequireCharForPool(Char, Integer, CharSprite)
  fullName.vb: AngeliA.Renderer.RequireCharForPool(Char, Integer, AngeliA.CharSprite)
  name.vb: RequireCharForPool(Char, Integer, CharSprite)
references:
- uid: AngeliA
  commentId: N:AngeliA
  href: AngeliA.html
  name: AngeliA
  nameWithType: AngeliA
  fullName: AngeliA
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AngeliA.Renderer.CameraRect*
  commentId: Overload:AngeliA.Renderer.CameraRect
  href: AngeliA.Renderer.html#AngeliA_Renderer_CameraRect
  name: CameraRect
  nameWithType: Renderer.CameraRect
  fullName: AngeliA.Renderer.CameraRect
- uid: AngeliA.IRect
  commentId: T:AngeliA.IRect
  parent: AngeliA
  href: AngeliA.IRect.html
  name: IRect
  nameWithType: IRect
  fullName: AngeliA.IRect
- uid: AngeliA.Renderer.CameraRange*
  commentId: Overload:AngeliA.Renderer.CameraRange
  href: AngeliA.Renderer.html#AngeliA_Renderer_CameraRange
  name: CameraRange
  nameWithType: Renderer.CameraRange
  fullName: AngeliA.Renderer.CameraRange
- uid: AngeliA.FRect
  commentId: T:AngeliA.FRect
  parent: AngeliA
  href: AngeliA.FRect.html
  name: FRect
  nameWithType: FRect
  fullName: AngeliA.FRect
- uid: AngeliA.Renderer.ScreenRenderRect*
  commentId: Overload:AngeliA.Renderer.ScreenRenderRect
  href: AngeliA.Renderer.html#AngeliA_Renderer_ScreenRenderRect
  name: ScreenRenderRect
  nameWithType: Renderer.ScreenRenderRect
  fullName: AngeliA.Renderer.ScreenRenderRect
- uid: AngeliA.Renderer.LayerCount*
  commentId: Overload:AngeliA.Renderer.LayerCount
  href: AngeliA.Renderer.html#AngeliA_Renderer_LayerCount
  name: LayerCount
  nameWithType: Renderer.LayerCount
  fullName: AngeliA.Renderer.LayerCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: AngeliA.Renderer.CurrentSheetIndex*
  commentId: Overload:AngeliA.Renderer.CurrentSheetIndex
  href: AngeliA.Renderer.html#AngeliA_Renderer_CurrentSheetIndex
  name: CurrentSheetIndex
  nameWithType: Renderer.CurrentSheetIndex
  fullName: AngeliA.Renderer.CurrentSheetIndex
- uid: AngeliA.Renderer.CurrentLayerIndex*
  commentId: Overload:AngeliA.Renderer.CurrentLayerIndex
  href: AngeliA.Renderer.html#AngeliA_Renderer_CurrentLayerIndex
  name: CurrentLayerIndex
  nameWithType: Renderer.CurrentLayerIndex
  fullName: AngeliA.Renderer.CurrentLayerIndex
- uid: AngeliA.Renderer.CurrentFontIndex*
  commentId: Overload:AngeliA.Renderer.CurrentFontIndex
  href: AngeliA.Renderer.html#AngeliA_Renderer_CurrentFontIndex
  name: CurrentFontIndex
  nameWithType: Renderer.CurrentFontIndex
  fullName: AngeliA.Renderer.CurrentFontIndex
- uid: AngeliA.Renderer.AltSheetCount*
  commentId: Overload:AngeliA.Renderer.AltSheetCount
  href: AngeliA.Renderer.html#AngeliA_Renderer_AltSheetCount
  name: AltSheetCount
  nameWithType: Renderer.AltSheetCount
  fullName: AngeliA.Renderer.AltSheetCount
- uid: AngeliA.Renderer.IsReady*
  commentId: Overload:AngeliA.Renderer.IsReady
  href: AngeliA.Renderer.html#AngeliA_Renderer_IsReady
  name: IsReady
  nameWithType: Renderer.IsReady
  fullName: AngeliA.Renderer.IsReady
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: AngeliA.Renderer.CurrentSheet*
  commentId: Overload:AngeliA.Renderer.CurrentSheet
  href: AngeliA.Renderer.html#AngeliA_Renderer_CurrentSheet
  name: CurrentSheet
  nameWithType: Renderer.CurrentSheet
  fullName: AngeliA.Renderer.CurrentSheet
- uid: AngeliA.Sheet
  commentId: T:AngeliA.Sheet
  parent: AngeliA
  href: AngeliA.Sheet.html
  name: Sheet
  nameWithType: Sheet
  fullName: AngeliA.Sheet
- uid: AngeliA.Renderer.ClearCharSpritePool*
  commentId: Overload:AngeliA.Renderer.ClearCharSpritePool
  href: AngeliA.Renderer.html#AngeliA_Renderer_ClearCharSpritePool
  name: ClearCharSpritePool
  nameWithType: Renderer.ClearCharSpritePool
  fullName: AngeliA.Renderer.ClearCharSpritePool
- uid: AngeliA.Renderer.TryGetTextureFromSheet*
  commentId: Overload:AngeliA.Renderer.TryGetTextureFromSheet
  href: AngeliA.Renderer.html#AngeliA_Renderer_TryGetTextureFromSheet__1_System_Int32_System_Int32___0__
  name: TryGetTextureFromSheet
  nameWithType: Renderer.TryGetTextureFromSheet
  fullName: AngeliA.Renderer.TryGetTextureFromSheet
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: AngeliA.Renderer.LoadMainSheet*
  commentId: Overload:AngeliA.Renderer.LoadMainSheet
  href: AngeliA.Renderer.html#AngeliA_Renderer_LoadMainSheet
  name: LoadMainSheet
  nameWithType: Renderer.LoadMainSheet
  fullName: AngeliA.Renderer.LoadMainSheet
- uid: AngeliA.Renderer.AddAltSheet*
  commentId: Overload:AngeliA.Renderer.AddAltSheet
  href: AngeliA.Renderer.html#AngeliA_Renderer_AddAltSheet_AngeliA_Sheet_
  name: AddAltSheet
  nameWithType: Renderer.AddAltSheet
  fullName: AngeliA.Renderer.AddAltSheet
- uid: AngeliA.Renderer.RemoveAltSheet*
  commentId: Overload:AngeliA.Renderer.RemoveAltSheet
  href: AngeliA.Renderer.html#AngeliA_Renderer_RemoveAltSheet_System_Int32_
  name: RemoveAltSheet
  nameWithType: Renderer.RemoveAltSheet
  fullName: AngeliA.Renderer.RemoveAltSheet
- uid: AngeliA.Renderer.GetAltSheet*
  commentId: Overload:AngeliA.Renderer.GetAltSheet
  href: AngeliA.Renderer.html#AngeliA_Renderer_GetAltSheet_System_Int32_
  name: GetAltSheet
  nameWithType: Renderer.GetAltSheet
  fullName: AngeliA.Renderer.GetAltSheet
- uid: AngeliA.Renderer.SetLayer*
  commentId: Overload:AngeliA.Renderer.SetLayer
  href: AngeliA.Renderer.html#AngeliA_Renderer_SetLayer_System_Int32_
  name: SetLayer
  nameWithType: Renderer.SetLayer
  fullName: AngeliA.Renderer.SetLayer
- uid: AngeliA.Renderer.SetLayerToWallpaper*
  commentId: Overload:AngeliA.Renderer.SetLayerToWallpaper
  href: AngeliA.Renderer.html#AngeliA_Renderer_SetLayerToWallpaper
  name: SetLayerToWallpaper
  nameWithType: Renderer.SetLayerToWallpaper
  fullName: AngeliA.Renderer.SetLayerToWallpaper
- uid: AngeliA.Renderer.SetLayerToBehind*
  commentId: Overload:AngeliA.Renderer.SetLayerToBehind
  href: AngeliA.Renderer.html#AngeliA_Renderer_SetLayerToBehind
  name: SetLayerToBehind
  nameWithType: Renderer.SetLayerToBehind
  fullName: AngeliA.Renderer.SetLayerToBehind
- uid: AngeliA.Renderer.SetLayerToShadow*
  commentId: Overload:AngeliA.Renderer.SetLayerToShadow
  href: AngeliA.Renderer.html#AngeliA_Renderer_SetLayerToShadow
  name: SetLayerToShadow
  nameWithType: Renderer.SetLayerToShadow
  fullName: AngeliA.Renderer.SetLayerToShadow
- uid: AngeliA.Renderer.SetLayerToDefault*
  commentId: Overload:AngeliA.Renderer.SetLayerToDefault
  href: AngeliA.Renderer.html#AngeliA_Renderer_SetLayerToDefault
  name: SetLayerToDefault
  nameWithType: Renderer.SetLayerToDefault
  fullName: AngeliA.Renderer.SetLayerToDefault
- uid: AngeliA.Renderer.SetLayerToColor*
  commentId: Overload:AngeliA.Renderer.SetLayerToColor
  href: AngeliA.Renderer.html#AngeliA_Renderer_SetLayerToColor
  name: SetLayerToColor
  nameWithType: Renderer.SetLayerToColor
  fullName: AngeliA.Renderer.SetLayerToColor
- uid: AngeliA.Renderer.SetLayerToMultiply*
  commentId: Overload:AngeliA.Renderer.SetLayerToMultiply
  href: AngeliA.Renderer.html#AngeliA_Renderer_SetLayerToMultiply
  name: SetLayerToMultiply
  nameWithType: Renderer.SetLayerToMultiply
  fullName: AngeliA.Renderer.SetLayerToMultiply
- uid: AngeliA.Renderer.SetLayerToAdditive*
  commentId: Overload:AngeliA.Renderer.SetLayerToAdditive
  href: AngeliA.Renderer.html#AngeliA_Renderer_SetLayerToAdditive
  name: SetLayerToAdditive
  nameWithType: Renderer.SetLayerToAdditive
  fullName: AngeliA.Renderer.SetLayerToAdditive
- uid: AngeliA.Renderer.ResetLayer*
  commentId: Overload:AngeliA.Renderer.ResetLayer
  href: AngeliA.Renderer.html#AngeliA_Renderer_ResetLayer_System_Int32_
  name: ResetLayer
  nameWithType: Renderer.ResetLayer
  fullName: AngeliA.Renderer.ResetLayer
- uid: AngeliA.Renderer.SortLayer*
  commentId: Overload:AngeliA.Renderer.SortLayer
  href: AngeliA.Renderer.html#AngeliA_Renderer_SortLayer_System_Int32_
  name: SortLayer
  nameWithType: Renderer.SortLayer
  fullName: AngeliA.Renderer.SortLayer
- uid: AngeliA.Renderer.ReverseUnsortedCells*
  commentId: Overload:AngeliA.Renderer.ReverseUnsortedCells
  href: AngeliA.Renderer.html#AngeliA_Renderer_ReverseUnsortedCells_System_Int32_
  name: ReverseUnsortedCells
  nameWithType: Renderer.ReverseUnsortedCells
  fullName: AngeliA.Renderer.ReverseUnsortedCells
- uid: AngeliA.Renderer.AbandonLayerSort*
  commentId: Overload:AngeliA.Renderer.AbandonLayerSort
  href: AngeliA.Renderer.html#AngeliA_Renderer_AbandonLayerSort_System_Int32_
  name: AbandonLayerSort
  nameWithType: Renderer.AbandonLayerSort
  fullName: AngeliA.Renderer.AbandonLayerSort
- uid: AngeliA.Renderer.GetUsedCellCount*
  commentId: Overload:AngeliA.Renderer.GetUsedCellCount
  href: AngeliA.Renderer.html#AngeliA_Renderer_GetUsedCellCount
  name: GetUsedCellCount
  nameWithType: Renderer.GetUsedCellCount
  fullName: AngeliA.Renderer.GetUsedCellCount
- uid: AngeliA.Renderer.GetLayerCapacity*
  commentId: Overload:AngeliA.Renderer.GetLayerCapacity
  href: AngeliA.Renderer.html#AngeliA_Renderer_GetLayerCapacity_System_Int32_
  name: GetLayerCapacity
  nameWithType: Renderer.GetLayerCapacity
  fullName: AngeliA.Renderer.GetLayerCapacity
- uid: AngeliA.Renderer.SetFontID*
  commentId: Overload:AngeliA.Renderer.SetFontID
  href: AngeliA.Renderer.html#AngeliA_Renderer_SetFontID_System_Int32_
  name: SetFontID
  nameWithType: Renderer.SetFontID
  fullName: AngeliA.Renderer.SetFontID
- uid: AngeliA.Renderer.SetFontIndex*
  commentId: Overload:AngeliA.Renderer.SetFontIndex
  href: AngeliA.Renderer.html#AngeliA_Renderer_SetFontIndex_System_Int32_
  name: SetFontIndex
  nameWithType: Renderer.SetFontIndex
  fullName: AngeliA.Renderer.SetFontIndex
- uid: AngeliA.Renderer.ClearFontIndexIdMap*
  commentId: Overload:AngeliA.Renderer.ClearFontIndexIdMap
  href: AngeliA.Renderer.html#AngeliA_Renderer_ClearFontIndexIdMap
  name: ClearFontIndexIdMap
  nameWithType: Renderer.ClearFontIndexIdMap
  fullName: AngeliA.Renderer.ClearFontIndexIdMap
- uid: AngeliA.Renderer.OverrideFontIdAndIndex*
  commentId: Overload:AngeliA.Renderer.OverrideFontIdAndIndex
  href: AngeliA.Renderer.html#AngeliA_Renderer_OverrideFontIdAndIndex_System_Int32_System_Int32_
  name: OverrideFontIdAndIndex
  nameWithType: Renderer.OverrideFontIdAndIndex
  fullName: AngeliA.Renderer.OverrideFontIdAndIndex
- uid: AngeliA.Renderer.Draw*
  commentId: Overload:AngeliA.Renderer.Draw
  href: AngeliA.Renderer.html#AngeliA_Renderer_Draw_System_Int32_AngeliA_IRect_System_Int32_
  name: Draw
  nameWithType: Renderer.Draw
  fullName: AngeliA.Renderer.Draw
- uid: AngeliA.Cell
  commentId: T:AngeliA.Cell
  parent: AngeliA
  href: AngeliA.Cell.html
  name: Cell
  nameWithType: Cell
  fullName: AngeliA.Cell
- uid: AngeliA.Color32
  commentId: T:AngeliA.Color32
  parent: AngeliA
  href: AngeliA.Color32.html
  name: Color32
  nameWithType: Color32
  fullName: AngeliA.Color32
- uid: AngeliA.SpriteCode
  commentId: T:AngeliA.SpriteCode
  parent: AngeliA
  href: AngeliA.SpriteCode.html
  name: SpriteCode
  nameWithType: SpriteCode
  fullName: AngeliA.SpriteCode
- uid: AngeliA.AngeSprite
  commentId: T:AngeliA.AngeSprite
  parent: AngeliA
  href: AngeliA.AngeSprite.html
  name: AngeSprite
  nameWithType: AngeSprite
  fullName: AngeliA.AngeSprite
- uid: AngeliA.Renderer.DrawPixel*
  commentId: Overload:AngeliA.Renderer.DrawPixel
  href: AngeliA.Renderer.html#AngeliA_Renderer_DrawPixel_AngeliA_IRect_System_Int32_
  name: DrawPixel
  nameWithType: Renderer.DrawPixel
  fullName: AngeliA.Renderer.DrawPixel
- uid: AngeliA.Renderer.DrawChar*
  commentId: Overload:AngeliA.Renderer.DrawChar
  href: AngeliA.Renderer.html#AngeliA_Renderer_DrawChar_System_Char_System_Int32_System_Int32_System_Int32_System_Int32_AngeliA_Color32_
  name: DrawChar
  nameWithType: Renderer.DrawChar
  fullName: AngeliA.Renderer.DrawChar
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.char
  name: char
  nameWithType: char
  fullName: char
  nameWithType.vb: Char
  fullName.vb: Char
  name.vb: Char
- uid: AngeliA.CharSprite
  commentId: T:AngeliA.CharSprite
  parent: AngeliA
  href: AngeliA.CharSprite.html
  name: CharSprite
  nameWithType: CharSprite
  fullName: AngeliA.CharSprite
- uid: AngeliA.Renderer.DrawSlice*
  commentId: Overload:AngeliA.Renderer.DrawSlice
  href: AngeliA.Renderer.html#AngeliA_Renderer_DrawSlice_System_Int32_AngeliA_IRect_
  name: DrawSlice
  nameWithType: Renderer.DrawSlice
  fullName: AngeliA.Renderer.DrawSlice
- uid: AngeliA.Cell[]
  isExternal: true
  href: AngeliA.Cell.html
  name: Cell[]
  nameWithType: Cell[]
  fullName: AngeliA.Cell[]
  nameWithType.vb: Cell()
  fullName.vb: AngeliA.Cell()
  name.vb: Cell()
  spec.csharp:
  - uid: AngeliA.Cell
    name: Cell
    href: AngeliA.Cell.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: AngeliA.Cell
    name: Cell
    href: AngeliA.Cell.html
  - name: (
  - name: )
- uid: System.Boolean[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool[]
  nameWithType: bool[]
  fullName: bool[]
  nameWithType.vb: Boolean()
  fullName.vb: Boolean()
  name.vb: Boolean()
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: (
  - name: )
- uid: AngeliA.Renderer.GetAnimationGroupDuration*
  commentId: Overload:AngeliA.Renderer.GetAnimationGroupDuration
  href: AngeliA.Renderer.html#AngeliA_Renderer_GetAnimationGroupDuration_System_Int32_
  name: GetAnimationGroupDuration
  nameWithType: Renderer.GetAnimationGroupDuration
  fullName: AngeliA.Renderer.GetAnimationGroupDuration
- uid: AngeliA.SpriteGroup
  commentId: T:AngeliA.SpriteGroup
  parent: AngeliA
  href: AngeliA.SpriteGroup.html
  name: SpriteGroup
  nameWithType: SpriteGroup
  fullName: AngeliA.SpriteGroup
- uid: AngeliA.Renderer.DrawAnimation*
  commentId: Overload:AngeliA.Renderer.DrawAnimation
  href: AngeliA.Renderer.html#AngeliA_Renderer_DrawAnimation_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_
  name: DrawAnimation
  nameWithType: Renderer.DrawAnimation
  fullName: AngeliA.Renderer.DrawAnimation
- uid: AngeliA.Renderer.HasSprite*
  commentId: Overload:AngeliA.Renderer.HasSprite
  href: AngeliA.Renderer.html#AngeliA_Renderer_HasSprite_System_Int32_
  name: HasSprite
  nameWithType: Renderer.HasSprite
  fullName: AngeliA.Renderer.HasSprite
- uid: AngeliA.Renderer.HasSpriteGroup*
  commentId: Overload:AngeliA.Renderer.HasSpriteGroup
  href: AngeliA.Renderer.html#AngeliA_Renderer_HasSpriteGroup_System_Int32_
  name: HasSpriteGroup
  nameWithType: Renderer.HasSpriteGroup
  fullName: AngeliA.Renderer.HasSpriteGroup
- uid: AngeliA.Renderer.TryGetSprite*
  commentId: Overload:AngeliA.Renderer.TryGetSprite
  href: AngeliA.Renderer.html#AngeliA_Renderer_TryGetSprite_System_Int32_AngeliA_AngeSprite__System_Boolean_
  name: TryGetSprite
  nameWithType: Renderer.TryGetSprite
  fullName: AngeliA.Renderer.TryGetSprite
- uid: AngeliA.Renderer.TryGetAnimationGroup*
  commentId: Overload:AngeliA.Renderer.TryGetAnimationGroup
  href: AngeliA.Renderer.html#AngeliA_Renderer_TryGetAnimationGroup_System_Int32_AngeliA_SpriteGroup__
  name: TryGetAnimationGroup
  nameWithType: Renderer.TryGetAnimationGroup
  fullName: AngeliA.Renderer.TryGetAnimationGroup
- uid: AngeliA.Renderer.TryGetSpriteGroup*
  commentId: Overload:AngeliA.Renderer.TryGetSpriteGroup
  href: AngeliA.Renderer.html#AngeliA_Renderer_TryGetSpriteGroup_System_Int32_AngeliA_SpriteGroup__
  name: TryGetSpriteGroup
  nameWithType: Renderer.TryGetSpriteGroup
  fullName: AngeliA.Renderer.TryGetSpriteGroup
- uid: AngeliA.Renderer.TryGetSpriteFromGroup*
  commentId: Overload:AngeliA.Renderer.TryGetSpriteFromGroup
  href: AngeliA.Renderer.html#AngeliA_Renderer_TryGetSpriteFromGroup_System_Int32_System_Int32_AngeliA_AngeSprite__System_Boolean_System_Boolean_System_Boolean_
  name: TryGetSpriteFromGroup
  nameWithType: Renderer.TryGetSpriteFromGroup
  fullName: AngeliA.Renderer.TryGetSpriteFromGroup
- uid: AngeliA.Renderer.TryGetSpriteForGizmos*
  commentId: Overload:AngeliA.Renderer.TryGetSpriteForGizmos
  href: AngeliA.Renderer.html#AngeliA_Renderer_TryGetSpriteForGizmos_System_Int32_AngeliA_AngeSprite__
  name: TryGetSpriteForGizmos
  nameWithType: Renderer.TryGetSpriteForGizmos
  fullName: AngeliA.Renderer.TryGetSpriteForGizmos
- uid: AngeliA.Renderer.ClampCells*
  commentId: Overload:AngeliA.Renderer.ClampCells
  href: AngeliA.Renderer.html#AngeliA_Renderer_ClampCells_AngeliA_IRect_System_Int32_System_Int32_
  name: ClampCells
  nameWithType: Renderer.ClampCells
  fullName: AngeliA.Renderer.ClampCells
- uid: AngeliA.Renderer.GetCells*
  commentId: Overload:AngeliA.Renderer.GetCells
  href: AngeliA.Renderer.html#AngeliA_Renderer_GetCells_System_Span_AngeliA_Cell___System_Int32__
  name: GetCells
  nameWithType: Renderer.GetCells
  fullName: AngeliA.Renderer.GetCells
- uid: System.Span{AngeliA.Cell}
  commentId: T:System.Span{AngeliA.Cell}
  parent: System
  definition: System.Span`1
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<Cell>
  nameWithType: Span<Cell>
  fullName: System.Span<AngeliA.Cell>
  nameWithType.vb: Span(Of Cell)
  fullName.vb: System.Span(Of AngeliA.Cell)
  name.vb: Span(Of Cell)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: AngeliA.Cell
    name: Cell
    href: AngeliA.Cell.html
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: AngeliA.Cell
    name: Cell
    href: AngeliA.Cell.html
  - name: )
- uid: System.Span`1
  commentId: T:System.Span`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<T>
  nameWithType: Span<T>
  fullName: System.Span<T>
  nameWithType.vb: Span(Of T)
  fullName.vb: System.Span(Of T)
  name.vb: Span(Of T)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: AngeliA.Renderer.GetLayerTint*
  commentId: Overload:AngeliA.Renderer.GetLayerTint
  href: AngeliA.Renderer.html#AngeliA_Renderer_GetLayerTint_System_Int32_
  name: GetLayerTint
  nameWithType: Renderer.GetLayerTint
  fullName: AngeliA.Renderer.GetLayerTint
- uid: AngeliA.Renderer.SetLayerTint*
  commentId: Overload:AngeliA.Renderer.SetLayerTint
  href: AngeliA.Renderer.html#AngeliA_Renderer_SetLayerTint_System_Int32_AngeliA_Color32_
  name: SetLayerTint
  nameWithType: Renderer.SetLayerTint
  fullName: AngeliA.Renderer.SetLayerTint
- uid: AngeliA.Renderer.MultLayerTint*
  commentId: Overload:AngeliA.Renderer.MultLayerTint
  href: AngeliA.Renderer.html#AngeliA_Renderer_MultLayerTint_System_Int32_AngeliA_Color32_
  name: MultLayerTint
  nameWithType: Renderer.MultLayerTint
  fullName: AngeliA.Renderer.MultLayerTint
- uid: AngeliA.Renderer.RequireCharForPool*
  commentId: Overload:AngeliA.Renderer.RequireCharForPool
  href: AngeliA.Renderer.html#AngeliA_Renderer_RequireCharForPool_System_Char_AngeliA_CharSprite__
  name: RequireCharForPool
  nameWithType: Renderer.RequireCharForPool
  fullName: AngeliA.Renderer.RequireCharForPool
