### YamlMime:ManagedReference
items:
- uid: AngeliA.IDamageReceiver
  commentId: T:AngeliA.IDamageReceiver
  id: IDamageReceiver
  parent: AngeliA
  children:
  - AngeliA.IDamageReceiver.DamageAllOverlap(AngeliA.IRect,AngeliA.Damage,System.Int32,AngeliA.Entity,AngeliA.OperationMode,System.Boolean)
  - AngeliA.IDamageReceiver.IgnoreDamageType
  - AngeliA.IDamageReceiver.IsInvincible
  - AngeliA.IDamageReceiver.OnDamaged(AngeliA.Damage)
  - AngeliA.IDamageReceiver.TakeDamage(AngeliA.Damage)
  - AngeliA.IDamageReceiver.TakeDamageFromLevel
  - AngeliA.IDamageReceiver.Team
  - AngeliA.IDamageReceiver.ValidDamage(AngeliA.Damage)
  langs:
  - csharp
  - vb
  name: IDamageReceiver
  nameWithType: IDamageReceiver
  fullName: AngeliA.IDamageReceiver
  type: Interface
  source:
    remote:
      path: AngeliA Framework/src/Entity/Interface/IDamageReceiver.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IDamageReceiver
    path: ../../AngeliA/AngeliA Framework/src/Entity/Interface/IDamageReceiver.cs
    startLine: 5
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Interface that makes entity take damage from other
  example: []
  syntax:
    content: public interface IDamageReceiver
    content.vb: Public Interface IDamageReceiver
  extensionMethods:
  - System.Object.AngeliA.Extension.ForAllFields``1(System.Reflection.BindingFlags,System.Boolean)
  - System.Object.AngeliA.Extension.ForAllProperties``1
- uid: AngeliA.IDamageReceiver.Team
  commentId: P:AngeliA.IDamageReceiver.Team
  id: Team
  parent: AngeliA.IDamageReceiver
  langs:
  - csharp
  - vb
  name: Team
  nameWithType: IDamageReceiver.Team
  fullName: AngeliA.IDamageReceiver.Team
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Entity/Interface/IDamageReceiver.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Team
    path: ../../AngeliA/AngeliA Framework/src/Entity/Interface/IDamageReceiver.cs
    startLine: 11
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Which team does this entity belongs to
  example: []
  syntax:
    content: int Team { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property Team As Integer
  overload: AngeliA.IDamageReceiver.Team*
- uid: AngeliA.IDamageReceiver.IsInvincible
  commentId: P:AngeliA.IDamageReceiver.IsInvincible
  id: IsInvincible
  parent: AngeliA.IDamageReceiver
  langs:
  - csharp
  - vb
  name: IsInvincible
  nameWithType: IDamageReceiver.IsInvincible
  fullName: AngeliA.IDamageReceiver.IsInvincible
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Entity/Interface/IDamageReceiver.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IsInvincible
    path: ../../AngeliA/AngeliA Framework/src/Entity/Interface/IDamageReceiver.cs
    startLine: 15
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: True if this entity is invincible
  example: []
  syntax:
    content: bool IsInvincible { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsInvincible As Boolean
  overload: AngeliA.IDamageReceiver.IsInvincible*
- uid: AngeliA.IDamageReceiver.TakeDamageFromLevel
  commentId: P:AngeliA.IDamageReceiver.TakeDamageFromLevel
  id: TakeDamageFromLevel
  parent: AngeliA.IDamageReceiver
  langs:
  - csharp
  - vb
  name: TakeDamageFromLevel
  nameWithType: IDamageReceiver.TakeDamageFromLevel
  fullName: AngeliA.IDamageReceiver.TakeDamageFromLevel
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Entity/Interface/IDamageReceiver.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TakeDamageFromLevel
    path: ../../AngeliA/AngeliA Framework/src/Entity/Interface/IDamageReceiver.cs
    startLine: 19
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: True if this entity take damage when overlap with colliders from PhysicsLayer.Damage
  example: []
  syntax:
    content: bool TakeDamageFromLevel { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property TakeDamageFromLevel As Boolean
  overload: AngeliA.IDamageReceiver.TakeDamageFromLevel*
- uid: AngeliA.IDamageReceiver.IgnoreDamageType
  commentId: P:AngeliA.IDamageReceiver.IgnoreDamageType
  id: IgnoreDamageType
  parent: AngeliA.IDamageReceiver
  langs:
  - csharp
  - vb
  name: IgnoreDamageType
  nameWithType: IDamageReceiver.IgnoreDamageType
  fullName: AngeliA.IDamageReceiver.IgnoreDamageType
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Entity/Interface/IDamageReceiver.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IgnoreDamageType
    path: ../../AngeliA/AngeliA Framework/src/Entity/Interface/IDamageReceiver.cs
    startLine: 23
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: This entity do not take damage with this tags
  example: []
  syntax:
    content: Tag IgnoreDamageType { get; }
    parameters: []
    return:
      type: AngeliA.Tag
    content.vb: ReadOnly Property IgnoreDamageType As Tag
  overload: AngeliA.IDamageReceiver.IgnoreDamageType*
- uid: AngeliA.IDamageReceiver.OnDamaged(AngeliA.Damage)
  commentId: M:AngeliA.IDamageReceiver.OnDamaged(AngeliA.Damage)
  id: OnDamaged(AngeliA.Damage)
  parent: AngeliA.IDamageReceiver
  langs:
  - csharp
  - vb
  name: OnDamaged(Damage)
  nameWithType: IDamageReceiver.OnDamaged(Damage)
  fullName: AngeliA.IDamageReceiver.OnDamaged(AngeliA.Damage)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Entity/Interface/IDamageReceiver.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: OnDamaged
    path: ../../AngeliA/AngeliA Framework/src/Entity/Interface/IDamageReceiver.cs
    startLine: 28
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: This function is called when the entity takes a damage
  example: []
  syntax:
    content: void OnDamaged(Damage damage)
    parameters:
    - id: damage
      type: AngeliA.Damage
    content.vb: Sub OnDamaged(damage As Damage)
  overload: AngeliA.IDamageReceiver.OnDamaged*
- uid: AngeliA.IDamageReceiver.ValidDamage(AngeliA.Damage)
  commentId: M:AngeliA.IDamageReceiver.ValidDamage(AngeliA.Damage)
  id: ValidDamage(AngeliA.Damage)
  parent: AngeliA.IDamageReceiver
  langs:
  - csharp
  - vb
  name: ValidDamage(Damage)
  nameWithType: IDamageReceiver.ValidDamage(Damage)
  fullName: AngeliA.IDamageReceiver.ValidDamage(AngeliA.Damage)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Entity/Interface/IDamageReceiver.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ValidDamage
    path: ../../AngeliA/AngeliA Framework/src/Entity/Interface/IDamageReceiver.cs
    startLine: 33
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: True if the damage will be take by this entity
  example: []
  syntax:
    content: bool ValidDamage(Damage damage)
    parameters:
    - id: damage
      type: AngeliA.Damage
    return:
      type: System.Boolean
    content.vb: Function ValidDamage(damage As Damage) As Boolean
  overload: AngeliA.IDamageReceiver.ValidDamage*
- uid: AngeliA.IDamageReceiver.TakeDamage(AngeliA.Damage)
  commentId: M:AngeliA.IDamageReceiver.TakeDamage(AngeliA.Damage)
  id: TakeDamage(AngeliA.Damage)
  parent: AngeliA.IDamageReceiver
  langs:
  - csharp
  - vb
  name: TakeDamage(Damage)
  nameWithType: IDamageReceiver.TakeDamage(Damage)
  fullName: AngeliA.IDamageReceiver.TakeDamage(AngeliA.Damage)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Entity/Interface/IDamageReceiver.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TakeDamage
    path: ../../AngeliA/AngeliA Framework/src/Entity/Interface/IDamageReceiver.cs
    startLine: 47
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Make this entity take the given damage. This function will call ValidDamage internally
  example: []
  syntax:
    content: bool TakeDamage(Damage damage)
    parameters:
    - id: damage
      type: AngeliA.Damage
    return:
      type: System.Boolean
      description: True if the damage is taken
    content.vb: Function TakeDamage(damage As Damage) As Boolean
  overload: AngeliA.IDamageReceiver.TakeDamage*
- uid: AngeliA.IDamageReceiver.DamageAllOverlap(AngeliA.IRect,AngeliA.Damage,System.Int32,AngeliA.Entity,AngeliA.OperationMode,System.Boolean)
  commentId: M:AngeliA.IDamageReceiver.DamageAllOverlap(AngeliA.IRect,AngeliA.Damage,System.Int32,AngeliA.Entity,AngeliA.OperationMode,System.Boolean)
  id: DamageAllOverlap(AngeliA.IRect,AngeliA.Damage,System.Int32,AngeliA.Entity,AngeliA.OperationMode,System.Boolean)
  parent: AngeliA.IDamageReceiver
  langs:
  - csharp
  - vb
  name: DamageAllOverlap(IRect, Damage, int, Entity, OperationMode, bool)
  nameWithType: IDamageReceiver.DamageAllOverlap(IRect, Damage, int, Entity, OperationMode, bool)
  fullName: AngeliA.IDamageReceiver.DamageAllOverlap(AngeliA.IRect, AngeliA.Damage, int, AngeliA.Entity, AngeliA.OperationMode, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Entity/Interface/IDamageReceiver.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DamageAllOverlap
    path: ../../AngeliA/AngeliA Framework/src/Entity/Interface/IDamageReceiver.cs
    startLine: 63
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Deal damage to all IDamageReceiver overlap by given range
  example: []
  syntax:
    content: public static void DamageAllOverlap(IRect rect, Damage damage, int physicsMask = 10, Entity host = null, OperationMode mode = OperationMode.ColliderAndTrigger, bool allowMultipleDamage = true)
    parameters:
    - id: rect
      type: AngeliA.IRect
      description: The range in global space
    - id: damage
      type: AngeliA.Damage
      description: ''
    - id: physicsMask
      type: System.Int32
      description: Which physics layer is included
    - id: host
      type: AngeliA.Entity
      description: Sender of this damage
    - id: mode
      type: AngeliA.OperationMode
      description: Does this operation include collider or trigger
    - id: allowMultipleDamage
      type: System.Boolean
      description: True if more than one receiver will take damage
    content.vb: Public Shared Sub DamageAllOverlap(rect As IRect, damage As Damage, physicsMask As Integer = 10, host As Entity = Nothing, mode As OperationMode = OperationMode.ColliderAndTrigger, allowMultipleDamage As Boolean = True)
  overload: AngeliA.IDamageReceiver.DamageAllOverlap*
  nameWithType.vb: IDamageReceiver.DamageAllOverlap(IRect, Damage, Integer, Entity, OperationMode, Boolean)
  fullName.vb: AngeliA.IDamageReceiver.DamageAllOverlap(AngeliA.IRect, AngeliA.Damage, Integer, AngeliA.Entity, AngeliA.OperationMode, Boolean)
  name.vb: DamageAllOverlap(IRect, Damage, Integer, Entity, OperationMode, Boolean)
references:
- uid: AngeliA
  commentId: N:AngeliA
  href: AngeliA.html
  name: AngeliA
  nameWithType: AngeliA
  fullName: AngeliA
- uid: System.Object.AngeliA.Extension.ForAllFields``1(System.Reflection.BindingFlags,System.Boolean)
  commentId: M:AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
  parent: AngeliA.Extension
  definition: AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
  href: AngeliA.Extension.html#AngeliA_Extension_ForAllFields__1_System_Object_System_Reflection_BindingFlags_System_Boolean_
  name: ForAllFields<T>(object, BindingFlags, bool)
  nameWithType: Extension.ForAllFields<T>(object, BindingFlags, bool)
  fullName: AngeliA.Extension.ForAllFields<T>(object, System.Reflection.BindingFlags, bool)
  nameWithType.vb: Extension.ForAllFields(Of T)(Object, BindingFlags, Boolean)
  fullName.vb: AngeliA.Extension.ForAllFields(Of T)(Object, System.Reflection.BindingFlags, Boolean)
  name.vb: ForAllFields(Of T)(Object, BindingFlags, Boolean)
  spec.csharp:
  - uid: AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
    name: ForAllFields
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllFields__1_System_Object_System_Reflection_BindingFlags_System_Boolean_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
    name: ForAllFields
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllFields__1_System_Object_System_Reflection_BindingFlags_System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Object.AngeliA.Extension.ForAllProperties``1
  commentId: M:AngeliA.Extension.ForAllProperties``1(System.Object)
  parent: AngeliA.Extension
  definition: AngeliA.Extension.ForAllProperties``1(System.Object)
  href: AngeliA.Extension.html#AngeliA_Extension_ForAllProperties__1_System_Object_
  name: ForAllProperties<T>(object)
  nameWithType: Extension.ForAllProperties<T>(object)
  fullName: AngeliA.Extension.ForAllProperties<T>(object)
  nameWithType.vb: Extension.ForAllProperties(Of T)(Object)
  fullName.vb: AngeliA.Extension.ForAllProperties(Of T)(Object)
  name.vb: ForAllProperties(Of T)(Object)
  spec.csharp:
  - uid: AngeliA.Extension.ForAllProperties``1(System.Object)
    name: ForAllProperties
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllProperties__1_System_Object_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: AngeliA.Extension.ForAllProperties``1(System.Object)
    name: ForAllProperties
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllProperties__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
  commentId: M:AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
  isExternal: true
  href: AngeliA.Extension.html#AngeliA_Extension_ForAllFields__1_System_Object_System_Reflection_BindingFlags_System_Boolean_
  name: ForAllFields<T>(object, BindingFlags, bool)
  nameWithType: Extension.ForAllFields<T>(object, BindingFlags, bool)
  fullName: AngeliA.Extension.ForAllFields<T>(object, System.Reflection.BindingFlags, bool)
  nameWithType.vb: Extension.ForAllFields(Of T)(Object, BindingFlags, Boolean)
  fullName.vb: AngeliA.Extension.ForAllFields(Of T)(Object, System.Reflection.BindingFlags, Boolean)
  name.vb: ForAllFields(Of T)(Object, BindingFlags, Boolean)
  spec.csharp:
  - uid: AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
    name: ForAllFields
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllFields__1_System_Object_System_Reflection_BindingFlags_System_Boolean_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
    name: ForAllFields
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllFields__1_System_Object_System_Reflection_BindingFlags_System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: AngeliA.Extension
  commentId: T:AngeliA.Extension
  parent: AngeliA
  href: AngeliA.Extension.html
  name: Extension
  nameWithType: Extension
  fullName: AngeliA.Extension
- uid: AngeliA.Extension.ForAllProperties``1(System.Object)
  commentId: M:AngeliA.Extension.ForAllProperties``1(System.Object)
  isExternal: true
  href: AngeliA.Extension.html#AngeliA_Extension_ForAllProperties__1_System_Object_
  name: ForAllProperties<T>(object)
  nameWithType: Extension.ForAllProperties<T>(object)
  fullName: AngeliA.Extension.ForAllProperties<T>(object)
  nameWithType.vb: Extension.ForAllProperties(Of T)(Object)
  fullName.vb: AngeliA.Extension.ForAllProperties(Of T)(Object)
  name.vb: ForAllProperties(Of T)(Object)
  spec.csharp:
  - uid: AngeliA.Extension.ForAllProperties``1(System.Object)
    name: ForAllProperties
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllProperties__1_System_Object_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: AngeliA.Extension.ForAllProperties``1(System.Object)
    name: ForAllProperties
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllProperties__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: AngeliA.IDamageReceiver.Team*
  commentId: Overload:AngeliA.IDamageReceiver.Team
  href: AngeliA.IDamageReceiver.html#AngeliA_IDamageReceiver_Team
  name: Team
  nameWithType: IDamageReceiver.Team
  fullName: AngeliA.IDamageReceiver.Team
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AngeliA.IDamageReceiver.IsInvincible*
  commentId: Overload:AngeliA.IDamageReceiver.IsInvincible
  href: AngeliA.IDamageReceiver.html#AngeliA_IDamageReceiver_IsInvincible
  name: IsInvincible
  nameWithType: IDamageReceiver.IsInvincible
  fullName: AngeliA.IDamageReceiver.IsInvincible
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: AngeliA.IDamageReceiver.TakeDamageFromLevel*
  commentId: Overload:AngeliA.IDamageReceiver.TakeDamageFromLevel
  href: AngeliA.IDamageReceiver.html#AngeliA_IDamageReceiver_TakeDamageFromLevel
  name: TakeDamageFromLevel
  nameWithType: IDamageReceiver.TakeDamageFromLevel
  fullName: AngeliA.IDamageReceiver.TakeDamageFromLevel
- uid: AngeliA.IDamageReceiver.IgnoreDamageType*
  commentId: Overload:AngeliA.IDamageReceiver.IgnoreDamageType
  href: AngeliA.IDamageReceiver.html#AngeliA_IDamageReceiver_IgnoreDamageType
  name: IgnoreDamageType
  nameWithType: IDamageReceiver.IgnoreDamageType
  fullName: AngeliA.IDamageReceiver.IgnoreDamageType
- uid: AngeliA.Tag
  commentId: T:AngeliA.Tag
  parent: AngeliA
  href: AngeliA.Tag.html
  name: Tag
  nameWithType: Tag
  fullName: AngeliA.Tag
- uid: AngeliA.IDamageReceiver.OnDamaged*
  commentId: Overload:AngeliA.IDamageReceiver.OnDamaged
  href: AngeliA.IDamageReceiver.html#AngeliA_IDamageReceiver_OnDamaged_AngeliA_Damage_
  name: OnDamaged
  nameWithType: IDamageReceiver.OnDamaged
  fullName: AngeliA.IDamageReceiver.OnDamaged
- uid: AngeliA.Damage
  commentId: T:AngeliA.Damage
  parent: AngeliA
  href: AngeliA.Damage.html
  name: Damage
  nameWithType: Damage
  fullName: AngeliA.Damage
- uid: AngeliA.IDamageReceiver.ValidDamage*
  commentId: Overload:AngeliA.IDamageReceiver.ValidDamage
  href: AngeliA.IDamageReceiver.html#AngeliA_IDamageReceiver_ValidDamage_AngeliA_Damage_
  name: ValidDamage
  nameWithType: IDamageReceiver.ValidDamage
  fullName: AngeliA.IDamageReceiver.ValidDamage
- uid: AngeliA.IDamageReceiver.TakeDamage*
  commentId: Overload:AngeliA.IDamageReceiver.TakeDamage
  href: AngeliA.IDamageReceiver.html#AngeliA_IDamageReceiver_TakeDamage_AngeliA_Damage_
  name: TakeDamage
  nameWithType: IDamageReceiver.TakeDamage
  fullName: AngeliA.IDamageReceiver.TakeDamage
- uid: AngeliA.IDamageReceiver.DamageAllOverlap*
  commentId: Overload:AngeliA.IDamageReceiver.DamageAllOverlap
  href: AngeliA.IDamageReceiver.html#AngeliA_IDamageReceiver_DamageAllOverlap_AngeliA_IRect_AngeliA_Damage_System_Int32_AngeliA_Entity_AngeliA_OperationMode_System_Boolean_
  name: DamageAllOverlap
  nameWithType: IDamageReceiver.DamageAllOverlap
  fullName: AngeliA.IDamageReceiver.DamageAllOverlap
- uid: AngeliA.IRect
  commentId: T:AngeliA.IRect
  parent: AngeliA
  href: AngeliA.IRect.html
  name: IRect
  nameWithType: IRect
  fullName: AngeliA.IRect
- uid: AngeliA.Entity
  commentId: T:AngeliA.Entity
  parent: AngeliA
  href: AngeliA.Entity.html
  name: Entity
  nameWithType: Entity
  fullName: AngeliA.Entity
- uid: AngeliA.OperationMode
  commentId: T:AngeliA.OperationMode
  parent: AngeliA
  href: AngeliA.OperationMode.html
  name: OperationMode
  nameWithType: OperationMode
  fullName: AngeliA.OperationMode
