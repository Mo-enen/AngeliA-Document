### YamlMime:ManagedReference
items:
- uid: AngeliA.ItemSystem
  commentId: T:AngeliA.ItemSystem
  id: ItemSystem
  parent: AngeliA
  children:
  - AngeliA.ItemSystem.CanUseItem(System.Int32,AngeliA.Character)
  - AngeliA.ItemSystem.ClearCombination
  - AngeliA.ItemSystem.DropItemFor(AngeliA.Entity)
  - AngeliA.ItemSystem.DropItemFor(System.Int32,System.Int32,System.Int32)
  - AngeliA.ItemSystem.ForAllCombinations
  - AngeliA.ItemSystem.GetItem(System.Int32)
  - AngeliA.ItemSystem.GetItemDescription(System.Int32)
  - AngeliA.ItemSystem.GetItemDisplayName(System.Int32)
  - AngeliA.ItemSystem.GetItemMaxStackCount(System.Int32)
  - AngeliA.ItemSystem.GetRelatedCombinations(AngeliA.Int4,System.Collections.Generic.List{AngeliA.Int4},System.Int32)
  - AngeliA.ItemSystem.GetSortedCombination(System.Int32,System.Int32,System.Int32,System.Int32)
  - AngeliA.ItemSystem.HasItem(System.Int32)
  - AngeliA.ItemSystem.IsEquipment(System.Int32)
  - AngeliA.ItemSystem.IsEquipment(System.Int32,AngeliA.EquipmentType@)
  - AngeliA.ItemSystem.IsItemUnlocked(System.Int32)
  - AngeliA.ItemSystem.ItemPoolReady
  - AngeliA.ItemSystem.ItemUnlockReady
  - AngeliA.ItemSystem.SetItemUnlocked(System.Int32,System.Boolean)
  - AngeliA.ItemSystem.SpawnItem(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  - AngeliA.ItemSystem.TryGetCombination(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)
  langs:
  - csharp
  - vb
  name: ItemSystem
  nameWithType: ItemSystem
  fullName: AngeliA.ItemSystem
  type: Class
  source:
    remote:
      path: AngeliA Framework/src/Item/ItemSystem.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ItemSystem
    path: ../../AngeliA/AngeliA Framework/src/Item/ItemSystem.cs
    startLine: 12
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Core system that handles item related logic
  example: []
  syntax:
    content: public static class ItemSystem
    content.vb: Public Module ItemSystem
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: AngeliA.ItemSystem.ItemPoolReady
  commentId: P:AngeliA.ItemSystem.ItemPoolReady
  id: ItemPoolReady
  parent: AngeliA.ItemSystem
  langs:
  - csharp
  - vb
  name: ItemPoolReady
  nameWithType: ItemSystem.ItemPoolReady
  fullName: AngeliA.ItemSystem.ItemPoolReady
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Item/ItemSystem.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ItemPoolReady
    path: ../../AngeliA/AngeliA Framework/src/Item/ItemSystem.cs
    startLine: 64
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: True if the system is ready to use
  example: []
  syntax:
    content: public static bool ItemPoolReady { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared Property ItemPoolReady As Boolean
  overload: AngeliA.ItemSystem.ItemPoolReady*
- uid: AngeliA.ItemSystem.ItemUnlockReady
  commentId: P:AngeliA.ItemSystem.ItemUnlockReady
  id: ItemUnlockReady
  parent: AngeliA.ItemSystem
  langs:
  - csharp
  - vb
  name: ItemUnlockReady
  nameWithType: ItemSystem.ItemUnlockReady
  fullName: AngeliA.ItemSystem.ItemUnlockReady
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Item/ItemSystem.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ItemUnlockReady
    path: ../../AngeliA/AngeliA Framework/src/Item/ItemSystem.cs
    startLine: 68
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: True if the item unlock data is loaded
  example: []
  syntax:
    content: public static bool ItemUnlockReady { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared Property ItemUnlockReady As Boolean
  overload: AngeliA.ItemSystem.ItemUnlockReady*
- uid: AngeliA.ItemSystem.GetItem(System.Int32)
  commentId: M:AngeliA.ItemSystem.GetItem(System.Int32)
  id: GetItem(System.Int32)
  parent: AngeliA.ItemSystem
  langs:
  - csharp
  - vb
  name: GetItem(int)
  nameWithType: ItemSystem.GetItem(int)
  fullName: AngeliA.ItemSystem.GetItem(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Item/ItemSystem.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetItem
    path: ../../AngeliA/AngeliA Framework/src/Item/ItemSystem.cs
    startLine: 280
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get global single instance of the item from given ID
  example: []
  syntax:
    content: public static Item GetItem(int id)
    parameters:
    - id: id
      type: System.Int32
    return:
      type: AngeliA.Item
    content.vb: Public Shared Function GetItem(id As Integer) As Item
  overload: AngeliA.ItemSystem.GetItem*
  nameWithType.vb: ItemSystem.GetItem(Integer)
  fullName.vb: AngeliA.ItemSystem.GetItem(Integer)
  name.vb: GetItem(Integer)
- uid: AngeliA.ItemSystem.GetItemDisplayName(System.Int32)
  commentId: M:AngeliA.ItemSystem.GetItemDisplayName(System.Int32)
  id: GetItemDisplayName(System.Int32)
  parent: AngeliA.ItemSystem
  langs:
  - csharp
  - vb
  name: GetItemDisplayName(int)
  nameWithType: ItemSystem.GetItemDisplayName(int)
  fullName: AngeliA.ItemSystem.GetItemDisplayName(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Item/ItemSystem.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetItemDisplayName
    path: ../../AngeliA/AngeliA Framework/src/Item/ItemSystem.cs
    startLine: 286
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get display name from the language system from the given item ID
  example: []
  syntax:
    content: public static string GetItemDisplayName(int id)
    parameters:
    - id: id
      type: System.Int32
    return:
      type: System.String
    content.vb: Public Shared Function GetItemDisplayName(id As Integer) As String
  overload: AngeliA.ItemSystem.GetItemDisplayName*
  nameWithType.vb: ItemSystem.GetItemDisplayName(Integer)
  fullName.vb: AngeliA.ItemSystem.GetItemDisplayName(Integer)
  name.vb: GetItemDisplayName(Integer)
- uid: AngeliA.ItemSystem.GetItemDescription(System.Int32)
  commentId: M:AngeliA.ItemSystem.GetItemDescription(System.Int32)
  id: GetItemDescription(System.Int32)
  parent: AngeliA.ItemSystem
  langs:
  - csharp
  - vb
  name: GetItemDescription(int)
  nameWithType: ItemSystem.GetItemDescription(int)
  fullName: AngeliA.ItemSystem.GetItemDescription(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Item/ItemSystem.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetItemDescription
    path: ../../AngeliA/AngeliA Framework/src/Item/ItemSystem.cs
    startLine: 292
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get description from the language system from the given item ID
  example: []
  syntax:
    content: public static string GetItemDescription(int id)
    parameters:
    - id: id
      type: System.Int32
    return:
      type: System.String
    content.vb: Public Shared Function GetItemDescription(id As Integer) As String
  overload: AngeliA.ItemSystem.GetItemDescription*
  nameWithType.vb: ItemSystem.GetItemDescription(Integer)
  fullName.vb: AngeliA.ItemSystem.GetItemDescription(Integer)
  name.vb: GetItemDescription(Integer)
- uid: AngeliA.ItemSystem.GetItemMaxStackCount(System.Int32)
  commentId: M:AngeliA.ItemSystem.GetItemMaxStackCount(System.Int32)
  id: GetItemMaxStackCount(System.Int32)
  parent: AngeliA.ItemSystem
  langs:
  - csharp
  - vb
  name: GetItemMaxStackCount(int)
  nameWithType: ItemSystem.GetItemMaxStackCount(int)
  fullName: AngeliA.ItemSystem.GetItemMaxStackCount(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Item/ItemSystem.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetItemMaxStackCount
    path: ../../AngeliA/AngeliA Framework/src/Item/ItemSystem.cs
    startLine: 298
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get stack count limit of the given item in inventory panel
  example: []
  syntax:
    content: public static int GetItemMaxStackCount(int id)
    parameters:
    - id: id
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function GetItemMaxStackCount(id As Integer) As Integer
  overload: AngeliA.ItemSystem.GetItemMaxStackCount*
  nameWithType.vb: ItemSystem.GetItemMaxStackCount(Integer)
  fullName.vb: AngeliA.ItemSystem.GetItemMaxStackCount(Integer)
  name.vb: GetItemMaxStackCount(Integer)
- uid: AngeliA.ItemSystem.HasItem(System.Int32)
  commentId: M:AngeliA.ItemSystem.HasItem(System.Int32)
  id: HasItem(System.Int32)
  parent: AngeliA.ItemSystem
  langs:
  - csharp
  - vb
  name: HasItem(int)
  nameWithType: ItemSystem.HasItem(int)
  fullName: AngeliA.ItemSystem.HasItem(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Item/ItemSystem.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: HasItem
    path: ../../AngeliA/AngeliA Framework/src/Item/ItemSystem.cs
    startLine: 304
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: True if there is an item inside the system pool for the given ID
  example: []
  syntax:
    content: public static bool HasItem(int id)
    parameters:
    - id: id
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function HasItem(id As Integer) As Boolean
  overload: AngeliA.ItemSystem.HasItem*
  nameWithType.vb: ItemSystem.HasItem(Integer)
  fullName.vb: AngeliA.ItemSystem.HasItem(Integer)
  name.vb: HasItem(Integer)
- uid: AngeliA.ItemSystem.CanUseItem(System.Int32,AngeliA.Character)
  commentId: M:AngeliA.ItemSystem.CanUseItem(System.Int32,AngeliA.Character)
  id: CanUseItem(System.Int32,AngeliA.Character)
  parent: AngeliA.ItemSystem
  langs:
  - csharp
  - vb
  name: CanUseItem(int, Character)
  nameWithType: ItemSystem.CanUseItem(int, Character)
  fullName: AngeliA.ItemSystem.CanUseItem(int, AngeliA.Character)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Item/ItemSystem.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: CanUseItem
    path: ../../AngeliA/AngeliA Framework/src/Item/ItemSystem.cs
    startLine: 310
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: True if the item can be use by the given character
  example: []
  syntax:
    content: public static bool CanUseItem(int id, Character target)
    parameters:
    - id: id
      type: System.Int32
    - id: target
      type: AngeliA.Character
    return:
      type: System.Boolean
    content.vb: Public Shared Function CanUseItem(id As Integer, target As Character) As Boolean
  overload: AngeliA.ItemSystem.CanUseItem*
  nameWithType.vb: ItemSystem.CanUseItem(Integer, Character)
  fullName.vb: AngeliA.ItemSystem.CanUseItem(Integer, AngeliA.Character)
  name.vb: CanUseItem(Integer, Character)
- uid: AngeliA.ItemSystem.TryGetCombination(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)
  commentId: M:AngeliA.ItemSystem.TryGetCombination(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)
  id: TryGetCombination(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)
  parent: AngeliA.ItemSystem
  langs:
  - csharp
  - vb
  name: TryGetCombination(int, int, int, int, out int, out int, out int, out int, out int, out int)
  nameWithType: ItemSystem.TryGetCombination(int, int, int, int, out int, out int, out int, out int, out int, out int)
  fullName: AngeliA.ItemSystem.TryGetCombination(int, int, int, int, out int, out int, out int, out int, out int, out int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Item/ItemSystem.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TryGetCombination
    path: ../../AngeliA/AngeliA Framework/src/Item/ItemSystem.cs
    startLine: 331
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get item crafting combination data of the given item ID pair
  example: []
  syntax:
    content: public static bool TryGetCombination(int item0, int item1, int item2, int item3, out int result, out int resultCount, out int keep0, out int keep1, out int keep2, out int keep3)
    parameters:
    - id: item0
      type: System.Int32
      description: Source item ID
    - id: item1
      type: System.Int32
      description: Source item ID
    - id: item2
      type: System.Int32
      description: Source item ID
    - id: item3
      type: System.Int32
      description: Source item ID
    - id: result
      type: System.Int32
      description: Result item ID that the given pair will craft into
    - id: resultCount
      type: System.Int32
      description: How many result item does a single craft will get
    - id: keep0
      type: System.Int32
      description: Source item ID which do not get consume after craft
    - id: keep1
      type: System.Int32
      description: Source item ID which do not get consume after craft
    - id: keep2
      type: System.Int32
      description: Source item ID which do not get consume after craft
    - id: keep3
      type: System.Int32
      description: Source item ID which do not get consume after craft
    return:
      type: System.Boolean
      description: True if it is a valid craft combination
    content.vb: Public Shared Function TryGetCombination(item0 As Integer, item1 As Integer, item2 As Integer, item3 As Integer, result As Integer, resultCount As Integer, keep0 As Integer, keep1 As Integer, keep2 As Integer, keep3 As Integer) As Boolean
  overload: AngeliA.ItemSystem.TryGetCombination*
  nameWithType.vb: ItemSystem.TryGetCombination(Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.ItemSystem.TryGetCombination(Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
  name.vb: TryGetCombination(Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
- uid: AngeliA.ItemSystem.ClearCombination
  commentId: M:AngeliA.ItemSystem.ClearCombination
  id: ClearCombination
  parent: AngeliA.ItemSystem
  langs:
  - csharp
  - vb
  name: ClearCombination()
  nameWithType: ItemSystem.ClearCombination()
  fullName: AngeliA.ItemSystem.ClearCombination()
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Item/ItemSystem.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ClearCombination
    path: ../../AngeliA/AngeliA Framework/src/Item/ItemSystem.cs
    startLine: 356
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Reset the system craft combination pool
  example: []
  syntax:
    content: public static void ClearCombination()
    content.vb: Public Shared Sub ClearCombination()
  overload: AngeliA.ItemSystem.ClearCombination*
- uid: AngeliA.ItemSystem.GetRelatedCombinations(AngeliA.Int4,System.Collections.Generic.List{AngeliA.Int4},System.Int32)
  commentId: M:AngeliA.ItemSystem.GetRelatedCombinations(AngeliA.Int4,System.Collections.Generic.List{AngeliA.Int4},System.Int32)
  id: GetRelatedCombinations(AngeliA.Int4,System.Collections.Generic.List{AngeliA.Int4},System.Int32)
  parent: AngeliA.ItemSystem
  langs:
  - csharp
  - vb
  name: GetRelatedCombinations(Int4, List<Int4>, int)
  nameWithType: ItemSystem.GetRelatedCombinations(Int4, List<Int4>, int)
  fullName: AngeliA.ItemSystem.GetRelatedCombinations(AngeliA.Int4, System.Collections.Generic.List<AngeliA.Int4>, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Item/ItemSystem.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetRelatedCombinations
    path: ../../AngeliA/AngeliA Framework/src/Item/ItemSystem.cs
    startLine: 365
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get all craft combination that include the given combination. This is for making a helper list for the user to know what items can they craft.
  example: []
  syntax:
    content: public static void GetRelatedCombinations(Int4 combination, List<Int4> output, int materialCountLimit)
    parameters:
    - id: combination
      type: AngeliA.Int4
      description: Current combination the user putted into the crafting fields
    - id: output
      type: System.Collections.Generic.List{AngeliA.Int4}
      description: The helper list data
    - id: materialCountLimit
      type: System.Int32
      description: Combinations which have more source items than this number will be ignored
    content.vb: Public Shared Sub GetRelatedCombinations(combination As Int4, output As List(Of Int4), materialCountLimit As Integer)
  overload: AngeliA.ItemSystem.GetRelatedCombinations*
  nameWithType.vb: ItemSystem.GetRelatedCombinations(Int4, List(Of Int4), Integer)
  fullName.vb: AngeliA.ItemSystem.GetRelatedCombinations(AngeliA.Int4, System.Collections.Generic.List(Of AngeliA.Int4), Integer)
  name.vb: GetRelatedCombinations(Int4, List(Of Int4), Integer)
- uid: AngeliA.ItemSystem.GetSortedCombination(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.ItemSystem.GetSortedCombination(System.Int32,System.Int32,System.Int32,System.Int32)
  id: GetSortedCombination(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: AngeliA.ItemSystem
  langs:
  - csharp
  - vb
  name: GetSortedCombination(int, int, int, int)
  nameWithType: ItemSystem.GetSortedCombination(int, int, int, int)
  fullName: AngeliA.ItemSystem.GetSortedCombination(int, int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Item/ItemSystem.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetSortedCombination
    path: ../../AngeliA/AngeliA Framework/src/Item/ItemSystem.cs
    startLine: 411
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Sort the given combination to make it always unique no matter what order the source items are
  example: []
  syntax:
    content: public static Int4 GetSortedCombination(int a, int b, int c, int d)
    parameters:
    - id: a
      type: System.Int32
      description: Crafting source item ID
    - id: b
      type: System.Int32
      description: Crafting source item ID
    - id: c
      type: System.Int32
      description: Crafting source item ID
    - id: d
      type: System.Int32
      description: Crafting source item ID
    return:
      type: AngeliA.Int4
      description: Sorted combination ID
    content.vb: Public Shared Function GetSortedCombination(a As Integer, b As Integer, c As Integer, d As Integer) As Int4
  overload: AngeliA.ItemSystem.GetSortedCombination*
  nameWithType.vb: ItemSystem.GetSortedCombination(Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.ItemSystem.GetSortedCombination(Integer, Integer, Integer, Integer)
  name.vb: GetSortedCombination(Integer, Integer, Integer, Integer)
- uid: AngeliA.ItemSystem.ForAllCombinations
  commentId: M:AngeliA.ItemSystem.ForAllCombinations
  id: ForAllCombinations
  parent: AngeliA.ItemSystem
  langs:
  - csharp
  - vb
  name: ForAllCombinations()
  nameWithType: ItemSystem.ForAllCombinations()
  fullName: AngeliA.ItemSystem.ForAllCombinations()
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Item/ItemSystem.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ForAllCombinations
    path: ../../AngeliA/AngeliA Framework/src/Item/ItemSystem.cs
    startLine: 458
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Iterate through all crafting combination inside the pool
  example:
  - >-
    <pre><code class="lang-csharp">using AngeliA;


    namespace AngeliaGame;


    public class Example {

    	[OnGameInitializeLater(4096)]
    	internal static void OnGameUpdate () {
    		Debug.Log("All item combinations inside this game:");
    		foreach (var com in ItemSystem.ForAllCombinations()) {
    			string name0 = ItemSystem.GetItemDisplayName(com.Key.x);
    			string name1 = ItemSystem.GetItemDisplayName(com.Key.y);
    			string name2 = ItemSystem.GetItemDisplayName(com.Key.z);
    			string name3 = ItemSystem.GetItemDisplayName(com.Key.w);
    			string nameResult = ItemSystem.GetItemDisplayName(com.Value);
    			Debug.Log($"{name0} + {name1} + {name2} + {name3} = {nameResult}");
    		}
    	}

    }</code></pre>
  syntax:
    content: public static IEnumerable<KeyValuePair<Int4, int>> ForAllCombinations()
    return:
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{AngeliA.Int4,System.Int32}}
    content.vb: Public Shared Function ForAllCombinations() As IEnumerable(Of KeyValuePair(Of Int4, Integer))
  overload: AngeliA.ItemSystem.ForAllCombinations*
- uid: AngeliA.ItemSystem.IsEquipment(System.Int32)
  commentId: M:AngeliA.ItemSystem.IsEquipment(System.Int32)
  id: IsEquipment(System.Int32)
  parent: AngeliA.ItemSystem
  langs:
  - csharp
  - vb
  name: IsEquipment(int)
  nameWithType: ItemSystem.IsEquipment(int)
  fullName: AngeliA.ItemSystem.IsEquipment(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Item/ItemSystem.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IsEquipment
    path: ../../AngeliA/AngeliA Framework/src/Item/ItemSystem.cs
    startLine: 467
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: True if the given item is equipment type
  example: []
  syntax:
    content: public static bool IsEquipment(int itemID)
    parameters:
    - id: itemID
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsEquipment(itemID As Integer) As Boolean
  overload: AngeliA.ItemSystem.IsEquipment*
  nameWithType.vb: ItemSystem.IsEquipment(Integer)
  fullName.vb: AngeliA.ItemSystem.IsEquipment(Integer)
  name.vb: IsEquipment(Integer)
- uid: AngeliA.ItemSystem.IsEquipment(System.Int32,AngeliA.EquipmentType@)
  commentId: M:AngeliA.ItemSystem.IsEquipment(System.Int32,AngeliA.EquipmentType@)
  id: IsEquipment(System.Int32,AngeliA.EquipmentType@)
  parent: AngeliA.ItemSystem
  langs:
  - csharp
  - vb
  name: IsEquipment(int, out EquipmentType)
  nameWithType: ItemSystem.IsEquipment(int, out EquipmentType)
  fullName: AngeliA.ItemSystem.IsEquipment(int, out AngeliA.EquipmentType)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Item/ItemSystem.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IsEquipment
    path: ../../AngeliA/AngeliA Framework/src/Item/ItemSystem.cs
    startLine: 471
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: True if the given item is equipment type
  example: []
  syntax:
    content: public static bool IsEquipment(int itemID, out EquipmentType type)
    parameters:
    - id: itemID
      type: System.Int32
    - id: type
      type: AngeliA.EquipmentType
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsEquipment(itemID As Integer, type As EquipmentType) As Boolean
  overload: AngeliA.ItemSystem.IsEquipment*
  nameWithType.vb: ItemSystem.IsEquipment(Integer, EquipmentType)
  fullName.vb: AngeliA.ItemSystem.IsEquipment(Integer, AngeliA.EquipmentType)
  name.vb: IsEquipment(Integer, EquipmentType)
- uid: AngeliA.ItemSystem.IsItemUnlocked(System.Int32)
  commentId: M:AngeliA.ItemSystem.IsItemUnlocked(System.Int32)
  id: IsItemUnlocked(System.Int32)
  parent: AngeliA.ItemSystem
  langs:
  - csharp
  - vb
  name: IsItemUnlocked(int)
  nameWithType: ItemSystem.IsItemUnlocked(int)
  fullName: AngeliA.ItemSystem.IsItemUnlocked(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Item/ItemSystem.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IsItemUnlocked
    path: ../../AngeliA/AngeliA Framework/src/Item/ItemSystem.cs
    startLine: 485
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: True if the given item is unlocked. Locked items will display as "?" in crafting UI helper menu
  example: []
  syntax:
    content: public static bool IsItemUnlocked(int itemID)
    parameters:
    - id: itemID
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsItemUnlocked(itemID As Integer) As Boolean
  overload: AngeliA.ItemSystem.IsItemUnlocked*
  nameWithType.vb: ItemSystem.IsItemUnlocked(Integer)
  fullName.vb: AngeliA.ItemSystem.IsItemUnlocked(Integer)
  name.vb: IsItemUnlocked(Integer)
- uid: AngeliA.ItemSystem.SetItemUnlocked(System.Int32,System.Boolean)
  commentId: M:AngeliA.ItemSystem.SetItemUnlocked(System.Int32,System.Boolean)
  id: SetItemUnlocked(System.Int32,System.Boolean)
  parent: AngeliA.ItemSystem
  langs:
  - csharp
  - vb
  name: SetItemUnlocked(int, bool)
  nameWithType: ItemSystem.SetItemUnlocked(int, bool)
  fullName: AngeliA.ItemSystem.SetItemUnlocked(int, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Item/ItemSystem.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SetItemUnlocked
    path: ../../AngeliA/AngeliA Framework/src/Item/ItemSystem.cs
    startLine: 491
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Set given item into locked or unlocked. Locked items will display as "?" in crafting UI helper menu
  example: []
  syntax:
    content: public static void SetItemUnlocked(int itemID, bool unlocked)
    parameters:
    - id: itemID
      type: System.Int32
    - id: unlocked
      type: System.Boolean
    content.vb: Public Shared Sub SetItemUnlocked(itemID As Integer, unlocked As Boolean)
  overload: AngeliA.ItemSystem.SetItemUnlocked*
  nameWithType.vb: ItemSystem.SetItemUnlocked(Integer, Boolean)
  fullName.vb: AngeliA.ItemSystem.SetItemUnlocked(Integer, Boolean)
  name.vb: SetItemUnlocked(Integer, Boolean)
- uid: AngeliA.ItemSystem.SpawnItem(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  commentId: M:AngeliA.ItemSystem.SpawnItem(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  id: SpawnItem(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  parent: AngeliA.ItemSystem
  langs:
  - csharp
  - vb
  name: SpawnItem(int, int, int, int, bool)
  nameWithType: ItemSystem.SpawnItem(int, int, int, int, bool)
  fullName: AngeliA.ItemSystem.SpawnItem(int, int, int, int, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Item/ItemSystem.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SpawnItem
    path: ../../AngeliA/AngeliA Framework/src/Item/ItemSystem.cs
    startLine: 511
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Spawn an item holder entity that holds the given item.
  example: []
  syntax:
    content: public static ItemHolder SpawnItem(int itemID, int x, int y, int count = 1, bool jump = true)
    parameters:
    - id: itemID
      type: System.Int32
      description: Target item id
    - id: x
      type: System.Int32
      description: Position X of the item holder in global space
    - id: y
      type: System.Int32
      description: Position Y of the item holder in global space
    - id: count
      type: System.Int32
      description: Count of the target item inside the item holder. This function always spawn only one item holder entity.
    - id: jump
      type: System.Boolean
      description: True if the item holder entity jump up when it spawns
    return:
      type: AngeliA.ItemHolder
      description: Instance of the item holder entity
    content.vb: Public Shared Function SpawnItem(itemID As Integer, x As Integer, y As Integer, count As Integer = 1, jump As Boolean = True) As ItemHolder
  overload: AngeliA.ItemSystem.SpawnItem*
  nameWithType.vb: ItemSystem.SpawnItem(Integer, Integer, Integer, Integer, Boolean)
  fullName.vb: AngeliA.ItemSystem.SpawnItem(Integer, Integer, Integer, Integer, Boolean)
  name.vb: SpawnItem(Integer, Integer, Integer, Integer, Boolean)
- uid: AngeliA.ItemSystem.DropItemFor(AngeliA.Entity)
  commentId: M:AngeliA.ItemSystem.DropItemFor(AngeliA.Entity)
  id: DropItemFor(AngeliA.Entity)
  parent: AngeliA.ItemSystem
  langs:
  - csharp
  - vb
  name: DropItemFor(Entity)
  nameWithType: ItemSystem.DropItemFor(Entity)
  fullName: AngeliA.ItemSystem.DropItemFor(AngeliA.Entity)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Item/ItemSystem.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DropItemFor
    path: ../../AngeliA/AngeliA Framework/src/Item/ItemSystem.cs
    startLine: 528
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Perform an item drop the target entity when the entity is destroyed
  example: []
  syntax:
    content: public static bool DropItemFor(Entity entity)
    parameters:
    - id: entity
      type: AngeliA.Entity
    return:
      type: System.Boolean
      description: True if the item drop successfuly performs
    content.vb: Public Shared Function DropItemFor(entity As Entity) As Boolean
  overload: AngeliA.ItemSystem.DropItemFor*
- uid: AngeliA.ItemSystem.DropItemFor(System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.ItemSystem.DropItemFor(System.Int32,System.Int32,System.Int32)
  id: DropItemFor(System.Int32,System.Int32,System.Int32)
  parent: AngeliA.ItemSystem
  langs:
  - csharp
  - vb
  name: DropItemFor(int, int, int)
  nameWithType: ItemSystem.DropItemFor(int, int, int)
  fullName: AngeliA.ItemSystem.DropItemFor(int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Item/ItemSystem.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DropItemFor
    path: ../../AngeliA/AngeliA Framework/src/Item/ItemSystem.cs
    startLine: 537
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Perform an item drop the target entity when the entity is destroyed
  example: []
  syntax:
    content: public static bool DropItemFor(int sourceID, int x, int y)
    parameters:
    - id: sourceID
      type: System.Int32
      description: ID of the target entity
    - id: x
      type: System.Int32
      description: Position X of the item holder appears in global space
    - id: y
      type: System.Int32
      description: Position Y of the item holder appears in global space
    return:
      type: System.Boolean
      description: True if the item drop successfuly performs
    content.vb: Public Shared Function DropItemFor(sourceID As Integer, x As Integer, y As Integer) As Boolean
  overload: AngeliA.ItemSystem.DropItemFor*
  nameWithType.vb: ItemSystem.DropItemFor(Integer, Integer, Integer)
  fullName.vb: AngeliA.ItemSystem.DropItemFor(Integer, Integer, Integer)
  name.vb: DropItemFor(Integer, Integer, Integer)
references:
- uid: AngeliA
  commentId: N:AngeliA
  href: AngeliA.html
  name: AngeliA
  nameWithType: AngeliA
  fullName: AngeliA
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AngeliA.ItemSystem.ItemPoolReady*
  commentId: Overload:AngeliA.ItemSystem.ItemPoolReady
  href: AngeliA.ItemSystem.html#AngeliA_ItemSystem_ItemPoolReady
  name: ItemPoolReady
  nameWithType: ItemSystem.ItemPoolReady
  fullName: AngeliA.ItemSystem.ItemPoolReady
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: AngeliA.ItemSystem.ItemUnlockReady*
  commentId: Overload:AngeliA.ItemSystem.ItemUnlockReady
  href: AngeliA.ItemSystem.html#AngeliA_ItemSystem_ItemUnlockReady
  name: ItemUnlockReady
  nameWithType: ItemSystem.ItemUnlockReady
  fullName: AngeliA.ItemSystem.ItemUnlockReady
- uid: AngeliA.ItemSystem.GetItem*
  commentId: Overload:AngeliA.ItemSystem.GetItem
  href: AngeliA.ItemSystem.html#AngeliA_ItemSystem_GetItem_System_Int32_
  name: GetItem
  nameWithType: ItemSystem.GetItem
  fullName: AngeliA.ItemSystem.GetItem
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: AngeliA.Item
  commentId: T:AngeliA.Item
  parent: AngeliA
  href: AngeliA.Item.html
  name: Item
  nameWithType: Item
  fullName: AngeliA.Item
- uid: AngeliA.ItemSystem.GetItemDisplayName*
  commentId: Overload:AngeliA.ItemSystem.GetItemDisplayName
  href: AngeliA.ItemSystem.html#AngeliA_ItemSystem_GetItemDisplayName_System_Int32_
  name: GetItemDisplayName
  nameWithType: ItemSystem.GetItemDisplayName
  fullName: AngeliA.ItemSystem.GetItemDisplayName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AngeliA.ItemSystem.GetItemDescription*
  commentId: Overload:AngeliA.ItemSystem.GetItemDescription
  href: AngeliA.ItemSystem.html#AngeliA_ItemSystem_GetItemDescription_System_Int32_
  name: GetItemDescription
  nameWithType: ItemSystem.GetItemDescription
  fullName: AngeliA.ItemSystem.GetItemDescription
- uid: AngeliA.ItemSystem.GetItemMaxStackCount*
  commentId: Overload:AngeliA.ItemSystem.GetItemMaxStackCount
  href: AngeliA.ItemSystem.html#AngeliA_ItemSystem_GetItemMaxStackCount_System_Int32_
  name: GetItemMaxStackCount
  nameWithType: ItemSystem.GetItemMaxStackCount
  fullName: AngeliA.ItemSystem.GetItemMaxStackCount
- uid: AngeliA.ItemSystem.HasItem*
  commentId: Overload:AngeliA.ItemSystem.HasItem
  href: AngeliA.ItemSystem.html#AngeliA_ItemSystem_HasItem_System_Int32_
  name: HasItem
  nameWithType: ItemSystem.HasItem
  fullName: AngeliA.ItemSystem.HasItem
- uid: AngeliA.ItemSystem.CanUseItem*
  commentId: Overload:AngeliA.ItemSystem.CanUseItem
  href: AngeliA.ItemSystem.html#AngeliA_ItemSystem_CanUseItem_System_Int32_AngeliA_Character_
  name: CanUseItem
  nameWithType: ItemSystem.CanUseItem
  fullName: AngeliA.ItemSystem.CanUseItem
- uid: AngeliA.Character
  commentId: T:AngeliA.Character
  parent: AngeliA
  href: AngeliA.Character.html
  name: Character
  nameWithType: Character
  fullName: AngeliA.Character
- uid: AngeliA.ItemSystem.TryGetCombination*
  commentId: Overload:AngeliA.ItemSystem.TryGetCombination
  href: AngeliA.ItemSystem.html#AngeliA_ItemSystem_TryGetCombination_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32__System_Int32__System_Int32__System_Int32__System_Int32__System_Int32__
  name: TryGetCombination
  nameWithType: ItemSystem.TryGetCombination
  fullName: AngeliA.ItemSystem.TryGetCombination
- uid: AngeliA.ItemSystem.ClearCombination*
  commentId: Overload:AngeliA.ItemSystem.ClearCombination
  href: AngeliA.ItemSystem.html#AngeliA_ItemSystem_ClearCombination
  name: ClearCombination
  nameWithType: ItemSystem.ClearCombination
  fullName: AngeliA.ItemSystem.ClearCombination
- uid: AngeliA.ItemSystem.GetRelatedCombinations*
  commentId: Overload:AngeliA.ItemSystem.GetRelatedCombinations
  href: AngeliA.ItemSystem.html#AngeliA_ItemSystem_GetRelatedCombinations_AngeliA_Int4_System_Collections_Generic_List_AngeliA_Int4__System_Int32_
  name: GetRelatedCombinations
  nameWithType: ItemSystem.GetRelatedCombinations
  fullName: AngeliA.ItemSystem.GetRelatedCombinations
- uid: AngeliA.Int4
  commentId: T:AngeliA.Int4
  parent: AngeliA
  href: AngeliA.Int4.html
  name: Int4
  nameWithType: Int4
  fullName: AngeliA.Int4
- uid: System.Collections.Generic.List{AngeliA.Int4}
  commentId: T:System.Collections.Generic.List{AngeliA.Int4}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Int4>
  nameWithType: List<Int4>
  fullName: System.Collections.Generic.List<AngeliA.Int4>
  nameWithType.vb: List(Of Int4)
  fullName.vb: System.Collections.Generic.List(Of AngeliA.Int4)
  name.vb: List(Of Int4)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: AngeliA.Int4
    name: Int4
    href: AngeliA.Int4.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: AngeliA.Int4
    name: Int4
    href: AngeliA.Int4.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: AngeliA.ItemSystem.GetSortedCombination*
  commentId: Overload:AngeliA.ItemSystem.GetSortedCombination
  href: AngeliA.ItemSystem.html#AngeliA_ItemSystem_GetSortedCombination_System_Int32_System_Int32_System_Int32_System_Int32_
  name: GetSortedCombination
  nameWithType: ItemSystem.GetSortedCombination
  fullName: AngeliA.ItemSystem.GetSortedCombination
- uid: AngeliA.ItemSystem.ForAllCombinations*
  commentId: Overload:AngeliA.ItemSystem.ForAllCombinations
  href: AngeliA.ItemSystem.html#AngeliA_ItemSystem_ForAllCombinations
  name: ForAllCombinations
  nameWithType: ItemSystem.ForAllCombinations
  fullName: AngeliA.ItemSystem.ForAllCombinations
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{AngeliA.Int4,System.Int32}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{AngeliA.Int4,System.Int32}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<KeyValuePair<Int4, int>>
  nameWithType: IEnumerable<KeyValuePair<Int4, int>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<AngeliA.Int4, int>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of Int4, Integer))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of AngeliA.Int4, Integer))
  name.vb: IEnumerable(Of KeyValuePair(Of Int4, Integer))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - uid: AngeliA.Int4
    name: Int4
    href: AngeliA.Int4.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - uid: AngeliA.Int4
    name: Int4
    href: AngeliA.Int4.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: AngeliA.ItemSystem.IsEquipment*
  commentId: Overload:AngeliA.ItemSystem.IsEquipment
  href: AngeliA.ItemSystem.html#AngeliA_ItemSystem_IsEquipment_System_Int32_
  name: IsEquipment
  nameWithType: ItemSystem.IsEquipment
  fullName: AngeliA.ItemSystem.IsEquipment
- uid: AngeliA.EquipmentType
  commentId: T:AngeliA.EquipmentType
  parent: AngeliA
  href: AngeliA.EquipmentType.html
  name: EquipmentType
  nameWithType: EquipmentType
  fullName: AngeliA.EquipmentType
- uid: AngeliA.ItemSystem.IsItemUnlocked*
  commentId: Overload:AngeliA.ItemSystem.IsItemUnlocked
  href: AngeliA.ItemSystem.html#AngeliA_ItemSystem_IsItemUnlocked_System_Int32_
  name: IsItemUnlocked
  nameWithType: ItemSystem.IsItemUnlocked
  fullName: AngeliA.ItemSystem.IsItemUnlocked
- uid: AngeliA.ItemSystem.SetItemUnlocked*
  commentId: Overload:AngeliA.ItemSystem.SetItemUnlocked
  href: AngeliA.ItemSystem.html#AngeliA_ItemSystem_SetItemUnlocked_System_Int32_System_Boolean_
  name: SetItemUnlocked
  nameWithType: ItemSystem.SetItemUnlocked
  fullName: AngeliA.ItemSystem.SetItemUnlocked
- uid: AngeliA.ItemSystem.SpawnItem*
  commentId: Overload:AngeliA.ItemSystem.SpawnItem
  href: AngeliA.ItemSystem.html#AngeliA_ItemSystem_SpawnItem_System_Int32_System_Int32_System_Int32_System_Int32_System_Boolean_
  name: SpawnItem
  nameWithType: ItemSystem.SpawnItem
  fullName: AngeliA.ItemSystem.SpawnItem
- uid: AngeliA.ItemHolder
  commentId: T:AngeliA.ItemHolder
  parent: AngeliA
  href: AngeliA.ItemHolder.html
  name: ItemHolder
  nameWithType: ItemHolder
  fullName: AngeliA.ItemHolder
- uid: AngeliA.ItemSystem.DropItemFor*
  commentId: Overload:AngeliA.ItemSystem.DropItemFor
  href: AngeliA.ItemSystem.html#AngeliA_ItemSystem_DropItemFor_AngeliA_Entity_
  name: DropItemFor
  nameWithType: ItemSystem.DropItemFor
  fullName: AngeliA.ItemSystem.DropItemFor
- uid: AngeliA.Entity
  commentId: T:AngeliA.Entity
  parent: AngeliA
  href: AngeliA.Entity.html
  name: Entity
  nameWithType: Entity
  fullName: AngeliA.Entity
