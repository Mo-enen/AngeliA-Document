### YamlMime:ManagedReference
items:
- uid: AngeliA.CellScreenshotSystem
  commentId: T:AngeliA.CellScreenshotSystem
  id: CellScreenshotSystem
  parent: AngeliA
  children:
  - AngeliA.CellScreenshotSystem.Count
  - AngeliA.CellScreenshotSystem.DeleteScreenshot(System.Int32,System.Boolean)
  - AngeliA.CellScreenshotSystem.DrawScreenshot(AngeliA.CellScreenshotSystem.Screenshot,AngeliA.IRect,AngeliA.Color32,System.Int32,System.Int32,System.Boolean)
  - AngeliA.CellScreenshotSystem.DrawScreenshot(AngeliA.CellScreenshotSystem.Screenshot,AngeliA.IRect,AngeliA.FRect,AngeliA.Color32,System.Int32,System.Int32,System.Boolean)
  - AngeliA.CellScreenshotSystem.DrawScreenshot(AngeliA.CellScreenshotSystem.Screenshot,AngeliA.IRect,AngeliA.FRect,System.Int32,System.Int32,System.Boolean)
  - AngeliA.CellScreenshotSystem.DrawScreenshot(AngeliA.CellScreenshotSystem.Screenshot,AngeliA.IRect,System.Int32,System.Int32,System.Boolean)
  - AngeliA.CellScreenshotSystem.GetScreenshot(System.Int32)
  - AngeliA.CellScreenshotSystem.RequireTakeScreenshot(AngeliA.IRect,System.Int32)
  - AngeliA.CellScreenshotSystem.SetScreenshotLock(System.Int32,System.Boolean)
  - AngeliA.CellScreenshotSystem.TakeScreenshotImmediately(AngeliA.IRect,System.Boolean)
  langs:
  - csharp
  - vb
  name: CellScreenshotSystem
  nameWithType: CellScreenshotSystem
  fullName: AngeliA.CellScreenshotSystem
  type: Class
  source:
    remote:
      path: AngeliA Framework/src/Core/CellScreenshotSystem.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: CellScreenshotSystem
    path: ../../AngeliA/AngeliA Framework/src/Core/CellScreenshotSystem.cs
    startLine: 9
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Core system to take screenshot based on rendering cells and save them into file
  example: []
  syntax:
    content: public static class CellScreenshotSystem
    content.vb: Public Module CellScreenshotSystem
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: AngeliA.CellScreenshotSystem.Count
  commentId: P:AngeliA.CellScreenshotSystem.Count
  id: Count
  parent: AngeliA.CellScreenshotSystem
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: CellScreenshotSystem.Count
  fullName: AngeliA.CellScreenshotSystem.Count
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Core/CellScreenshotSystem.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Count
    path: ../../AngeliA/AngeliA Framework/src/Core/CellScreenshotSystem.cs
    startLine: 185
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Screenshot data count inside the current system
  example: []
  syntax:
    content: public static int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly Property Count As Integer
  overload: AngeliA.CellScreenshotSystem.Count*
- uid: AngeliA.CellScreenshotSystem.RequireTakeScreenshot(AngeliA.IRect,System.Int32)
  commentId: M:AngeliA.CellScreenshotSystem.RequireTakeScreenshot(AngeliA.IRect,System.Int32)
  id: RequireTakeScreenshot(AngeliA.IRect,System.Int32)
  parent: AngeliA.CellScreenshotSystem
  langs:
  - csharp
  - vb
  name: RequireTakeScreenshot(IRect, int)
  nameWithType: CellScreenshotSystem.RequireTakeScreenshot(IRect, int)
  fullName: AngeliA.CellScreenshotSystem.RequireTakeScreenshot(AngeliA.IRect, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/CellScreenshotSystem.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: RequireTakeScreenshot
    path: ../../AngeliA/AngeliA Framework/src/Core/CellScreenshotSystem.cs
    startLine: 241
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Take screenshot at given range in global space when all cells at this frame is rendered. Result will be saved into system list.
  example: []
  syntax:
    content: public static void RequireTakeScreenshot(IRect cameraRange, int delay = 0)
    parameters:
    - id: cameraRange
      type: AngeliA.IRect
      description: ''
    - id: delay
      type: System.Int32
      description: Time delay in frame
    content.vb: Public Shared Sub RequireTakeScreenshot(cameraRange As IRect, delay As Integer = 0)
  overload: AngeliA.CellScreenshotSystem.RequireTakeScreenshot*
  nameWithType.vb: CellScreenshotSystem.RequireTakeScreenshot(IRect, Integer)
  fullName.vb: AngeliA.CellScreenshotSystem.RequireTakeScreenshot(AngeliA.IRect, Integer)
  name.vb: RequireTakeScreenshot(IRect, Integer)
- uid: AngeliA.CellScreenshotSystem.TakeScreenshotImmediately(AngeliA.IRect,System.Boolean)
  commentId: M:AngeliA.CellScreenshotSystem.TakeScreenshotImmediately(AngeliA.IRect,System.Boolean)
  id: TakeScreenshotImmediately(AngeliA.IRect,System.Boolean)
  parent: AngeliA.CellScreenshotSystem
  langs:
  - csharp
  - vb
  name: TakeScreenshotImmediately(IRect, bool)
  nameWithType: CellScreenshotSystem.TakeScreenshotImmediately(IRect, bool)
  fullName: AngeliA.CellScreenshotSystem.TakeScreenshotImmediately(AngeliA.IRect, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/CellScreenshotSystem.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TakeScreenshotImmediately
    path: ../../AngeliA/AngeliA Framework/src/Core/CellScreenshotSystem.cs
    startLine: 253
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Take screenshot at given range in global space no matter rendering cells are all exists for current frame
  example: []
  syntax:
    content: public static CellScreenshotSystem.Screenshot TakeScreenshotImmediately(IRect cameraRange, bool saveToSystem = true)
    parameters:
    - id: cameraRange
      type: AngeliA.IRect
      description: ''
    - id: saveToSystem
      type: System.Boolean
      description: True if save this screenshot into system list
    return:
      type: AngeliA.CellScreenshotSystem.Screenshot
      description: ''
    content.vb: Public Shared Function TakeScreenshotImmediately(cameraRange As IRect, saveToSystem As Boolean = True) As CellScreenshotSystem.Screenshot
  overload: AngeliA.CellScreenshotSystem.TakeScreenshotImmediately*
  nameWithType.vb: CellScreenshotSystem.TakeScreenshotImmediately(IRect, Boolean)
  fullName.vb: AngeliA.CellScreenshotSystem.TakeScreenshotImmediately(AngeliA.IRect, Boolean)
  name.vb: TakeScreenshotImmediately(IRect, Boolean)
- uid: AngeliA.CellScreenshotSystem.GetScreenshot(System.Int32)
  commentId: M:AngeliA.CellScreenshotSystem.GetScreenshot(System.Int32)
  id: GetScreenshot(System.Int32)
  parent: AngeliA.CellScreenshotSystem
  langs:
  - csharp
  - vb
  name: GetScreenshot(int)
  nameWithType: CellScreenshotSystem.GetScreenshot(int)
  fullName: AngeliA.CellScreenshotSystem.GetScreenshot(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/CellScreenshotSystem.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetScreenshot
    path: ../../AngeliA/AngeliA Framework/src/Core/CellScreenshotSystem.cs
    startLine: 291
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get screenshot from system list at given index.
  example: []
  syntax:
    content: public static CellScreenshotSystem.Screenshot GetScreenshot(int index)
    parameters:
    - id: index
      type: System.Int32
    return:
      type: AngeliA.CellScreenshotSystem.Screenshot
    content.vb: Public Shared Function GetScreenshot(index As Integer) As CellScreenshotSystem.Screenshot
  overload: AngeliA.CellScreenshotSystem.GetScreenshot*
  nameWithType.vb: CellScreenshotSystem.GetScreenshot(Integer)
  fullName.vb: AngeliA.CellScreenshotSystem.GetScreenshot(Integer)
  name.vb: GetScreenshot(Integer)
- uid: AngeliA.CellScreenshotSystem.DeleteScreenshot(System.Int32,System.Boolean)
  commentId: M:AngeliA.CellScreenshotSystem.DeleteScreenshot(System.Int32,System.Boolean)
  id: DeleteScreenshot(System.Int32,System.Boolean)
  parent: AngeliA.CellScreenshotSystem
  langs:
  - csharp
  - vb
  name: DeleteScreenshot(int, bool)
  nameWithType: CellScreenshotSystem.DeleteScreenshot(int, bool)
  fullName: AngeliA.CellScreenshotSystem.DeleteScreenshot(int, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/CellScreenshotSystem.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DeleteScreenshot
    path: ../../AngeliA/AngeliA Framework/src/Core/CellScreenshotSystem.cs
    startLine: 299
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Delete screenshot from system list at given index
  example: []
  syntax:
    content: public static void DeleteScreenshot(int index, bool dontDeleteLocked = true)
    parameters:
    - id: index
      type: System.Int32
      description: ''
    - id: dontDeleteLocked
      type: System.Boolean
      description: True if skip the locked ones
    content.vb: Public Shared Sub DeleteScreenshot(index As Integer, dontDeleteLocked As Boolean = True)
  overload: AngeliA.CellScreenshotSystem.DeleteScreenshot*
  nameWithType.vb: CellScreenshotSystem.DeleteScreenshot(Integer, Boolean)
  fullName.vb: AngeliA.CellScreenshotSystem.DeleteScreenshot(Integer, Boolean)
  name.vb: DeleteScreenshot(Integer, Boolean)
- uid: AngeliA.CellScreenshotSystem.SetScreenshotLock(System.Int32,System.Boolean)
  commentId: M:AngeliA.CellScreenshotSystem.SetScreenshotLock(System.Int32,System.Boolean)
  id: SetScreenshotLock(System.Int32,System.Boolean)
  parent: AngeliA.CellScreenshotSystem
  langs:
  - csharp
  - vb
  name: SetScreenshotLock(int, bool)
  nameWithType: CellScreenshotSystem.SetScreenshotLock(int, bool)
  fullName: AngeliA.CellScreenshotSystem.SetScreenshotLock(int, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/CellScreenshotSystem.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SetScreenshotLock
    path: ../../AngeliA/AngeliA Framework/src/Core/CellScreenshotSystem.cs
    startLine: 312
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Lock/unlock screenshot in system list at given index
  example: []
  syntax:
    content: public static void SetScreenshotLock(int index, bool locked)
    parameters:
    - id: index
      type: System.Int32
    - id: locked
      type: System.Boolean
    content.vb: Public Shared Sub SetScreenshotLock(index As Integer, locked As Boolean)
  overload: AngeliA.CellScreenshotSystem.SetScreenshotLock*
  nameWithType.vb: CellScreenshotSystem.SetScreenshotLock(Integer, Boolean)
  fullName.vb: AngeliA.CellScreenshotSystem.SetScreenshotLock(Integer, Boolean)
  name.vb: SetScreenshotLock(Integer, Boolean)
- uid: AngeliA.CellScreenshotSystem.DrawScreenshot(AngeliA.CellScreenshotSystem.Screenshot,AngeliA.IRect,System.Int32,System.Int32,System.Boolean)
  commentId: M:AngeliA.CellScreenshotSystem.DrawScreenshot(AngeliA.CellScreenshotSystem.Screenshot,AngeliA.IRect,System.Int32,System.Int32,System.Boolean)
  id: DrawScreenshot(AngeliA.CellScreenshotSystem.Screenshot,AngeliA.IRect,System.Int32,System.Int32,System.Boolean)
  parent: AngeliA.CellScreenshotSystem
  langs:
  - csharp
  - vb
  name: DrawScreenshot(Screenshot, IRect, int, int, bool)
  nameWithType: CellScreenshotSystem.DrawScreenshot(CellScreenshotSystem.Screenshot, IRect, int, int, bool)
  fullName: AngeliA.CellScreenshotSystem.DrawScreenshot(AngeliA.CellScreenshotSystem.Screenshot, AngeliA.IRect, int, int, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/CellScreenshotSystem.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawScreenshot
    path: ../../AngeliA/AngeliA Framework/src/Core/CellScreenshotSystem.cs
    startLine: 322
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Render given screen shot on screen
  example: []
  syntax:
    content: public static void DrawScreenshot(CellScreenshotSystem.Screenshot screenshot, IRect rect, int z = 0, int layer = 7, bool fit = true)
    parameters:
    - id: screenshot
      type: AngeliA.CellScreenshotSystem.Screenshot
      description: Screenshot data
    - id: rect
      type: AngeliA.IRect
      description: Global range to display this screenshot
    - id: z
      type: System.Int32
      description: Z value for sort rendering cells
    - id: layer
      type: System.Int32
      description: Rendering layer to draw into. Use RenderLayer.XXX to get this value.
    - id: fit
      type: System.Boolean
      description: True if resize the result without changing the aspect ratio
    content.vb: Public Shared Sub DrawScreenshot(screenshot As CellScreenshotSystem.Screenshot, rect As IRect, z As Integer = 0, layer As Integer = 7, fit As Boolean = True)
  overload: AngeliA.CellScreenshotSystem.DrawScreenshot*
  nameWithType.vb: CellScreenshotSystem.DrawScreenshot(CellScreenshotSystem.Screenshot, IRect, Integer, Integer, Boolean)
  fullName.vb: AngeliA.CellScreenshotSystem.DrawScreenshot(AngeliA.CellScreenshotSystem.Screenshot, AngeliA.IRect, Integer, Integer, Boolean)
  name.vb: DrawScreenshot(Screenshot, IRect, Integer, Integer, Boolean)
- uid: AngeliA.CellScreenshotSystem.DrawScreenshot(AngeliA.CellScreenshotSystem.Screenshot,AngeliA.IRect,AngeliA.FRect,System.Int32,System.Int32,System.Boolean)
  commentId: M:AngeliA.CellScreenshotSystem.DrawScreenshot(AngeliA.CellScreenshotSystem.Screenshot,AngeliA.IRect,AngeliA.FRect,System.Int32,System.Int32,System.Boolean)
  id: DrawScreenshot(AngeliA.CellScreenshotSystem.Screenshot,AngeliA.IRect,AngeliA.FRect,System.Int32,System.Int32,System.Boolean)
  parent: AngeliA.CellScreenshotSystem
  langs:
  - csharp
  - vb
  name: DrawScreenshot(Screenshot, IRect, FRect, int, int, bool)
  nameWithType: CellScreenshotSystem.DrawScreenshot(CellScreenshotSystem.Screenshot, IRect, FRect, int, int, bool)
  fullName: AngeliA.CellScreenshotSystem.DrawScreenshot(AngeliA.CellScreenshotSystem.Screenshot, AngeliA.IRect, AngeliA.FRect, int, int, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/CellScreenshotSystem.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawScreenshot
    path: ../../AngeliA/AngeliA Framework/src/Core/CellScreenshotSystem.cs
    startLine: 324
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Render given screen shot on screen
  example: []
  syntax:
    content: public static void DrawScreenshot(CellScreenshotSystem.Screenshot screenshot, IRect rect, FRect sourceRange, int z = 0, int layer = 7, bool fit = true)
    parameters:
    - id: screenshot
      type: AngeliA.CellScreenshotSystem.Screenshot
      description: Screenshot data
    - id: rect
      type: AngeliA.IRect
      description: Global range to display this screenshot
    - id: sourceRange
      type: AngeliA.FRect
      description: Which part of the screenshot should be display. ((0, 0, 1, 1) means all of them. (0, 0, 0.5, 1) means left half of them)
    - id: z
      type: System.Int32
      description: Z value for sort rendering cells
    - id: layer
      type: System.Int32
      description: Rendering layer to draw into. Use RenderLayer.XXX to get this value.
    - id: fit
      type: System.Boolean
      description: True if resize the result without changing the aspect ratio
    content.vb: Public Shared Sub DrawScreenshot(screenshot As CellScreenshotSystem.Screenshot, rect As IRect, sourceRange As FRect, z As Integer = 0, layer As Integer = 7, fit As Boolean = True)
  overload: AngeliA.CellScreenshotSystem.DrawScreenshot*
  nameWithType.vb: CellScreenshotSystem.DrawScreenshot(CellScreenshotSystem.Screenshot, IRect, FRect, Integer, Integer, Boolean)
  fullName.vb: AngeliA.CellScreenshotSystem.DrawScreenshot(AngeliA.CellScreenshotSystem.Screenshot, AngeliA.IRect, AngeliA.FRect, Integer, Integer, Boolean)
  name.vb: DrawScreenshot(Screenshot, IRect, FRect, Integer, Integer, Boolean)
- uid: AngeliA.CellScreenshotSystem.DrawScreenshot(AngeliA.CellScreenshotSystem.Screenshot,AngeliA.IRect,AngeliA.Color32,System.Int32,System.Int32,System.Boolean)
  commentId: M:AngeliA.CellScreenshotSystem.DrawScreenshot(AngeliA.CellScreenshotSystem.Screenshot,AngeliA.IRect,AngeliA.Color32,System.Int32,System.Int32,System.Boolean)
  id: DrawScreenshot(AngeliA.CellScreenshotSystem.Screenshot,AngeliA.IRect,AngeliA.Color32,System.Int32,System.Int32,System.Boolean)
  parent: AngeliA.CellScreenshotSystem
  langs:
  - csharp
  - vb
  name: DrawScreenshot(Screenshot, IRect, Color32, int, int, bool)
  nameWithType: CellScreenshotSystem.DrawScreenshot(CellScreenshotSystem.Screenshot, IRect, Color32, int, int, bool)
  fullName: AngeliA.CellScreenshotSystem.DrawScreenshot(AngeliA.CellScreenshotSystem.Screenshot, AngeliA.IRect, AngeliA.Color32, int, int, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/CellScreenshotSystem.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawScreenshot
    path: ../../AngeliA/AngeliA Framework/src/Core/CellScreenshotSystem.cs
    startLine: 326
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Render given screen shot on screen
  example: []
  syntax:
    content: public static void DrawScreenshot(CellScreenshotSystem.Screenshot screenshot, IRect rect, Color32 tint, int z = 0, int layer = 7, bool fit = true)
    parameters:
    - id: screenshot
      type: AngeliA.CellScreenshotSystem.Screenshot
      description: Screenshot data
    - id: rect
      type: AngeliA.IRect
      description: Global range to display this screenshot
    - id: tint
      type: AngeliA.Color32
      description: Color tint
    - id: z
      type: System.Int32
      description: Z value for sort rendering cells
    - id: layer
      type: System.Int32
      description: Rendering layer to draw into. Use RenderLayer.XXX to get this value.
    - id: fit
      type: System.Boolean
      description: True if resize the result without changing the aspect ratio
    content.vb: Public Shared Sub DrawScreenshot(screenshot As CellScreenshotSystem.Screenshot, rect As IRect, tint As Color32, z As Integer = 0, layer As Integer = 7, fit As Boolean = True)
  overload: AngeliA.CellScreenshotSystem.DrawScreenshot*
  nameWithType.vb: CellScreenshotSystem.DrawScreenshot(CellScreenshotSystem.Screenshot, IRect, Color32, Integer, Integer, Boolean)
  fullName.vb: AngeliA.CellScreenshotSystem.DrawScreenshot(AngeliA.CellScreenshotSystem.Screenshot, AngeliA.IRect, AngeliA.Color32, Integer, Integer, Boolean)
  name.vb: DrawScreenshot(Screenshot, IRect, Color32, Integer, Integer, Boolean)
- uid: AngeliA.CellScreenshotSystem.DrawScreenshot(AngeliA.CellScreenshotSystem.Screenshot,AngeliA.IRect,AngeliA.FRect,AngeliA.Color32,System.Int32,System.Int32,System.Boolean)
  commentId: M:AngeliA.CellScreenshotSystem.DrawScreenshot(AngeliA.CellScreenshotSystem.Screenshot,AngeliA.IRect,AngeliA.FRect,AngeliA.Color32,System.Int32,System.Int32,System.Boolean)
  id: DrawScreenshot(AngeliA.CellScreenshotSystem.Screenshot,AngeliA.IRect,AngeliA.FRect,AngeliA.Color32,System.Int32,System.Int32,System.Boolean)
  parent: AngeliA.CellScreenshotSystem
  langs:
  - csharp
  - vb
  name: DrawScreenshot(Screenshot, IRect, FRect, Color32, int, int, bool)
  nameWithType: CellScreenshotSystem.DrawScreenshot(CellScreenshotSystem.Screenshot, IRect, FRect, Color32, int, int, bool)
  fullName: AngeliA.CellScreenshotSystem.DrawScreenshot(AngeliA.CellScreenshotSystem.Screenshot, AngeliA.IRect, AngeliA.FRect, AngeliA.Color32, int, int, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Core/CellScreenshotSystem.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawScreenshot
    path: ../../AngeliA/AngeliA Framework/src/Core/CellScreenshotSystem.cs
    startLine: 337
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Render given screen shot on screen
  example: []
  syntax:
    content: public static void DrawScreenshot(CellScreenshotSystem.Screenshot screenshot, IRect rect, FRect sourceRange, Color32 tint, int z = 0, int layer = 7, bool fit = true)
    parameters:
    - id: screenshot
      type: AngeliA.CellScreenshotSystem.Screenshot
      description: Screenshot data
    - id: rect
      type: AngeliA.IRect
      description: Global range to display this screenshot
    - id: sourceRange
      type: AngeliA.FRect
      description: Which part of the screenshot should be display. ((0, 0, 1, 1) means all of them. (0, 0, 0.5, 1) means left half of them)
    - id: tint
      type: AngeliA.Color32
      description: Color tint
    - id: z
      type: System.Int32
      description: Z value for sort rendering cells
    - id: layer
      type: System.Int32
      description: Rendering layer to draw into. Use RenderLayer.XXX to get this value.
    - id: fit
      type: System.Boolean
      description: True if resize the result without changing the aspect ratio
    content.vb: Public Shared Sub DrawScreenshot(screenshot As CellScreenshotSystem.Screenshot, rect As IRect, sourceRange As FRect, tint As Color32, z As Integer = 0, layer As Integer = 7, fit As Boolean = True)
  overload: AngeliA.CellScreenshotSystem.DrawScreenshot*
  nameWithType.vb: CellScreenshotSystem.DrawScreenshot(CellScreenshotSystem.Screenshot, IRect, FRect, Color32, Integer, Integer, Boolean)
  fullName.vb: AngeliA.CellScreenshotSystem.DrawScreenshot(AngeliA.CellScreenshotSystem.Screenshot, AngeliA.IRect, AngeliA.FRect, AngeliA.Color32, Integer, Integer, Boolean)
  name.vb: DrawScreenshot(Screenshot, IRect, FRect, Color32, Integer, Integer, Boolean)
references:
- uid: AngeliA
  commentId: N:AngeliA
  href: AngeliA.html
  name: AngeliA
  nameWithType: AngeliA
  fullName: AngeliA
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AngeliA.CellScreenshotSystem.Count*
  commentId: Overload:AngeliA.CellScreenshotSystem.Count
  href: AngeliA.CellScreenshotSystem.html#AngeliA_CellScreenshotSystem_Count
  name: Count
  nameWithType: CellScreenshotSystem.Count
  fullName: AngeliA.CellScreenshotSystem.Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: AngeliA.CellScreenshotSystem.RequireTakeScreenshot*
  commentId: Overload:AngeliA.CellScreenshotSystem.RequireTakeScreenshot
  href: AngeliA.CellScreenshotSystem.html#AngeliA_CellScreenshotSystem_RequireTakeScreenshot_AngeliA_IRect_System_Int32_
  name: RequireTakeScreenshot
  nameWithType: CellScreenshotSystem.RequireTakeScreenshot
  fullName: AngeliA.CellScreenshotSystem.RequireTakeScreenshot
- uid: AngeliA.IRect
  commentId: T:AngeliA.IRect
  parent: AngeliA
  href: AngeliA.IRect.html
  name: IRect
  nameWithType: IRect
  fullName: AngeliA.IRect
- uid: AngeliA.CellScreenshotSystem.TakeScreenshotImmediately*
  commentId: Overload:AngeliA.CellScreenshotSystem.TakeScreenshotImmediately
  href: AngeliA.CellScreenshotSystem.html#AngeliA_CellScreenshotSystem_TakeScreenshotImmediately_AngeliA_IRect_System_Boolean_
  name: TakeScreenshotImmediately
  nameWithType: CellScreenshotSystem.TakeScreenshotImmediately
  fullName: AngeliA.CellScreenshotSystem.TakeScreenshotImmediately
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: AngeliA.CellScreenshotSystem.Screenshot
  commentId: T:AngeliA.CellScreenshotSystem.Screenshot
  parent: AngeliA
  href: AngeliA.CellScreenshotSystem.html
  name: CellScreenshotSystem.Screenshot
  nameWithType: CellScreenshotSystem.Screenshot
  fullName: AngeliA.CellScreenshotSystem.Screenshot
  spec.csharp:
  - uid: AngeliA.CellScreenshotSystem
    name: CellScreenshotSystem
    href: AngeliA.CellScreenshotSystem.html
  - name: .
  - uid: AngeliA.CellScreenshotSystem.Screenshot
    name: Screenshot
    href: AngeliA.CellScreenshotSystem.Screenshot.html
  spec.vb:
  - uid: AngeliA.CellScreenshotSystem
    name: CellScreenshotSystem
    href: AngeliA.CellScreenshotSystem.html
  - name: .
  - uid: AngeliA.CellScreenshotSystem.Screenshot
    name: Screenshot
    href: AngeliA.CellScreenshotSystem.Screenshot.html
- uid: AngeliA.CellScreenshotSystem.GetScreenshot*
  commentId: Overload:AngeliA.CellScreenshotSystem.GetScreenshot
  href: AngeliA.CellScreenshotSystem.html#AngeliA_CellScreenshotSystem_GetScreenshot_System_Int32_
  name: GetScreenshot
  nameWithType: CellScreenshotSystem.GetScreenshot
  fullName: AngeliA.CellScreenshotSystem.GetScreenshot
- uid: AngeliA.CellScreenshotSystem.DeleteScreenshot*
  commentId: Overload:AngeliA.CellScreenshotSystem.DeleteScreenshot
  href: AngeliA.CellScreenshotSystem.html#AngeliA_CellScreenshotSystem_DeleteScreenshot_System_Int32_System_Boolean_
  name: DeleteScreenshot
  nameWithType: CellScreenshotSystem.DeleteScreenshot
  fullName: AngeliA.CellScreenshotSystem.DeleteScreenshot
- uid: AngeliA.CellScreenshotSystem.SetScreenshotLock*
  commentId: Overload:AngeliA.CellScreenshotSystem.SetScreenshotLock
  href: AngeliA.CellScreenshotSystem.html#AngeliA_CellScreenshotSystem_SetScreenshotLock_System_Int32_System_Boolean_
  name: SetScreenshotLock
  nameWithType: CellScreenshotSystem.SetScreenshotLock
  fullName: AngeliA.CellScreenshotSystem.SetScreenshotLock
- uid: AngeliA.CellScreenshotSystem.DrawScreenshot*
  commentId: Overload:AngeliA.CellScreenshotSystem.DrawScreenshot
  href: AngeliA.CellScreenshotSystem.html#AngeliA_CellScreenshotSystem_DrawScreenshot_AngeliA_CellScreenshotSystem_Screenshot_AngeliA_IRect_System_Int32_System_Int32_System_Boolean_
  name: DrawScreenshot
  nameWithType: CellScreenshotSystem.DrawScreenshot
  fullName: AngeliA.CellScreenshotSystem.DrawScreenshot
- uid: AngeliA.FRect
  commentId: T:AngeliA.FRect
  parent: AngeliA
  href: AngeliA.FRect.html
  name: FRect
  nameWithType: FRect
  fullName: AngeliA.FRect
- uid: AngeliA.Color32
  commentId: T:AngeliA.Color32
  parent: AngeliA
  href: AngeliA.Color32.html
  name: Color32
  nameWithType: Color32
  fullName: AngeliA.Color32
