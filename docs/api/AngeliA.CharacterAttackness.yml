### YamlMime:ManagedReference
items:
- uid: AngeliA.CharacterAttackness
  commentId: T:AngeliA.CharacterAttackness
  id: CharacterAttackness
  parent: AngeliA
  children:
  - AngeliA.CharacterAttackness.#ctor(AngeliA.Character)
  - AngeliA.CharacterAttackness.AimingDirection
  - AngeliA.CharacterAttackness.AirSpeedRateOnAttack
  - AngeliA.CharacterAttackness.Attack(System.Boolean,System.Boolean)
  - AngeliA.CharacterAttackness.AttackChargeStartFrame
  - AngeliA.CharacterAttackness.AttackComboGap
  - AngeliA.CharacterAttackness.AttackCooldown
  - AngeliA.CharacterAttackness.AttackDuration
  - AngeliA.CharacterAttackness.AttackInAir
  - AngeliA.CharacterAttackness.AttackInWater
  - AngeliA.CharacterAttackness.AttackStartFacingRight
  - AngeliA.CharacterAttackness.AttackStyleIndex
  - AngeliA.CharacterAttackness.AttackWhenClimbing
  - AngeliA.CharacterAttackness.AttackWhenDashing
  - AngeliA.CharacterAttackness.AttackWhenFlying
  - AngeliA.CharacterAttackness.AttackWhenGrabbing
  - AngeliA.CharacterAttackness.AttackWhenPounding
  - AngeliA.CharacterAttackness.AttackWhenRolling
  - AngeliA.CharacterAttackness.AttackWhenRunning
  - AngeliA.CharacterAttackness.AttackWhenRush
  - AngeliA.CharacterAttackness.AttackWhenSliding
  - AngeliA.CharacterAttackness.AttackWhenSquatting
  - AngeliA.CharacterAttackness.AttackWhenWalking
  - AngeliA.CharacterAttackness.CancelAttack
  - AngeliA.CharacterAttackness.CancelAttackOnJump
  - AngeliA.CharacterAttackness.CancelIgnoreAttack
  - AngeliA.CharacterAttackness.DefaultSpeedRateOnAttack
  - AngeliA.CharacterAttackness.HoldAttackPunishFrame
  - AngeliA.CharacterAttackness.HoldingAttack
  - AngeliA.CharacterAttackness.IgnoreAimingDirection(AngeliA.Direction8,System.Int32)
  - AngeliA.CharacterAttackness.IgnoreAttack(System.Int32)
  - AngeliA.CharacterAttackness.IsAimingDirectionIgnored(AngeliA.Direction8)
  - AngeliA.CharacterAttackness.IsAttackIgnored
  - AngeliA.CharacterAttackness.IsAttacking
  - AngeliA.CharacterAttackness.IsChargingAttack
  - AngeliA.CharacterAttackness.LastAttackCharged
  - AngeliA.CharacterAttackness.LastAttackFrame
  - AngeliA.CharacterAttackness.LockFacingOnAttack
  - AngeliA.CharacterAttackness.MinimalChargeAttackDuration
  - AngeliA.CharacterAttackness.OnActivated
  - AngeliA.CharacterAttackness.PhysicsUpdate_Attack
  - AngeliA.CharacterAttackness.RepeatAttackWhenHolding
  - AngeliA.CharacterAttackness.RunningSpeedRateOnAttack
  - AngeliA.CharacterAttackness.TargetCharacter
  - AngeliA.CharacterAttackness.WalkingSpeedRateOnAttack
  langs:
  - csharp
  - vb
  name: CharacterAttackness
  nameWithType: CharacterAttackness
  fullName: AngeliA.CharacterAttackness
  type: Class
  source:
    remote:
      path: AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: CharacterAttackness
    path: ../../AngeliA/AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
    startLine: 8
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Behavior class that handles attack logic for character
  example: []
  syntax:
    content: public class CharacterAttackness
    content.vb: Public Class CharacterAttackness
  inheritance:
  - System.Object
  derivedClasses:
  - AngeliA.SummonAttackness
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.AngeliA.Extension.ForAllFields``1(System.Reflection.BindingFlags,System.Boolean)
  - System.Object.AngeliA.Extension.ForAllProperties``1
- uid: AngeliA.CharacterAttackness.#ctor(AngeliA.Character)
  commentId: M:AngeliA.CharacterAttackness.#ctor(AngeliA.Character)
  id: '#ctor(AngeliA.Character)'
  parent: AngeliA.CharacterAttackness
  langs:
  - csharp
  - vb
  name: CharacterAttackness(Character)
  nameWithType: CharacterAttackness.CharacterAttackness(Character)
  fullName: AngeliA.CharacterAttackness.CharacterAttackness(AngeliA.Character)
  type: Constructor
  source:
    remote:
      path: AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: .ctor
    path: ../../AngeliA/AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
    startLine: 8
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Behavior class that handles attack logic for character
  example: []
  syntax:
    content: public CharacterAttackness(Character character)
    parameters:
    - id: character
      type: AngeliA.Character
    content.vb: Public Sub New(character As Character)
  overload: AngeliA.CharacterAttackness.#ctor*
  nameWithType.vb: CharacterAttackness.New(Character)
  fullName.vb: AngeliA.CharacterAttackness.New(AngeliA.Character)
  name.vb: New(Character)
- uid: AngeliA.CharacterAttackness.TargetCharacter
  commentId: F:AngeliA.CharacterAttackness.TargetCharacter
  id: TargetCharacter
  parent: AngeliA.CharacterAttackness
  langs:
  - csharp
  - vb
  name: TargetCharacter
  nameWithType: CharacterAttackness.TargetCharacter
  fullName: AngeliA.CharacterAttackness.TargetCharacter
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TargetCharacter
    path: ../../AngeliA/AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
    startLine: 20
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Character hosting this attackness
  example: []
  syntax:
    content: public readonly Character TargetCharacter
    return:
      type: AngeliA.Character
    content.vb: Public ReadOnly TargetCharacter As Character
- uid: AngeliA.CharacterAttackness.AimingDirection
  commentId: P:AngeliA.CharacterAttackness.AimingDirection
  id: AimingDirection
  parent: AngeliA.CharacterAttackness
  langs:
  - csharp
  - vb
  name: AimingDirection
  nameWithType: CharacterAttackness.AimingDirection
  fullName: AngeliA.CharacterAttackness.AimingDirection
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: AimingDirection
    path: ../../AngeliA/AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
    startLine: 24
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Which direction does the character attacks
  example: []
  syntax:
    content: public Direction8 AimingDirection { get; set; }
    parameters: []
    return:
      type: AngeliA.Direction8
    content.vb: Public Property AimingDirection As Direction8
  overload: AngeliA.CharacterAttackness.AimingDirection*
- uid: AngeliA.CharacterAttackness.IsAttacking
  commentId: P:AngeliA.CharacterAttackness.IsAttacking
  id: IsAttacking
  parent: AngeliA.CharacterAttackness
  langs:
  - csharp
  - vb
  name: IsAttacking
  nameWithType: CharacterAttackness.IsAttacking
  fullName: AngeliA.CharacterAttackness.IsAttacking
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IsAttacking
    path: ../../AngeliA/AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
    startLine: 28
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: True if the character is attacking at the current frame
  example: []
  syntax:
    content: public bool IsAttacking { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsAttacking As Boolean
  overload: AngeliA.CharacterAttackness.IsAttacking*
- uid: AngeliA.CharacterAttackness.IsAttackIgnored
  commentId: P:AngeliA.CharacterAttackness.IsAttackIgnored
  id: IsAttackIgnored
  parent: AngeliA.CharacterAttackness
  langs:
  - csharp
  - vb
  name: IsAttackIgnored
  nameWithType: CharacterAttackness.IsAttackIgnored
  fullName: AngeliA.CharacterAttackness.IsAttackIgnored
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IsAttackIgnored
    path: ../../AngeliA/AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
    startLine: 32
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: True if the character is not allow to attack at the current frame
  example: []
  syntax:
    content: public bool IsAttackIgnored { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsAttackIgnored As Boolean
  overload: AngeliA.CharacterAttackness.IsAttackIgnored*
- uid: AngeliA.CharacterAttackness.IsChargingAttack
  commentId: P:AngeliA.CharacterAttackness.IsChargingAttack
  id: IsChargingAttack
  parent: AngeliA.CharacterAttackness
  langs:
  - csharp
  - vb
  name: IsChargingAttack
  nameWithType: CharacterAttackness.IsChargingAttack
  fullName: AngeliA.CharacterAttackness.IsChargingAttack
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IsChargingAttack
    path: ../../AngeliA/AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
    startLine: 36
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: True if the character is charging attack at the current frame
  example: []
  syntax:
    content: public bool IsChargingAttack { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsChargingAttack As Boolean
  overload: AngeliA.CharacterAttackness.IsChargingAttack*
- uid: AngeliA.CharacterAttackness.LastAttackFrame
  commentId: P:AngeliA.CharacterAttackness.LastAttackFrame
  id: LastAttackFrame
  parent: AngeliA.CharacterAttackness
  langs:
  - csharp
  - vb
  name: LastAttackFrame
  nameWithType: CharacterAttackness.LastAttackFrame
  fullName: AngeliA.CharacterAttackness.LastAttackFrame
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: LastAttackFrame
    path: ../../AngeliA/AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
    startLine: 40
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: The start frame of the last attack
  example: []
  syntax:
    content: public int LastAttackFrame { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property LastAttackFrame As Integer
  overload: AngeliA.CharacterAttackness.LastAttackFrame*
- uid: AngeliA.CharacterAttackness.AttackChargeStartFrame
  commentId: P:AngeliA.CharacterAttackness.AttackChargeStartFrame
  id: AttackChargeStartFrame
  parent: AngeliA.CharacterAttackness
  langs:
  - csharp
  - vb
  name: AttackChargeStartFrame
  nameWithType: CharacterAttackness.AttackChargeStartFrame
  fullName: AngeliA.CharacterAttackness.AttackChargeStartFrame
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: AttackChargeStartFrame
    path: ../../AngeliA/AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
    startLine: 44
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: The start frame of the last attack charging
  example: []
  syntax:
    content: public int? AttackChargeStartFrame { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property AttackChargeStartFrame As Integer?
  overload: AngeliA.CharacterAttackness.AttackChargeStartFrame*
- uid: AngeliA.CharacterAttackness.LastAttackCharged
  commentId: P:AngeliA.CharacterAttackness.LastAttackCharged
  id: LastAttackCharged
  parent: AngeliA.CharacterAttackness
  langs:
  - csharp
  - vb
  name: LastAttackCharged
  nameWithType: CharacterAttackness.LastAttackCharged
  fullName: AngeliA.CharacterAttackness.LastAttackCharged
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: LastAttackCharged
    path: ../../AngeliA/AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
    startLine: 48
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: True if the last performed attack is charged
  example: []
  syntax:
    content: public bool LastAttackCharged { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property LastAttackCharged As Boolean
  overload: AngeliA.CharacterAttackness.LastAttackCharged*
- uid: AngeliA.CharacterAttackness.AttackStyleIndex
  commentId: P:AngeliA.CharacterAttackness.AttackStyleIndex
  id: AttackStyleIndex
  parent: AngeliA.CharacterAttackness
  langs:
  - csharp
  - vb
  name: AttackStyleIndex
  nameWithType: CharacterAttackness.AttackStyleIndex
  fullName: AngeliA.CharacterAttackness.AttackStyleIndex
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: AttackStyleIndex
    path: ../../AngeliA/AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
    startLine: 52
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Attack style index of the current attack, indicate what kind of rendering style should be apply to the current attack
  example: []
  syntax:
    content: public int AttackStyleIndex { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property AttackStyleIndex As Integer
  overload: AngeliA.CharacterAttackness.AttackStyleIndex*
- uid: AngeliA.CharacterAttackness.AttackStartFacingRight
  commentId: P:AngeliA.CharacterAttackness.AttackStartFacingRight
  id: AttackStartFacingRight
  parent: AngeliA.CharacterAttackness
  langs:
  - csharp
  - vb
  name: AttackStartFacingRight
  nameWithType: CharacterAttackness.AttackStartFacingRight
  fullName: AngeliA.CharacterAttackness.AttackStartFacingRight
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: AttackStartFacingRight
    path: ../../AngeliA/AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
    startLine: 56
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: True if character facing right when the current attack start
  example: []
  syntax:
    content: public bool AttackStartFacingRight { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AttackStartFacingRight As Boolean
  overload: AngeliA.CharacterAttackness.AttackStartFacingRight*
- uid: AngeliA.CharacterAttackness.AttackDuration
  commentId: P:AngeliA.CharacterAttackness.AttackDuration
  id: AttackDuration
  parent: AngeliA.CharacterAttackness
  langs:
  - csharp
  - vb
  name: AttackDuration
  nameWithType: CharacterAttackness.AttackDuration
  fullName: AngeliA.CharacterAttackness.AttackDuration
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: AttackDuration
    path: ../../AngeliA/AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
    startLine: 60
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: How many frames should be the current attack last
  example: []
  syntax:
    content: public int AttackDuration { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property AttackDuration As Integer
  overload: AngeliA.CharacterAttackness.AttackDuration*
- uid: AngeliA.CharacterAttackness.AttackCooldown
  commentId: P:AngeliA.CharacterAttackness.AttackCooldown
  id: AttackCooldown
  parent: AngeliA.CharacterAttackness
  langs:
  - csharp
  - vb
  name: AttackCooldown
  nameWithType: CharacterAttackness.AttackCooldown
  fullName: AngeliA.CharacterAttackness.AttackCooldown
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: AttackCooldown
    path: ../../AngeliA/AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
    startLine: 64
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: How many frames should be wait from the prev attack end to the next attack start
  example: []
  syntax:
    content: public int AttackCooldown { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property AttackCooldown As Integer
  overload: AngeliA.CharacterAttackness.AttackCooldown*
- uid: AngeliA.CharacterAttackness.MinimalChargeAttackDuration
  commentId: P:AngeliA.CharacterAttackness.MinimalChargeAttackDuration
  id: MinimalChargeAttackDuration
  parent: AngeliA.CharacterAttackness
  langs:
  - csharp
  - vb
  name: MinimalChargeAttackDuration
  nameWithType: CharacterAttackness.MinimalChargeAttackDuration
  fullName: AngeliA.CharacterAttackness.MinimalChargeAttackDuration
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: MinimalChargeAttackDuration
    path: ../../AngeliA/AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
    startLine: 68
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Charge attack longer than this frame should be count as attack charged
  example: []
  syntax:
    content: public int MinimalChargeAttackDuration { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MinimalChargeAttackDuration As Integer
  overload: AngeliA.CharacterAttackness.MinimalChargeAttackDuration*
- uid: AngeliA.CharacterAttackness.RepeatAttackWhenHolding
  commentId: P:AngeliA.CharacterAttackness.RepeatAttackWhenHolding
  id: RepeatAttackWhenHolding
  parent: AngeliA.CharacterAttackness
  langs:
  - csharp
  - vb
  name: RepeatAttackWhenHolding
  nameWithType: CharacterAttackness.RepeatAttackWhenHolding
  fullName: AngeliA.CharacterAttackness.RepeatAttackWhenHolding
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: RepeatAttackWhenHolding
    path: ../../AngeliA/AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
    startLine: 72
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: True if the character can hold attack button to keep attacking multiple times
  example: []
  syntax:
    content: public bool RepeatAttackWhenHolding { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property RepeatAttackWhenHolding As Boolean
  overload: AngeliA.CharacterAttackness.RepeatAttackWhenHolding*
- uid: AngeliA.CharacterAttackness.HoldingAttack
  commentId: P:AngeliA.CharacterAttackness.HoldingAttack
  id: HoldingAttack
  parent: AngeliA.CharacterAttackness
  langs:
  - csharp
  - vb
  name: HoldingAttack
  nameWithType: CharacterAttackness.HoldingAttack
  fullName: AngeliA.CharacterAttackness.HoldingAttack
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: HoldingAttack
    path: ../../AngeliA/AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
    startLine: 76
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: True if the character is holding attack button
  example: []
  syntax:
    content: public bool HoldingAttack { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property HoldingAttack As Boolean
  overload: AngeliA.CharacterAttackness.HoldingAttack*
- uid: AngeliA.CharacterAttackness.LockFacingOnAttack
  commentId: P:AngeliA.CharacterAttackness.LockFacingOnAttack
  id: LockFacingOnAttack
  parent: AngeliA.CharacterAttackness
  langs:
  - csharp
  - vb
  name: LockFacingOnAttack
  nameWithType: CharacterAttackness.LockFacingOnAttack
  fullName: AngeliA.CharacterAttackness.LockFacingOnAttack
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: LockFacingOnAttack
    path: ../../AngeliA/AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
    startLine: 80
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: True if the character can not change it's facing direction when attacking
  example: []
  syntax:
    content: public bool LockFacingOnAttack { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property LockFacingOnAttack As Boolean
  overload: AngeliA.CharacterAttackness.LockFacingOnAttack*
- uid: AngeliA.CharacterAttackness.AttackComboGap
  commentId: F:AngeliA.CharacterAttackness.AttackComboGap
  id: AttackComboGap
  parent: AngeliA.CharacterAttackness
  langs:
  - csharp
  - vb
  name: AttackComboGap
  nameWithType: CharacterAttackness.AttackComboGap
  fullName: AngeliA.CharacterAttackness.AttackComboGap
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: AttackComboGap
    path: ../../AngeliA/AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
    startLine: 90
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Attack happens between this many frames should be combo attacks
  example: []
  syntax:
    content: public readonly FrameBasedInt AttackComboGap
    return:
      type: AngeliA.FrameBasedInt
    content.vb: Public ReadOnly AttackComboGap As FrameBasedInt
- uid: AngeliA.CharacterAttackness.HoldAttackPunishFrame
  commentId: F:AngeliA.CharacterAttackness.HoldAttackPunishFrame
  id: HoldAttackPunishFrame
  parent: AngeliA.CharacterAttackness
  langs:
  - csharp
  - vb
  name: HoldAttackPunishFrame
  nameWithType: CharacterAttackness.HoldAttackPunishFrame
  fullName: AngeliA.CharacterAttackness.HoldAttackPunishFrame
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: HoldAttackPunishFrame
    path: ../../AngeliA/AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
    startLine: 94
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: If hold attack button to perform multiple attacks, the cooldown will be add this frames longer
  example: []
  syntax:
    content: public readonly FrameBasedInt HoldAttackPunishFrame
    return:
      type: AngeliA.FrameBasedInt
    content.vb: Public ReadOnly HoldAttackPunishFrame As FrameBasedInt
- uid: AngeliA.CharacterAttackness.CancelAttackOnJump
  commentId: F:AngeliA.CharacterAttackness.CancelAttackOnJump
  id: CancelAttackOnJump
  parent: AngeliA.CharacterAttackness
  langs:
  - csharp
  - vb
  name: CancelAttackOnJump
  nameWithType: CharacterAttackness.CancelAttackOnJump
  fullName: AngeliA.CharacterAttackness.CancelAttackOnJump
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: CancelAttackOnJump
    path: ../../AngeliA/AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
    startLine: 98
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: When character jumps, unfinished attack will be cancel
  example: []
  syntax:
    content: public readonly FrameBasedBool CancelAttackOnJump
    return:
      type: AngeliA.FrameBasedBool
    content.vb: Public ReadOnly CancelAttackOnJump As FrameBasedBool
- uid: AngeliA.CharacterAttackness.DefaultSpeedRateOnAttack
  commentId: F:AngeliA.CharacterAttackness.DefaultSpeedRateOnAttack
  id: DefaultSpeedRateOnAttack
  parent: AngeliA.CharacterAttackness
  langs:
  - csharp
  - vb
  name: DefaultSpeedRateOnAttack
  nameWithType: CharacterAttackness.DefaultSpeedRateOnAttack
  fullName: AngeliA.CharacterAttackness.DefaultSpeedRateOnAttack
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DefaultSpeedRateOnAttack
    path: ../../AngeliA/AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
    startLine: 103
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Moving speed will be mutiply be this rate when character is attacking (0 means 0%, 1000 means 100%)
  example: []
  syntax:
    content: public readonly FrameBasedInt DefaultSpeedRateOnAttack
    return:
      type: AngeliA.FrameBasedInt
    content.vb: Public ReadOnly DefaultSpeedRateOnAttack As FrameBasedInt
- uid: AngeliA.CharacterAttackness.AirSpeedRateOnAttack
  commentId: F:AngeliA.CharacterAttackness.AirSpeedRateOnAttack
  id: AirSpeedRateOnAttack
  parent: AngeliA.CharacterAttackness
  langs:
  - csharp
  - vb
  name: AirSpeedRateOnAttack
  nameWithType: CharacterAttackness.AirSpeedRateOnAttack
  fullName: AngeliA.CharacterAttackness.AirSpeedRateOnAttack
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: AirSpeedRateOnAttack
    path: ../../AngeliA/AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
    startLine: 107
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Moving speed will be mutiply be this rate when character is attacking while not grounded (0 means 0%, 1000 means 100%)
  example: []
  syntax:
    content: public readonly FrameBasedInt AirSpeedRateOnAttack
    return:
      type: AngeliA.FrameBasedInt
    content.vb: Public ReadOnly AirSpeedRateOnAttack As FrameBasedInt
- uid: AngeliA.CharacterAttackness.WalkingSpeedRateOnAttack
  commentId: F:AngeliA.CharacterAttackness.WalkingSpeedRateOnAttack
  id: WalkingSpeedRateOnAttack
  parent: AngeliA.CharacterAttackness
  langs:
  - csharp
  - vb
  name: WalkingSpeedRateOnAttack
  nameWithType: CharacterAttackness.WalkingSpeedRateOnAttack
  fullName: AngeliA.CharacterAttackness.WalkingSpeedRateOnAttack
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: WalkingSpeedRateOnAttack
    path: ../../AngeliA/AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
    startLine: 111
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Moving speed will be mutiply be this rate when character is attacking while walking (0 means 0%, 1000 means 100%)
  example: []
  syntax:
    content: public readonly FrameBasedInt WalkingSpeedRateOnAttack
    return:
      type: AngeliA.FrameBasedInt
    content.vb: Public ReadOnly WalkingSpeedRateOnAttack As FrameBasedInt
- uid: AngeliA.CharacterAttackness.RunningSpeedRateOnAttack
  commentId: F:AngeliA.CharacterAttackness.RunningSpeedRateOnAttack
  id: RunningSpeedRateOnAttack
  parent: AngeliA.CharacterAttackness
  langs:
  - csharp
  - vb
  name: RunningSpeedRateOnAttack
  nameWithType: CharacterAttackness.RunningSpeedRateOnAttack
  fullName: AngeliA.CharacterAttackness.RunningSpeedRateOnAttack
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: RunningSpeedRateOnAttack
    path: ../../AngeliA/AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
    startLine: 115
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Moving speed will be mutiply be this rate when character is attacking while running (0 means 0%, 1000 means 100%)
  example: []
  syntax:
    content: public readonly FrameBasedInt RunningSpeedRateOnAttack
    return:
      type: AngeliA.FrameBasedInt
    content.vb: Public ReadOnly RunningSpeedRateOnAttack As FrameBasedInt
- uid: AngeliA.CharacterAttackness.AttackInAir
  commentId: F:AngeliA.CharacterAttackness.AttackInAir
  id: AttackInAir
  parent: AngeliA.CharacterAttackness
  langs:
  - csharp
  - vb
  name: AttackInAir
  nameWithType: CharacterAttackness.AttackInAir
  fullName: AngeliA.CharacterAttackness.AttackInAir
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: AttackInAir
    path: ../../AngeliA/AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
    startLine: 120
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Allow character attack when not grounded
  example: []
  syntax:
    content: public readonly FrameBasedBool AttackInAir
    return:
      type: AngeliA.FrameBasedBool
    content.vb: Public ReadOnly AttackInAir As FrameBasedBool
- uid: AngeliA.CharacterAttackness.AttackInWater
  commentId: F:AngeliA.CharacterAttackness.AttackInWater
  id: AttackInWater
  parent: AngeliA.CharacterAttackness
  langs:
  - csharp
  - vb
  name: AttackInWater
  nameWithType: CharacterAttackness.AttackInWater
  fullName: AngeliA.CharacterAttackness.AttackInWater
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: AttackInWater
    path: ../../AngeliA/AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
    startLine: 124
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Allow character attack when inside water
  example: []
  syntax:
    content: public readonly FrameBasedBool AttackInWater
    return:
      type: AngeliA.FrameBasedBool
    content.vb: Public ReadOnly AttackInWater As FrameBasedBool
- uid: AngeliA.CharacterAttackness.AttackWhenWalking
  commentId: F:AngeliA.CharacterAttackness.AttackWhenWalking
  id: AttackWhenWalking
  parent: AngeliA.CharacterAttackness
  langs:
  - csharp
  - vb
  name: AttackWhenWalking
  nameWithType: CharacterAttackness.AttackWhenWalking
  fullName: AngeliA.CharacterAttackness.AttackWhenWalking
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: AttackWhenWalking
    path: ../../AngeliA/AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
    startLine: 128
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Allow character attack when walking
  example: []
  syntax:
    content: public readonly FrameBasedBool AttackWhenWalking
    return:
      type: AngeliA.FrameBasedBool
    content.vb: Public ReadOnly AttackWhenWalking As FrameBasedBool
- uid: AngeliA.CharacterAttackness.AttackWhenRunning
  commentId: F:AngeliA.CharacterAttackness.AttackWhenRunning
  id: AttackWhenRunning
  parent: AngeliA.CharacterAttackness
  langs:
  - csharp
  - vb
  name: AttackWhenRunning
  nameWithType: CharacterAttackness.AttackWhenRunning
  fullName: AngeliA.CharacterAttackness.AttackWhenRunning
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: AttackWhenRunning
    path: ../../AngeliA/AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
    startLine: 132
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Allow character attack when running
  example: []
  syntax:
    content: public readonly FrameBasedBool AttackWhenRunning
    return:
      type: AngeliA.FrameBasedBool
    content.vb: Public ReadOnly AttackWhenRunning As FrameBasedBool
- uid: AngeliA.CharacterAttackness.AttackWhenClimbing
  commentId: F:AngeliA.CharacterAttackness.AttackWhenClimbing
  id: AttackWhenClimbing
  parent: AngeliA.CharacterAttackness
  langs:
  - csharp
  - vb
  name: AttackWhenClimbing
  nameWithType: CharacterAttackness.AttackWhenClimbing
  fullName: AngeliA.CharacterAttackness.AttackWhenClimbing
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: AttackWhenClimbing
    path: ../../AngeliA/AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
    startLine: 136
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Allow character attack when climbing
  example: []
  syntax:
    content: public readonly FrameBasedBool AttackWhenClimbing
    return:
      type: AngeliA.FrameBasedBool
    content.vb: Public ReadOnly AttackWhenClimbing As FrameBasedBool
- uid: AngeliA.CharacterAttackness.AttackWhenFlying
  commentId: F:AngeliA.CharacterAttackness.AttackWhenFlying
  id: AttackWhenFlying
  parent: AngeliA.CharacterAttackness
  langs:
  - csharp
  - vb
  name: AttackWhenFlying
  nameWithType: CharacterAttackness.AttackWhenFlying
  fullName: AngeliA.CharacterAttackness.AttackWhenFlying
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: AttackWhenFlying
    path: ../../AngeliA/AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
    startLine: 140
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Allow character attack when flying
  example: []
  syntax:
    content: public readonly FrameBasedBool AttackWhenFlying
    return:
      type: AngeliA.FrameBasedBool
    content.vb: Public ReadOnly AttackWhenFlying As FrameBasedBool
- uid: AngeliA.CharacterAttackness.AttackWhenRolling
  commentId: F:AngeliA.CharacterAttackness.AttackWhenRolling
  id: AttackWhenRolling
  parent: AngeliA.CharacterAttackness
  langs:
  - csharp
  - vb
  name: AttackWhenRolling
  nameWithType: CharacterAttackness.AttackWhenRolling
  fullName: AngeliA.CharacterAttackness.AttackWhenRolling
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: AttackWhenRolling
    path: ../../AngeliA/AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
    startLine: 144
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Allow character attack when rolling
  example: []
  syntax:
    content: public readonly FrameBasedBool AttackWhenRolling
    return:
      type: AngeliA.FrameBasedBool
    content.vb: Public ReadOnly AttackWhenRolling As FrameBasedBool
- uid: AngeliA.CharacterAttackness.AttackWhenSquatting
  commentId: F:AngeliA.CharacterAttackness.AttackWhenSquatting
  id: AttackWhenSquatting
  parent: AngeliA.CharacterAttackness
  langs:
  - csharp
  - vb
  name: AttackWhenSquatting
  nameWithType: CharacterAttackness.AttackWhenSquatting
  fullName: AngeliA.CharacterAttackness.AttackWhenSquatting
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: AttackWhenSquatting
    path: ../../AngeliA/AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
    startLine: 148
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Allow character attack when squatting
  example: []
  syntax:
    content: public readonly FrameBasedBool AttackWhenSquatting
    return:
      type: AngeliA.FrameBasedBool
    content.vb: Public ReadOnly AttackWhenSquatting As FrameBasedBool
- uid: AngeliA.CharacterAttackness.AttackWhenDashing
  commentId: F:AngeliA.CharacterAttackness.AttackWhenDashing
  id: AttackWhenDashing
  parent: AngeliA.CharacterAttackness
  langs:
  - csharp
  - vb
  name: AttackWhenDashing
  nameWithType: CharacterAttackness.AttackWhenDashing
  fullName: AngeliA.CharacterAttackness.AttackWhenDashing
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: AttackWhenDashing
    path: ../../AngeliA/AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
    startLine: 152
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Allow character attack when dashing
  example: []
  syntax:
    content: public readonly FrameBasedBool AttackWhenDashing
    return:
      type: AngeliA.FrameBasedBool
    content.vb: Public ReadOnly AttackWhenDashing As FrameBasedBool
- uid: AngeliA.CharacterAttackness.AttackWhenSliding
  commentId: F:AngeliA.CharacterAttackness.AttackWhenSliding
  id: AttackWhenSliding
  parent: AngeliA.CharacterAttackness
  langs:
  - csharp
  - vb
  name: AttackWhenSliding
  nameWithType: CharacterAttackness.AttackWhenSliding
  fullName: AngeliA.CharacterAttackness.AttackWhenSliding
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: AttackWhenSliding
    path: ../../AngeliA/AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
    startLine: 156
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Allow character attack when sliding
  example: []
  syntax:
    content: public readonly FrameBasedBool AttackWhenSliding
    return:
      type: AngeliA.FrameBasedBool
    content.vb: Public ReadOnly AttackWhenSliding As FrameBasedBool
- uid: AngeliA.CharacterAttackness.AttackWhenGrabbing
  commentId: F:AngeliA.CharacterAttackness.AttackWhenGrabbing
  id: AttackWhenGrabbing
  parent: AngeliA.CharacterAttackness
  langs:
  - csharp
  - vb
  name: AttackWhenGrabbing
  nameWithType: CharacterAttackness.AttackWhenGrabbing
  fullName: AngeliA.CharacterAttackness.AttackWhenGrabbing
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: AttackWhenGrabbing
    path: ../../AngeliA/AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
    startLine: 160
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Allow character attack when grabbing
  example: []
  syntax:
    content: public readonly FrameBasedBool AttackWhenGrabbing
    return:
      type: AngeliA.FrameBasedBool
    content.vb: Public ReadOnly AttackWhenGrabbing As FrameBasedBool
- uid: AngeliA.CharacterAttackness.AttackWhenRush
  commentId: F:AngeliA.CharacterAttackness.AttackWhenRush
  id: AttackWhenRush
  parent: AngeliA.CharacterAttackness
  langs:
  - csharp
  - vb
  name: AttackWhenRush
  nameWithType: CharacterAttackness.AttackWhenRush
  fullName: AngeliA.CharacterAttackness.AttackWhenRush
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: AttackWhenRush
    path: ../../AngeliA/AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
    startLine: 164
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Allow character attack when rushing
  example: []
  syntax:
    content: public readonly FrameBasedBool AttackWhenRush
    return:
      type: AngeliA.FrameBasedBool
    content.vb: Public ReadOnly AttackWhenRush As FrameBasedBool
- uid: AngeliA.CharacterAttackness.AttackWhenPounding
  commentId: F:AngeliA.CharacterAttackness.AttackWhenPounding
  id: AttackWhenPounding
  parent: AngeliA.CharacterAttackness
  langs:
  - csharp
  - vb
  name: AttackWhenPounding
  nameWithType: CharacterAttackness.AttackWhenPounding
  fullName: AngeliA.CharacterAttackness.AttackWhenPounding
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: AttackWhenPounding
    path: ../../AngeliA/AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
    startLine: 168
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Allow character attack when pounding
  example: []
  syntax:
    content: public readonly FrameBasedBool AttackWhenPounding
    return:
      type: AngeliA.FrameBasedBool
    content.vb: Public ReadOnly AttackWhenPounding As FrameBasedBool
- uid: AngeliA.CharacterAttackness.OnActivated
  commentId: M:AngeliA.CharacterAttackness.OnActivated
  id: OnActivated
  parent: AngeliA.CharacterAttackness
  langs:
  - csharp
  - vb
  name: OnActivated()
  nameWithType: CharacterAttackness.OnActivated()
  fullName: AngeliA.CharacterAttackness.OnActivated()
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: OnActivated
    path: ../../AngeliA/AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
    startLine: 182
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Callback for character entity get activated
  example: []
  syntax:
    content: public virtual void OnActivated()
    content.vb: Public Overridable Sub OnActivated()
  overload: AngeliA.CharacterAttackness.OnActivated*
- uid: AngeliA.CharacterAttackness.PhysicsUpdate_Attack
  commentId: M:AngeliA.CharacterAttackness.PhysicsUpdate_Attack
  id: PhysicsUpdate_Attack
  parent: AngeliA.CharacterAttackness
  langs:
  - csharp
  - vb
  name: PhysicsUpdate_Attack()
  nameWithType: CharacterAttackness.PhysicsUpdate_Attack()
  fullName: AngeliA.CharacterAttackness.PhysicsUpdate_Attack()
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: PhysicsUpdate_Attack
    path: ../../AngeliA/AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
    startLine: 193
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Callback for update the attackness
  example: []
  syntax:
    content: public virtual void PhysicsUpdate_Attack()
    content.vb: Public Overridable Sub PhysicsUpdate_Attack()
  overload: AngeliA.CharacterAttackness.PhysicsUpdate_Attack*
- uid: AngeliA.CharacterAttackness.Attack(System.Boolean,System.Boolean)
  commentId: M:AngeliA.CharacterAttackness.Attack(System.Boolean,System.Boolean)
  id: Attack(System.Boolean,System.Boolean)
  parent: AngeliA.CharacterAttackness
  langs:
  - csharp
  - vb
  name: Attack(bool, bool)
  nameWithType: CharacterAttackness.Attack(bool, bool)
  fullName: AngeliA.CharacterAttackness.Attack(bool, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Attack
    path: ../../AngeliA/AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
    startLine: 230
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Perform an attack
  example: []
  syntax:
    content: public virtual bool Attack(bool facingRight, bool charged = false)
    parameters:
    - id: facingRight
      type: System.Boolean
      description: True if the attack is performed when character facing right
    - id: charged
      type: System.Boolean
      description: True if the attack is charged
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overridable Function Attack(facingRight As Boolean, charged As Boolean = False) As Boolean
  overload: AngeliA.CharacterAttackness.Attack*
  nameWithType.vb: CharacterAttackness.Attack(Boolean, Boolean)
  fullName.vb: AngeliA.CharacterAttackness.Attack(Boolean, Boolean)
  name.vb: Attack(Boolean, Boolean)
- uid: AngeliA.CharacterAttackness.CancelAttack
  commentId: M:AngeliA.CharacterAttackness.CancelAttack
  id: CancelAttack
  parent: AngeliA.CharacterAttackness
  langs:
  - csharp
  - vb
  name: CancelAttack()
  nameWithType: CharacterAttackness.CancelAttack()
  fullName: AngeliA.CharacterAttackness.CancelAttack()
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: CancelAttack
    path: ../../AngeliA/AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
    startLine: 245
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Cancel current performing attack
  example: []
  syntax:
    content: public void CancelAttack()
    content.vb: Public Sub CancelAttack()
  overload: AngeliA.CharacterAttackness.CancelAttack*
- uid: AngeliA.CharacterAttackness.IgnoreAimingDirection(AngeliA.Direction8,System.Int32)
  commentId: M:AngeliA.CharacterAttackness.IgnoreAimingDirection(AngeliA.Direction8,System.Int32)
  id: IgnoreAimingDirection(AngeliA.Direction8,System.Int32)
  parent: AngeliA.CharacterAttackness
  langs:
  - csharp
  - vb
  name: IgnoreAimingDirection(Direction8, int)
  nameWithType: CharacterAttackness.IgnoreAimingDirection(Direction8, int)
  fullName: AngeliA.CharacterAttackness.IgnoreAimingDirection(AngeliA.Direction8, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IgnoreAimingDirection
    path: ../../AngeliA/AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
    startLine: 252
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Do not allow aiming at given direction for specified frames
  example: []
  syntax:
    content: public void IgnoreAimingDirection(Direction8 dir, int duration = 1)
    parameters:
    - id: dir
      type: AngeliA.Direction8
    - id: duration
      type: System.Int32
    content.vb: Public Sub IgnoreAimingDirection(dir As Direction8, duration As Integer = 1)
  overload: AngeliA.CharacterAttackness.IgnoreAimingDirection*
  nameWithType.vb: CharacterAttackness.IgnoreAimingDirection(Direction8, Integer)
  fullName.vb: AngeliA.CharacterAttackness.IgnoreAimingDirection(AngeliA.Direction8, Integer)
  name.vb: IgnoreAimingDirection(Direction8, Integer)
- uid: AngeliA.CharacterAttackness.IsAimingDirectionIgnored(AngeliA.Direction8)
  commentId: M:AngeliA.CharacterAttackness.IsAimingDirectionIgnored(AngeliA.Direction8)
  id: IsAimingDirectionIgnored(AngeliA.Direction8)
  parent: AngeliA.CharacterAttackness
  langs:
  - csharp
  - vb
  name: IsAimingDirectionIgnored(Direction8)
  nameWithType: CharacterAttackness.IsAimingDirectionIgnored(Direction8)
  fullName: AngeliA.CharacterAttackness.IsAimingDirectionIgnored(AngeliA.Direction8)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IsAimingDirectionIgnored
    path: ../../AngeliA/AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
    startLine: 260
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: True if the given aiming direction is currently ignored
  example: []
  syntax:
    content: public bool IsAimingDirectionIgnored(Direction8 dir)
    parameters:
    - id: dir
      type: AngeliA.Direction8
    return:
      type: System.Boolean
    content.vb: Public Function IsAimingDirectionIgnored(dir As Direction8) As Boolean
  overload: AngeliA.CharacterAttackness.IsAimingDirectionIgnored*
- uid: AngeliA.CharacterAttackness.IgnoreAttack(System.Int32)
  commentId: M:AngeliA.CharacterAttackness.IgnoreAttack(System.Int32)
  id: IgnoreAttack(System.Int32)
  parent: AngeliA.CharacterAttackness
  langs:
  - csharp
  - vb
  name: IgnoreAttack(int)
  nameWithType: CharacterAttackness.IgnoreAttack(int)
  fullName: AngeliA.CharacterAttackness.IgnoreAttack(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IgnoreAttack
    path: ../../AngeliA/AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
    startLine: 266
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Do not allow attack for specified frames
  example: []
  syntax:
    content: public void IgnoreAttack(int duration = 1)
    parameters:
    - id: duration
      type: System.Int32
    content.vb: Public Sub IgnoreAttack(duration As Integer = 1)
  overload: AngeliA.CharacterAttackness.IgnoreAttack*
  nameWithType.vb: CharacterAttackness.IgnoreAttack(Integer)
  fullName.vb: AngeliA.CharacterAttackness.IgnoreAttack(Integer)
  name.vb: IgnoreAttack(Integer)
- uid: AngeliA.CharacterAttackness.CancelIgnoreAttack
  commentId: M:AngeliA.CharacterAttackness.CancelIgnoreAttack
  id: CancelIgnoreAttack
  parent: AngeliA.CharacterAttackness
  langs:
  - csharp
  - vb
  name: CancelIgnoreAttack()
  nameWithType: CharacterAttackness.CancelIgnoreAttack()
  fullName: AngeliA.CharacterAttackness.CancelIgnoreAttack()
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: CancelIgnoreAttack
    path: ../../AngeliA/AngeliA Framework/src/Behaviour/Attackness/CharacterAttackness.cs
    startLine: 272
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Allowing attack which ignored by IgnoreAttack function
  example: []
  syntax:
    content: public void CancelIgnoreAttack()
    content.vb: Public Sub CancelIgnoreAttack()
  overload: AngeliA.CharacterAttackness.CancelIgnoreAttack*
references:
- uid: AngeliA
  commentId: N:AngeliA
  href: AngeliA.html
  name: AngeliA
  nameWithType: AngeliA
  fullName: AngeliA
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.AngeliA.Extension.ForAllFields``1(System.Reflection.BindingFlags,System.Boolean)
  commentId: M:AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
  parent: AngeliA.Extension
  definition: AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
  href: AngeliA.Extension.html#AngeliA_Extension_ForAllFields__1_System_Object_System_Reflection_BindingFlags_System_Boolean_
  name: ForAllFields<T>(object, BindingFlags, bool)
  nameWithType: Extension.ForAllFields<T>(object, BindingFlags, bool)
  fullName: AngeliA.Extension.ForAllFields<T>(object, System.Reflection.BindingFlags, bool)
  nameWithType.vb: Extension.ForAllFields(Of T)(Object, BindingFlags, Boolean)
  fullName.vb: AngeliA.Extension.ForAllFields(Of T)(Object, System.Reflection.BindingFlags, Boolean)
  name.vb: ForAllFields(Of T)(Object, BindingFlags, Boolean)
  spec.csharp:
  - uid: AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
    name: ForAllFields
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllFields__1_System_Object_System_Reflection_BindingFlags_System_Boolean_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
    name: ForAllFields
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllFields__1_System_Object_System_Reflection_BindingFlags_System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Object.AngeliA.Extension.ForAllProperties``1
  commentId: M:AngeliA.Extension.ForAllProperties``1(System.Object)
  parent: AngeliA.Extension
  definition: AngeliA.Extension.ForAllProperties``1(System.Object)
  href: AngeliA.Extension.html#AngeliA_Extension_ForAllProperties__1_System_Object_
  name: ForAllProperties<T>(object)
  nameWithType: Extension.ForAllProperties<T>(object)
  fullName: AngeliA.Extension.ForAllProperties<T>(object)
  nameWithType.vb: Extension.ForAllProperties(Of T)(Object)
  fullName.vb: AngeliA.Extension.ForAllProperties(Of T)(Object)
  name.vb: ForAllProperties(Of T)(Object)
  spec.csharp:
  - uid: AngeliA.Extension.ForAllProperties``1(System.Object)
    name: ForAllProperties
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllProperties__1_System_Object_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: AngeliA.Extension.ForAllProperties``1(System.Object)
    name: ForAllProperties
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllProperties__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
  commentId: M:AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
  isExternal: true
  href: AngeliA.Extension.html#AngeliA_Extension_ForAllFields__1_System_Object_System_Reflection_BindingFlags_System_Boolean_
  name: ForAllFields<T>(object, BindingFlags, bool)
  nameWithType: Extension.ForAllFields<T>(object, BindingFlags, bool)
  fullName: AngeliA.Extension.ForAllFields<T>(object, System.Reflection.BindingFlags, bool)
  nameWithType.vb: Extension.ForAllFields(Of T)(Object, BindingFlags, Boolean)
  fullName.vb: AngeliA.Extension.ForAllFields(Of T)(Object, System.Reflection.BindingFlags, Boolean)
  name.vb: ForAllFields(Of T)(Object, BindingFlags, Boolean)
  spec.csharp:
  - uid: AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
    name: ForAllFields
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllFields__1_System_Object_System_Reflection_BindingFlags_System_Boolean_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
    name: ForAllFields
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllFields__1_System_Object_System_Reflection_BindingFlags_System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: AngeliA.Extension
  commentId: T:AngeliA.Extension
  parent: AngeliA
  href: AngeliA.Extension.html
  name: Extension
  nameWithType: Extension
  fullName: AngeliA.Extension
- uid: AngeliA.Extension.ForAllProperties``1(System.Object)
  commentId: M:AngeliA.Extension.ForAllProperties``1(System.Object)
  isExternal: true
  href: AngeliA.Extension.html#AngeliA_Extension_ForAllProperties__1_System_Object_
  name: ForAllProperties<T>(object)
  nameWithType: Extension.ForAllProperties<T>(object)
  fullName: AngeliA.Extension.ForAllProperties<T>(object)
  nameWithType.vb: Extension.ForAllProperties(Of T)(Object)
  fullName.vb: AngeliA.Extension.ForAllProperties(Of T)(Object)
  name.vb: ForAllProperties(Of T)(Object)
  spec.csharp:
  - uid: AngeliA.Extension.ForAllProperties``1(System.Object)
    name: ForAllProperties
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllProperties__1_System_Object_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: AngeliA.Extension.ForAllProperties``1(System.Object)
    name: ForAllProperties
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllProperties__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: AngeliA.CharacterAttackness.#ctor*
  commentId: Overload:AngeliA.CharacterAttackness.#ctor
  href: AngeliA.CharacterAttackness.html#AngeliA_CharacterAttackness__ctor_AngeliA_Character_
  name: CharacterAttackness
  nameWithType: CharacterAttackness.CharacterAttackness
  fullName: AngeliA.CharacterAttackness.CharacterAttackness
  nameWithType.vb: CharacterAttackness.New
  fullName.vb: AngeliA.CharacterAttackness.New
  name.vb: New
- uid: AngeliA.Character
  commentId: T:AngeliA.Character
  parent: AngeliA
  href: AngeliA.Character.html
  name: Character
  nameWithType: Character
  fullName: AngeliA.Character
- uid: AngeliA.CharacterAttackness.AimingDirection*
  commentId: Overload:AngeliA.CharacterAttackness.AimingDirection
  href: AngeliA.CharacterAttackness.html#AngeliA_CharacterAttackness_AimingDirection
  name: AimingDirection
  nameWithType: CharacterAttackness.AimingDirection
  fullName: AngeliA.CharacterAttackness.AimingDirection
- uid: AngeliA.Direction8
  commentId: T:AngeliA.Direction8
  parent: AngeliA
  href: AngeliA.Direction8.html
  name: Direction8
  nameWithType: Direction8
  fullName: AngeliA.Direction8
- uid: AngeliA.CharacterAttackness.IsAttacking*
  commentId: Overload:AngeliA.CharacterAttackness.IsAttacking
  href: AngeliA.CharacterAttackness.html#AngeliA_CharacterAttackness_IsAttacking
  name: IsAttacking
  nameWithType: CharacterAttackness.IsAttacking
  fullName: AngeliA.CharacterAttackness.IsAttacking
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: AngeliA.CharacterAttackness.IsAttackIgnored*
  commentId: Overload:AngeliA.CharacterAttackness.IsAttackIgnored
  href: AngeliA.CharacterAttackness.html#AngeliA_CharacterAttackness_IsAttackIgnored
  name: IsAttackIgnored
  nameWithType: CharacterAttackness.IsAttackIgnored
  fullName: AngeliA.CharacterAttackness.IsAttackIgnored
- uid: AngeliA.CharacterAttackness.IsChargingAttack*
  commentId: Overload:AngeliA.CharacterAttackness.IsChargingAttack
  href: AngeliA.CharacterAttackness.html#AngeliA_CharacterAttackness_IsChargingAttack
  name: IsChargingAttack
  nameWithType: CharacterAttackness.IsChargingAttack
  fullName: AngeliA.CharacterAttackness.IsChargingAttack
- uid: AngeliA.CharacterAttackness.LastAttackFrame*
  commentId: Overload:AngeliA.CharacterAttackness.LastAttackFrame
  href: AngeliA.CharacterAttackness.html#AngeliA_CharacterAttackness_LastAttackFrame
  name: LastAttackFrame
  nameWithType: CharacterAttackness.LastAttackFrame
  fullName: AngeliA.CharacterAttackness.LastAttackFrame
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: AngeliA.CharacterAttackness.AttackChargeStartFrame*
  commentId: Overload:AngeliA.CharacterAttackness.AttackChargeStartFrame
  href: AngeliA.CharacterAttackness.html#AngeliA_CharacterAttackness_AttackChargeStartFrame
  name: AttackChargeStartFrame
  nameWithType: CharacterAttackness.AttackChargeStartFrame
  fullName: AngeliA.CharacterAttackness.AttackChargeStartFrame
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: AngeliA.CharacterAttackness.LastAttackCharged*
  commentId: Overload:AngeliA.CharacterAttackness.LastAttackCharged
  href: AngeliA.CharacterAttackness.html#AngeliA_CharacterAttackness_LastAttackCharged
  name: LastAttackCharged
  nameWithType: CharacterAttackness.LastAttackCharged
  fullName: AngeliA.CharacterAttackness.LastAttackCharged
- uid: AngeliA.CharacterAttackness.AttackStyleIndex*
  commentId: Overload:AngeliA.CharacterAttackness.AttackStyleIndex
  href: AngeliA.CharacterAttackness.html#AngeliA_CharacterAttackness_AttackStyleIndex
  name: AttackStyleIndex
  nameWithType: CharacterAttackness.AttackStyleIndex
  fullName: AngeliA.CharacterAttackness.AttackStyleIndex
- uid: AngeliA.CharacterAttackness.AttackStartFacingRight*
  commentId: Overload:AngeliA.CharacterAttackness.AttackStartFacingRight
  href: AngeliA.CharacterAttackness.html#AngeliA_CharacterAttackness_AttackStartFacingRight
  name: AttackStartFacingRight
  nameWithType: CharacterAttackness.AttackStartFacingRight
  fullName: AngeliA.CharacterAttackness.AttackStartFacingRight
- uid: AngeliA.CharacterAttackness.AttackDuration*
  commentId: Overload:AngeliA.CharacterAttackness.AttackDuration
  href: AngeliA.CharacterAttackness.html#AngeliA_CharacterAttackness_AttackDuration
  name: AttackDuration
  nameWithType: CharacterAttackness.AttackDuration
  fullName: AngeliA.CharacterAttackness.AttackDuration
- uid: AngeliA.CharacterAttackness.AttackCooldown*
  commentId: Overload:AngeliA.CharacterAttackness.AttackCooldown
  href: AngeliA.CharacterAttackness.html#AngeliA_CharacterAttackness_AttackCooldown
  name: AttackCooldown
  nameWithType: CharacterAttackness.AttackCooldown
  fullName: AngeliA.CharacterAttackness.AttackCooldown
- uid: AngeliA.CharacterAttackness.MinimalChargeAttackDuration*
  commentId: Overload:AngeliA.CharacterAttackness.MinimalChargeAttackDuration
  href: AngeliA.CharacterAttackness.html#AngeliA_CharacterAttackness_MinimalChargeAttackDuration
  name: MinimalChargeAttackDuration
  nameWithType: CharacterAttackness.MinimalChargeAttackDuration
  fullName: AngeliA.CharacterAttackness.MinimalChargeAttackDuration
- uid: AngeliA.CharacterAttackness.RepeatAttackWhenHolding*
  commentId: Overload:AngeliA.CharacterAttackness.RepeatAttackWhenHolding
  href: AngeliA.CharacterAttackness.html#AngeliA_CharacterAttackness_RepeatAttackWhenHolding
  name: RepeatAttackWhenHolding
  nameWithType: CharacterAttackness.RepeatAttackWhenHolding
  fullName: AngeliA.CharacterAttackness.RepeatAttackWhenHolding
- uid: AngeliA.CharacterAttackness.HoldingAttack*
  commentId: Overload:AngeliA.CharacterAttackness.HoldingAttack
  href: AngeliA.CharacterAttackness.html#AngeliA_CharacterAttackness_HoldingAttack
  name: HoldingAttack
  nameWithType: CharacterAttackness.HoldingAttack
  fullName: AngeliA.CharacterAttackness.HoldingAttack
- uid: AngeliA.CharacterAttackness.LockFacingOnAttack*
  commentId: Overload:AngeliA.CharacterAttackness.LockFacingOnAttack
  href: AngeliA.CharacterAttackness.html#AngeliA_CharacterAttackness_LockFacingOnAttack
  name: LockFacingOnAttack
  nameWithType: CharacterAttackness.LockFacingOnAttack
  fullName: AngeliA.CharacterAttackness.LockFacingOnAttack
- uid: AngeliA.FrameBasedInt
  commentId: T:AngeliA.FrameBasedInt
  parent: AngeliA
  href: AngeliA.FrameBasedInt.html
  name: FrameBasedInt
  nameWithType: FrameBasedInt
  fullName: AngeliA.FrameBasedInt
- uid: AngeliA.FrameBasedBool
  commentId: T:AngeliA.FrameBasedBool
  parent: AngeliA
  href: AngeliA.FrameBasedBool.html
  name: FrameBasedBool
  nameWithType: FrameBasedBool
  fullName: AngeliA.FrameBasedBool
- uid: AngeliA.CharacterAttackness.OnActivated*
  commentId: Overload:AngeliA.CharacterAttackness.OnActivated
  href: AngeliA.CharacterAttackness.html#AngeliA_CharacterAttackness_OnActivated
  name: OnActivated
  nameWithType: CharacterAttackness.OnActivated
  fullName: AngeliA.CharacterAttackness.OnActivated
- uid: AngeliA.CharacterAttackness.PhysicsUpdate_Attack*
  commentId: Overload:AngeliA.CharacterAttackness.PhysicsUpdate_Attack
  href: AngeliA.CharacterAttackness.html#AngeliA_CharacterAttackness_PhysicsUpdate_Attack
  name: PhysicsUpdate_Attack
  nameWithType: CharacterAttackness.PhysicsUpdate_Attack
  fullName: AngeliA.CharacterAttackness.PhysicsUpdate_Attack
- uid: AngeliA.CharacterAttackness.Attack*
  commentId: Overload:AngeliA.CharacterAttackness.Attack
  href: AngeliA.CharacterAttackness.html#AngeliA_CharacterAttackness_Attack_System_Boolean_System_Boolean_
  name: Attack
  nameWithType: CharacterAttackness.Attack
  fullName: AngeliA.CharacterAttackness.Attack
- uid: AngeliA.CharacterAttackness.CancelAttack*
  commentId: Overload:AngeliA.CharacterAttackness.CancelAttack
  href: AngeliA.CharacterAttackness.html#AngeliA_CharacterAttackness_CancelAttack
  name: CancelAttack
  nameWithType: CharacterAttackness.CancelAttack
  fullName: AngeliA.CharacterAttackness.CancelAttack
- uid: AngeliA.CharacterAttackness.IgnoreAimingDirection*
  commentId: Overload:AngeliA.CharacterAttackness.IgnoreAimingDirection
  href: AngeliA.CharacterAttackness.html#AngeliA_CharacterAttackness_IgnoreAimingDirection_AngeliA_Direction8_System_Int32_
  name: IgnoreAimingDirection
  nameWithType: CharacterAttackness.IgnoreAimingDirection
  fullName: AngeliA.CharacterAttackness.IgnoreAimingDirection
- uid: AngeliA.CharacterAttackness.IsAimingDirectionIgnored*
  commentId: Overload:AngeliA.CharacterAttackness.IsAimingDirectionIgnored
  href: AngeliA.CharacterAttackness.html#AngeliA_CharacterAttackness_IsAimingDirectionIgnored_AngeliA_Direction8_
  name: IsAimingDirectionIgnored
  nameWithType: CharacterAttackness.IsAimingDirectionIgnored
  fullName: AngeliA.CharacterAttackness.IsAimingDirectionIgnored
- uid: AngeliA.CharacterAttackness.IgnoreAttack*
  commentId: Overload:AngeliA.CharacterAttackness.IgnoreAttack
  href: AngeliA.CharacterAttackness.html#AngeliA_CharacterAttackness_IgnoreAttack_System_Int32_
  name: IgnoreAttack
  nameWithType: CharacterAttackness.IgnoreAttack
  fullName: AngeliA.CharacterAttackness.IgnoreAttack
- uid: AngeliA.CharacterAttackness.CancelIgnoreAttack*
  commentId: Overload:AngeliA.CharacterAttackness.CancelIgnoreAttack
  href: AngeliA.CharacterAttackness.html#AngeliA_CharacterAttackness_CancelIgnoreAttack
  name: CancelIgnoreAttack
  nameWithType: CharacterAttackness.CancelIgnoreAttack
  fullName: AngeliA.CharacterAttackness.CancelIgnoreAttack
