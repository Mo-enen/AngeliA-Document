### YamlMime:ManagedReference
items:
- uid: AngeliA.FrameworkUtil
  commentId: T:AngeliA.FrameworkUtil
  id: FrameworkUtil
  parent: AngeliA
  children:
  - AngeliA.FrameworkUtil.BlockRuleToDigit(AngeliA.BlockRule)
  - AngeliA.FrameworkUtil.BreakEntityBlock(AngeliA.IBlockEntity)
  - AngeliA.FrameworkUtil.BroadcastBuff(AngeliA.IRect,System.Int32,System.Int32)
  - AngeliA.FrameworkUtil.BroadcastBuff(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - AngeliA.FrameworkUtil.ClampCells(AngeliA.Cell[],AngeliA.IRect,System.Int32,System.Int32)
  - AngeliA.FrameworkUtil.ClampCells(System.Span{AngeliA.Cell},AngeliA.IRect,System.Int32,System.Int32)
  - AngeliA.FrameworkUtil.DeleteAllEmptyMaps(System.String)
  - AngeliA.FrameworkUtil.DigitToBlockRule(System.Int32)
  - AngeliA.FrameworkUtil.DigitToRuleByte(System.Int32,System.Byte[])
  - AngeliA.FrameworkUtil.DrawAllCollidersAsGizmos(System.Int32,AngeliA.Int2,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean,AngeliA.Color32[])
  - AngeliA.FrameworkUtil.DrawClockHands(AngeliA.IRect,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  - AngeliA.FrameworkUtil.DrawClockHands(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  - AngeliA.FrameworkUtil.DrawClockPendulum(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - AngeliA.FrameworkUtil.DrawEnvironmentShadow(AngeliA.Cell,System.Int32,System.Int32,System.Byte,System.Int32)
  - AngeliA.FrameworkUtil.DrawFrozenEffect(AngeliA.IRect,System.Byte,System.Int32,AngeliA.Int2,System.Int32,System.Int32,System.Int32)
  - AngeliA.FrameworkUtil.DrawItemUsageBar(AngeliA.IRect,System.Int32,System.Int32)
  - AngeliA.FrameworkUtil.DrawLightenEffect(System.Int32,AngeliA.IRect,System.Int32,System.Int32)
  - AngeliA.FrameworkUtil.DrawLoopingActivatedHighlight(AngeliA.IRect,AngeliA.Color32,System.Int32,System.Int32)
  - AngeliA.FrameworkUtil.DrawLoopingTriangleMark(AngeliA.IRect,System.Int32,AngeliA.Color32,AngeliA.Direction4,System.Int32,System.Int32,System.Int32,System.Int32)
  - AngeliA.FrameworkUtil.DrawOnFireEffect(System.Int32,AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - AngeliA.FrameworkUtil.DrawPoisonEffect(System.Int32,AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - AngeliA.FrameworkUtil.DrawPoseCharacterAsUI(AngeliA.IRect,AngeliA.PoseCharacterRenderer,System.Int32)
  - AngeliA.FrameworkUtil.DrawPoseCharacterAsUI(AngeliA.IRect,AngeliA.PoseCharacterRenderer,System.Int32,AngeliA.IRect@,AngeliA.IRect@)
  - AngeliA.FrameworkUtil.ForAllExistsWorldInRange(AngeliA.IBlockSquad,AngeliA.IRect,System.Int32,System.Int32@)
  - AngeliA.FrameworkUtil.ForAllWorldInRange(AngeliA.IRect,System.Int32,System.Int32@)
  - AngeliA.FrameworkUtil.GAMEPAD_CODE
  - AngeliA.FrameworkUtil.GetAimingBuilderPositionFromKey(AngeliA.Character,AngeliA.BlockType,System.Int32@,System.Int32@,System.Boolean@,System.Boolean)
  - AngeliA.FrameworkUtil.GetAimingBuilderPositionFromMouse(AngeliA.Character,AngeliA.BlockType,System.Int32@,System.Int32@,System.Boolean@)
  - AngeliA.FrameworkUtil.GetAimingPickerPositionFromKey(AngeliA.Character,System.Int32@,System.Int32@,System.Boolean,System.Boolean,System.Boolean)
  - AngeliA.FrameworkUtil.GetAimingPickerPositionFromMouse(AngeliA.Character,System.Int32,System.Int32@,System.Int32@,System.Boolean@,System.Boolean,System.Boolean,System.Boolean)
  - AngeliA.FrameworkUtil.GetBlockRealName(System.String)
  - AngeliA.FrameworkUtil.GetEntityPose(AngeliA.Entity,System.Boolean,System.Int32,AngeliA.Entity@,AngeliA.Entity@)
  - AngeliA.FrameworkUtil.GetEntityPose(System.Int32,System.Int32,System.Int32,System.Boolean)
  - AngeliA.FrameworkUtil.GetFlyingFormation(AngeliA.Int2,System.Int32,System.Int32)
  - AngeliA.FrameworkUtil.GetFrameAmortizedValue(System.Int32,System.Int32)
  - AngeliA.FrameworkUtil.GetGameKeyLabel(AngeliA.Gamekey)
  - AngeliA.FrameworkUtil.GetGroupInfoFromSpriteRealName(System.String,System.String@,System.Int32@)
  - AngeliA.FrameworkUtil.GetItemTypeIcon(System.Int32)
  - AngeliA.FrameworkUtil.GetOnewayTag(AngeliA.Direction4)
  - AngeliA.FrameworkUtil.GetPlayerHoldingHandTool
  - AngeliA.FrameworkUtil.GetRuleIndex(System.Collections.Generic.IList{AngeliA.AngeSprite},System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - AngeliA.FrameworkUtil.GetScaledAudioVolume(System.Int32,System.Int32)
  - AngeliA.FrameworkUtil.GetSpriteInfoFromName(System.String,System.String@,System.Boolean@,AngeliA.Tag@,AngeliA.BlockRule@,System.Boolean@,System.Int32@,System.Int32@,System.Nullable{System.Int32}@,System.Nullable{System.Int32}@)
  - AngeliA.FrameworkUtil.GetSummaryTint(AngeliA.Color32[])
  - AngeliA.FrameworkUtil.GiveBuffFromMap(AngeliA.IWithCharacterBuff,System.Int32,System.Int32,System.Int32,System.Int32)
  - AngeliA.FrameworkUtil.HasOnewayTag(AngeliA.Tag)
  - AngeliA.FrameworkUtil.HasPickableBlockAt(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)
  - AngeliA.FrameworkUtil.HasSystemNumber(AngeliA.IBlockSquad,System.Int32,System.Int32,System.Int32)
  - AngeliA.FrameworkUtil.HighlightBlink(AngeliA.Cell,System.Single,System.Single,System.Boolean,System.Boolean)
  - AngeliA.FrameworkUtil.InvokeBlockPicked(System.Int32,AngeliA.IRect)
  - AngeliA.FrameworkUtil.InvokeCameOutOfWater(AngeliA.Rigidbody,AngeliA.Entity)
  - AngeliA.FrameworkUtil.InvokeCheatPerformed(System.String)
  - AngeliA.FrameworkUtil.InvokeErrorHint(AngeliA.Entity,System.Int32)
  - AngeliA.FrameworkUtil.InvokeErrorHint(System.Int32,System.Int32,System.Int32)
  - AngeliA.FrameworkUtil.InvokeFallIntoWater(AngeliA.Rigidbody,AngeliA.Entity)
  - AngeliA.FrameworkUtil.InvokeItemCollected(AngeliA.Entity,System.Int32,System.Int32)
  - AngeliA.FrameworkUtil.InvokeItemCollected(System.Int32,System.Int32,System.Int32,System.Int32)
  - AngeliA.FrameworkUtil.InvokeItemDamage(AngeliA.Character,System.Int32,System.Int32)
  - AngeliA.FrameworkUtil.InvokeItemLost(AngeliA.Character,System.Int32)
  - AngeliA.FrameworkUtil.InvokeItemUnlocked(System.Int32)
  - AngeliA.FrameworkUtil.InvokeObjectBreak(System.Int32,AngeliA.IRect)
  - AngeliA.FrameworkUtil.InvokeObjectFreeFall(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  - AngeliA.FrameworkUtil.InvokeOnCharacterCrash(AngeliA.Entity)
  - AngeliA.FrameworkUtil.InvokeOnCharacterFly(AngeliA.Entity)
  - AngeliA.FrameworkUtil.InvokeOnCharacterJump(AngeliA.Entity)
  - AngeliA.FrameworkUtil.InvokeOnCharacterPassOut(AngeliA.Entity)
  - AngeliA.FrameworkUtil.InvokeOnCharacterPound(AngeliA.Entity)
  - AngeliA.FrameworkUtil.InvokeOnCharacterSleeping(AngeliA.Entity)
  - AngeliA.FrameworkUtil.InvokeOnCharacterSlideStepped(AngeliA.Entity)
  - AngeliA.FrameworkUtil.InvokeOnCharacterTeleport(AngeliA.Entity)
  - AngeliA.FrameworkUtil.InvokeOnFootStepped(AngeliA.Entity)
  - AngeliA.FrameworkUtil.Number_to_SystemNumberID(System.Int32)
  - AngeliA.FrameworkUtil.PaintBlock(System.Int32,System.Int32,System.Int32,System.Boolean)
  - AngeliA.FrameworkUtil.PerformSpringBounce(AngeliA.Entity,AngeliA.Direction4,System.Int32,System.Int32)
  - AngeliA.FrameworkUtil.PerformSpringBounce(AngeliA.Rigidbody,AngeliA.Entity,AngeliA.Direction4,System.Int32,System.Int32)
  - AngeliA.FrameworkUtil.PickBlockAt(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  - AngeliA.FrameworkUtil.PlaySoundAtPosition(System.Int32,AngeliA.Int2,System.Single,System.Single)
  - AngeliA.FrameworkUtil.PutBlockTo(System.Int32,AngeliA.BlockType,System.Int32,System.Int32)
  - AngeliA.FrameworkUtil.RUN_CODE_ANALYSIS_SETTING_ID
  - AngeliA.FrameworkUtil.RUN_CODE_ANALYSIS_SETTING_SILENTLY_ID
  - AngeliA.FrameworkUtil.ReadSystemNumber(AngeliA.IBlockSquad,System.Int32,System.Int32,System.Int32,AngeliA.Direction4,System.Int32@)
  - AngeliA.FrameworkUtil.ReadSystemNumber(AngeliA.IBlockSquad,System.Int32,System.Int32,System.Int32,System.Int32@)
  - AngeliA.FrameworkUtil.RedirectForRule(AngeliA.IBlockSquad,AngeliA.IRect,System.Int32)
  - AngeliA.FrameworkUtil.RedirectForRule(AngeliA.IBlockSquad,System.Int32,System.Int32,System.Int32,AngeliA.BlockType)
  - AngeliA.FrameworkUtil.RemapCells(AngeliA.Cell[],System.Int32,System.Int32,AngeliA.IRect,AngeliA.IRect,System.Int32,System.Int32,System.Boolean)
  - AngeliA.FrameworkUtil.RemapCells(AngeliA.Cell[],System.Int32,System.Int32,AngeliA.IRect,AngeliA.IRect,System.Int32@,System.Int32,System.Int32,System.Boolean)
  - AngeliA.FrameworkUtil.RemapCells(System.Span{AngeliA.Cell},System.Int32,System.Int32,AngeliA.IRect,AngeliA.IRect,System.Int32,System.Int32,System.Boolean)
  - AngeliA.FrameworkUtil.RemapCells(System.Span{AngeliA.Cell},System.Int32,System.Int32,AngeliA.IRect,AngeliA.IRect,System.Int32@,System.Int32,System.Int32,System.Boolean)
  - AngeliA.FrameworkUtil.RemoveFromWorldMemory(AngeliA.Entity)
  - AngeliA.FrameworkUtil.ResetShoulderAndUpperArmPos(AngeliA.PoseCharacterRenderer,System.Boolean,System.Boolean)
  - AngeliA.FrameworkUtil.RuleByteToDigit(System.Byte[])
  - AngeliA.FrameworkUtil.RunAngeliaCodeAnalysis(System.Boolean,System.Boolean,System.Boolean)
  - AngeliA.FrameworkUtil.RunBuiltInSpriteAnalysys(System.Boolean)
  - AngeliA.FrameworkUtil.RunEmptyScriptFileAnalysis(System.String,System.Boolean)
  - AngeliA.FrameworkUtil.SearchlightBlockCheck(AngeliA.IBlockSquad,AngeliA.Int3,System.Nullable{AngeliA.Direction8},System.Int32,System.Boolean)
  - AngeliA.FrameworkUtil.SpawnItemFromMap(AngeliA.IBlockSquad,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  - AngeliA.FrameworkUtil.SpiralSpinningCellEffect(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  - AngeliA.FrameworkUtil.SystemNumberID_to_Number(System.Int32)
  - AngeliA.FrameworkUtil.Time01_to_TimeDigit(System.Single,System.Int32@,System.Int32@,System.Int32@)
  - AngeliA.FrameworkUtil.TimeDigit_to_Time01(System.Int32,System.Int32,System.Int32)
  - AngeliA.FrameworkUtil.TryEjectOutsideGround(AngeliA.Rigidbody,System.Int32,System.Int32,System.Int32)
  - AngeliA.FrameworkUtil.TryGetEmptyPlaceNearbyForEntity(System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32,System.Boolean)
  - AngeliA.FrameworkUtil.TryGetOnewayDirection(AngeliA.Tag,AngeliA.Direction4@)
  - AngeliA.FrameworkUtil.TryGetSingleSystemNumber(AngeliA.IBlockSquad,System.Int32,System.Int32,System.Int32,System.Int32@)
  langs:
  - csharp
  - vb
  name: FrameworkUtil
  nameWithType: FrameworkUtil
  fullName: AngeliA.FrameworkUtil
  type: Class
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Rendering.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: FrameworkUtil
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Rendering.cs
    startLine: 5
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Utility class for the AngeliA framework
  example: []
  syntax:
    content: public static class FrameworkUtil
    content.vb: Public Module FrameworkUtil
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: AngeliA.FrameworkUtil.RUN_CODE_ANALYSIS_SETTING_ID
  commentId: F:AngeliA.FrameworkUtil.RUN_CODE_ANALYSIS_SETTING_ID
  id: RUN_CODE_ANALYSIS_SETTING_ID
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: RUN_CODE_ANALYSIS_SETTING_ID
  nameWithType: FrameworkUtil.RUN_CODE_ANALYSIS_SETTING_ID
  fullName: AngeliA.FrameworkUtil.RUN_CODE_ANALYSIS_SETTING_ID
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: RUN_CODE_ANALYSIS_SETTING_ID
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil.cs
    startLine: 19
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: For remote setting between engine and rigged game
  example: []
  syntax:
    content: public const int RUN_CODE_ANALYSIS_SETTING_ID = 895245367
    return:
      type: System.Int32
    content.vb: Public Const RUN_CODE_ANALYSIS_SETTING_ID As Integer = 895245367
- uid: AngeliA.FrameworkUtil.RUN_CODE_ANALYSIS_SETTING_SILENTLY_ID
  commentId: F:AngeliA.FrameworkUtil.RUN_CODE_ANALYSIS_SETTING_SILENTLY_ID
  id: RUN_CODE_ANALYSIS_SETTING_SILENTLY_ID
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: RUN_CODE_ANALYSIS_SETTING_SILENTLY_ID
  nameWithType: FrameworkUtil.RUN_CODE_ANALYSIS_SETTING_SILENTLY_ID
  fullName: AngeliA.FrameworkUtil.RUN_CODE_ANALYSIS_SETTING_SILENTLY_ID
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: RUN_CODE_ANALYSIS_SETTING_SILENTLY_ID
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil.cs
    startLine: 23
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: For remote setting between engine and rigged game
  example: []
  syntax:
    content: public const int RUN_CODE_ANALYSIS_SETTING_SILENTLY_ID = 895245368
    return:
      type: System.Int32
    content.vb: Public Const RUN_CODE_ANALYSIS_SETTING_SILENTLY_ID As Integer = 895245368
- uid: AngeliA.FrameworkUtil.GAMEPAD_CODE
  commentId: F:AngeliA.FrameworkUtil.GAMEPAD_CODE
  id: GAMEPAD_CODE
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: GAMEPAD_CODE
  nameWithType: FrameworkUtil.GAMEPAD_CODE
  fullName: AngeliA.FrameworkUtil.GAMEPAD_CODE
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GAMEPAD_CODE
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil.cs
    startLine: 27
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: ID of artwork sprite for gamepad button icons
  example: []
  syntax:
    content: public static readonly Dictionary<GamepadKey, int> GAMEPAD_CODE
    return:
      type: System.Collections.Generic.Dictionary{AngeliA.GamepadKey,System.Int32}
    content.vb: Public Shared ReadOnly GAMEPAD_CODE As Dictionary(Of GamepadKey, Integer)
- uid: AngeliA.FrameworkUtil.GetBlockRealName(System.String)
  commentId: M:AngeliA.FrameworkUtil.GetBlockRealName(System.String)
  id: GetBlockRealName(System.String)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: GetBlockRealName(string)
  nameWithType: FrameworkUtil.GetBlockRealName(string)
  fullName: AngeliA.FrameworkUtil.GetBlockRealName(string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetBlockRealName
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil.cs
    startLine: 58
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get name of a map block without hashtags
  example: []
  syntax:
    content: public static string GetBlockRealName(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function GetBlockRealName(name As String) As String
  overload: AngeliA.FrameworkUtil.GetBlockRealName*
  nameWithType.vb: FrameworkUtil.GetBlockRealName(String)
  fullName.vb: AngeliA.FrameworkUtil.GetBlockRealName(String)
  name.vb: GetBlockRealName(String)
- uid: AngeliA.FrameworkUtil.GetOnewayTag(AngeliA.Direction4)
  commentId: M:AngeliA.FrameworkUtil.GetOnewayTag(AngeliA.Direction4)
  id: GetOnewayTag(AngeliA.Direction4)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: GetOnewayTag(Direction4)
  nameWithType: FrameworkUtil.GetOnewayTag(Direction4)
  fullName: AngeliA.FrameworkUtil.GetOnewayTag(AngeliA.Direction4)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetOnewayTag
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil.cs
    startLine: 69
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get tag for oneway gate that facing to given direction
  example: []
  syntax:
    content: public static Tag GetOnewayTag(Direction4 gateDirection)
    parameters:
    - id: gateDirection
      type: AngeliA.Direction4
    return:
      type: AngeliA.Tag
    content.vb: Public Shared Function GetOnewayTag(gateDirection As Direction4) As Tag
  overload: AngeliA.FrameworkUtil.GetOnewayTag*
- uid: AngeliA.FrameworkUtil.HasOnewayTag(AngeliA.Tag)
  commentId: M:AngeliA.FrameworkUtil.HasOnewayTag(AngeliA.Tag)
  id: HasOnewayTag(AngeliA.Tag)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: HasOnewayTag(Tag)
  nameWithType: FrameworkUtil.HasOnewayTag(Tag)
  fullName: AngeliA.FrameworkUtil.HasOnewayTag(AngeliA.Tag)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: HasOnewayTag
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil.cs
    startLine: 80
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: True if the given tag contains oneway gate tag.
  example: []
  syntax:
    content: public static bool HasOnewayTag(Tag tag)
    parameters:
    - id: tag
      type: AngeliA.Tag
    return:
      type: System.Boolean
    content.vb: Public Shared Function HasOnewayTag(tag As Tag) As Boolean
  overload: AngeliA.FrameworkUtil.HasOnewayTag*
- uid: AngeliA.FrameworkUtil.TryGetOnewayDirection(AngeliA.Tag,AngeliA.Direction4@)
  commentId: M:AngeliA.FrameworkUtil.TryGetOnewayDirection(AngeliA.Tag,AngeliA.Direction4@)
  id: TryGetOnewayDirection(AngeliA.Tag,AngeliA.Direction4@)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: TryGetOnewayDirection(Tag, out Direction4)
  nameWithType: FrameworkUtil.TryGetOnewayDirection(Tag, out Direction4)
  fullName: AngeliA.FrameworkUtil.TryGetOnewayDirection(AngeliA.Tag, out AngeliA.Direction4)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TryGetOnewayDirection
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil.cs
    startLine: 85
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get direction from a single oneway gate tag. The tag value can only be a single oneway gate tag.
  example: []
  syntax:
    content: public static bool TryGetOnewayDirection(Tag tag, out Direction4 direction)
    parameters:
    - id: tag
      type: AngeliA.Tag
    - id: direction
      type: AngeliA.Direction4
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryGetOnewayDirection(tag As Tag, direction As Direction4) As Boolean
  overload: AngeliA.FrameworkUtil.TryGetOnewayDirection*
  nameWithType.vb: FrameworkUtil.TryGetOnewayDirection(Tag, Direction4)
  fullName.vb: AngeliA.FrameworkUtil.TryGetOnewayDirection(AngeliA.Tag, AngeliA.Direction4)
  name.vb: TryGetOnewayDirection(Tag, Direction4)
- uid: AngeliA.FrameworkUtil.GetFlyingFormation(AngeliA.Int2,System.Int32,System.Int32)
  commentId: M:AngeliA.FrameworkUtil.GetFlyingFormation(AngeliA.Int2,System.Int32,System.Int32)
  id: GetFlyingFormation(AngeliA.Int2,System.Int32,System.Int32)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: GetFlyingFormation(Int2, int, int)
  nameWithType: FrameworkUtil.GetFlyingFormation(Int2, int, int)
  fullName: AngeliA.FrameworkUtil.GetFlyingFormation(AngeliA.Int2, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetFlyingFormation
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil.cs
    startLine: 111
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get position for flying entities
  example: []
  syntax:
    content: public static Int2 GetFlyingFormation(Int2 pos, int column, int instanceIndex)
    parameters:
    - id: pos
      type: AngeliA.Int2
      description: Center position
    - id: column
      type: System.Int32
      description: Column of the current element
    - id: instanceIndex
      type: System.Int32
      description: Local index of the current element
    return:
      type: AngeliA.Int2
      description: Final position of this element
    content.vb: Public Shared Function GetFlyingFormation(pos As Int2, column As Integer, instanceIndex As Integer) As Int2
  overload: AngeliA.FrameworkUtil.GetFlyingFormation*
  nameWithType.vb: FrameworkUtil.GetFlyingFormation(Int2, Integer, Integer)
  fullName.vb: AngeliA.FrameworkUtil.GetFlyingFormation(AngeliA.Int2, Integer, Integer)
  name.vb: GetFlyingFormation(Int2, Integer, Integer)
- uid: AngeliA.FrameworkUtil.GetSpriteInfoFromName(System.String,System.String@,System.Boolean@,AngeliA.Tag@,AngeliA.BlockRule@,System.Boolean@,System.Int32@,System.Int32@,System.Nullable{System.Int32}@,System.Nullable{System.Int32}@)
  commentId: M:AngeliA.FrameworkUtil.GetSpriteInfoFromName(System.String,System.String@,System.Boolean@,AngeliA.Tag@,AngeliA.BlockRule@,System.Boolean@,System.Int32@,System.Int32@,System.Nullable{System.Int32}@,System.Nullable{System.Int32}@)
  id: GetSpriteInfoFromName(System.String,System.String@,System.Boolean@,AngeliA.Tag@,AngeliA.BlockRule@,System.Boolean@,System.Int32@,System.Int32@,System.Nullable{System.Int32}@,System.Nullable{System.Int32}@)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: GetSpriteInfoFromName(string, out string, out bool, out Tag, out BlockRule, out bool, out int, out int, out int?, out int?)
  nameWithType: FrameworkUtil.GetSpriteInfoFromName(string, out string, out bool, out Tag, out BlockRule, out bool, out int, out int, out int?, out int?)
  fullName: AngeliA.FrameworkUtil.GetSpriteInfoFromName(string, out string, out bool, out AngeliA.Tag, out AngeliA.BlockRule, out bool, out int, out int, out int?, out int?)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetSpriteInfoFromName
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil.cs
    startLine: 137
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get infomation from naming tag of an artwork sprite
  example: []
  syntax:
    content: public static void GetSpriteInfoFromName(string name, out string realName, out bool isTrigger, out Tag tag, out BlockRule rule, out bool noCollider, out int offsetZ, out int aniDuration, out int? pivotX, out int? pivotY)
    parameters:
    - id: name
      type: System.String
      description: Full name of the artwork sprite
    - id: realName
      type: System.String
      description: Name without hashtag
    - id: isTrigger
      type: System.Boolean
      description: True if this sprite is trigger
    - id: tag
      type: AngeliA.Tag
      description: Tag value of this sprite
    - id: rule
      type: AngeliA.BlockRule
      description: Rule for auto tiling in map editor
    - id: noCollider
      type: System.Boolean
      description: True if this sprite ignore collider
    - id: offsetZ
      type: System.Int32
      description: Z value for sort rendering cells
    - id: aniDuration
      type: System.Int32
      description: Duration in frame for animation
    - id: pivotX
      type: System.Nullable{System.Int32}
      description: ''
    - id: pivotY
      type: System.Nullable{System.Int32}
      description: ''
    content.vb: Public Shared Sub GetSpriteInfoFromName(name As String, realName As String, isTrigger As Boolean, tag As Tag, rule As BlockRule, noCollider As Boolean, offsetZ As Integer, aniDuration As Integer, pivotX As Integer?, pivotY As Integer?)
  overload: AngeliA.FrameworkUtil.GetSpriteInfoFromName*
  nameWithType.vb: FrameworkUtil.GetSpriteInfoFromName(String, String, Boolean, Tag, BlockRule, Boolean, Integer, Integer, Integer?, Integer?)
  fullName.vb: AngeliA.FrameworkUtil.GetSpriteInfoFromName(String, String, Boolean, AngeliA.Tag, AngeliA.BlockRule, Boolean, Integer, Integer, Integer?, Integer?)
  name.vb: GetSpriteInfoFromName(String, String, Boolean, Tag, BlockRule, Boolean, Integer, Integer, Integer?, Integer?)
- uid: AngeliA.FrameworkUtil.GetGroupInfoFromSpriteRealName(System.String,System.String@,System.Int32@)
  commentId: M:AngeliA.FrameworkUtil.GetGroupInfoFromSpriteRealName(System.String,System.String@,System.Int32@)
  id: GetGroupInfoFromSpriteRealName(System.String,System.String@,System.Int32@)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: GetGroupInfoFromSpriteRealName(string, out string, out int)
  nameWithType: FrameworkUtil.GetGroupInfoFromSpriteRealName(string, out string, out int)
  fullName: AngeliA.FrameworkUtil.GetGroupInfoFromSpriteRealName(string, out string, out int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetGroupInfoFromSpriteRealName
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil.cs
    startLine: 298
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get sprite group infomation from the name of artwork sprite
  example: []
  syntax:
    content: public static bool GetGroupInfoFromSpriteRealName(string realName, out string groupName, out int groupIndex)
    parameters:
    - id: realName
      type: System.String
      description: Name without hashtags
    - id: groupName
      type: System.String
      description: Name without index
    - id: groupIndex
      type: System.Int32
      description: Index in group
    return:
      type: System.Boolean
      description: True if the data successfuly calculated
    content.vb: Public Shared Function GetGroupInfoFromSpriteRealName(realName As String, groupName As String, groupIndex As Integer) As Boolean
  overload: AngeliA.FrameworkUtil.GetGroupInfoFromSpriteRealName*
  nameWithType.vb: FrameworkUtil.GetGroupInfoFromSpriteRealName(String, String, Integer)
  fullName.vb: AngeliA.FrameworkUtil.GetGroupInfoFromSpriteRealName(String, String, Integer)
  name.vb: GetGroupInfoFromSpriteRealName(String, String, Integer)
- uid: AngeliA.FrameworkUtil.GetScaledAudioVolume(System.Int32,System.Int32)
  commentId: M:AngeliA.FrameworkUtil.GetScaledAudioVolume(System.Int32,System.Int32)
  id: GetScaledAudioVolume(System.Int32,System.Int32)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: GetScaledAudioVolume(int, int)
  nameWithType: FrameworkUtil.GetScaledAudioVolume(int, int)
  fullName: AngeliA.FrameworkUtil.GetScaledAudioVolume(int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetScaledAudioVolume
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil.cs
    startLine: 321
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Scale the given audio volume
  example: []
  syntax:
    content: public static float GetScaledAudioVolume(int volume, int scale = 1000)
    parameters:
    - id: volume
      type: System.Int32
      description: ''
    - id: scale
      type: System.Int32
      description: 0 means 0%, 1000 means 100%
    return:
      type: System.Single
    content.vb: Public Shared Function GetScaledAudioVolume(volume As Integer, scale As Integer = 1000) As Single
  overload: AngeliA.FrameworkUtil.GetScaledAudioVolume*
  nameWithType.vb: FrameworkUtil.GetScaledAudioVolume(Integer, Integer)
  fullName.vb: AngeliA.FrameworkUtil.GetScaledAudioVolume(Integer, Integer)
  name.vb: GetScaledAudioVolume(Integer, Integer)
- uid: AngeliA.FrameworkUtil.PlaySoundAtPosition(System.Int32,AngeliA.Int2,System.Single,System.Single)
  commentId: M:AngeliA.FrameworkUtil.PlaySoundAtPosition(System.Int32,AngeliA.Int2,System.Single,System.Single)
  id: PlaySoundAtPosition(System.Int32,AngeliA.Int2,System.Single,System.Single)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: PlaySoundAtPosition(int, Int2, float, float)
  nameWithType: FrameworkUtil.PlaySoundAtPosition(int, Int2, float, float)
  fullName: AngeliA.FrameworkUtil.PlaySoundAtPosition(int, AngeliA.Int2, float, float)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: PlaySoundAtPosition
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil.cs
    startLine: 334
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Play a sound like it cames from the given position
  example: []
  syntax:
    content: public static void PlaySoundAtPosition(int id, Int2 globalPosition, float volume = 1, float pitch = 1)
    parameters:
    - id: id
      type: System.Int32
      description: Audio ID
    - id: globalPosition
      type: AngeliA.Int2
      description: Position in global space
    - id: volume
      type: System.Single
      description: ''
    - id: pitch
      type: System.Single
      description: ''
    content.vb: Public Shared Sub PlaySoundAtPosition(id As Integer, globalPosition As Int2, volume As Single = 1, pitch As Single = 1)
  overload: AngeliA.FrameworkUtil.PlaySoundAtPosition*
  nameWithType.vb: FrameworkUtil.PlaySoundAtPosition(Integer, Int2, Single, Single)
  fullName.vb: AngeliA.FrameworkUtil.PlaySoundAtPosition(Integer, AngeliA.Int2, Single, Single)
  name.vb: PlaySoundAtPosition(Integer, Int2, Single, Single)
- uid: AngeliA.FrameworkUtil.ResetShoulderAndUpperArmPos(AngeliA.PoseCharacterRenderer,System.Boolean,System.Boolean)
  commentId: M:AngeliA.FrameworkUtil.ResetShoulderAndUpperArmPos(AngeliA.PoseCharacterRenderer,System.Boolean,System.Boolean)
  id: ResetShoulderAndUpperArmPos(AngeliA.PoseCharacterRenderer,System.Boolean,System.Boolean)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: ResetShoulderAndUpperArmPos(PoseCharacterRenderer, bool, bool)
  nameWithType: FrameworkUtil.ResetShoulderAndUpperArmPos(PoseCharacterRenderer, bool, bool)
  fullName: AngeliA.FrameworkUtil.ResetShoulderAndUpperArmPos(AngeliA.PoseCharacterRenderer, bool, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ResetShoulderAndUpperArmPos
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil.cs
    startLine: 350
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Reset the shoulder and upper arm position for given pose-styled character
  example: []
  syntax:
    content: public static void ResetShoulderAndUpperArmPos(PoseCharacterRenderer rendering, bool resetLeft = true, bool resetRight = true)
    parameters:
    - id: rendering
      type: AngeliA.PoseCharacterRenderer
      description: Target character
    - id: resetLeft
      type: System.Boolean
      description: ''
    - id: resetRight
      type: System.Boolean
      description: ''
    content.vb: Public Shared Sub ResetShoulderAndUpperArmPos(rendering As PoseCharacterRenderer, resetLeft As Boolean = True, resetRight As Boolean = True)
  overload: AngeliA.FrameworkUtil.ResetShoulderAndUpperArmPos*
  nameWithType.vb: FrameworkUtil.ResetShoulderAndUpperArmPos(PoseCharacterRenderer, Boolean, Boolean)
  fullName.vb: AngeliA.FrameworkUtil.ResetShoulderAndUpperArmPos(AngeliA.PoseCharacterRenderer, Boolean, Boolean)
  name.vb: ResetShoulderAndUpperArmPos(PoseCharacterRenderer, Boolean, Boolean)
- uid: AngeliA.FrameworkUtil.HighlightBlink(AngeliA.Cell,System.Single,System.Single,System.Boolean,System.Boolean)
  commentId: M:AngeliA.FrameworkUtil.HighlightBlink(AngeliA.Cell,System.Single,System.Single,System.Boolean,System.Boolean)
  id: HighlightBlink(AngeliA.Cell,System.Single,System.Single,System.Boolean,System.Boolean)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: HighlightBlink(Cell, float, float, bool, bool)
  nameWithType: FrameworkUtil.HighlightBlink(Cell, float, float, bool, bool)
  fullName: AngeliA.FrameworkUtil.HighlightBlink(AngeliA.Cell, float, float, bool, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: HighlightBlink
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil.cs
    startLine: 423
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Blink the given cell for action target highlighting
  example: []
  syntax:
    content: public static void HighlightBlink(Cell cell, float pivotX = 0.5, float pivotY = 0, bool horizontal = true, bool vertical = true)
    parameters:
    - id: cell
      type: AngeliA.Cell
      description: ''
    - id: pivotX
      type: System.Single
      description: ''
    - id: pivotY
      type: System.Single
      description: ''
    - id: horizontal
      type: System.Boolean
      description: True if the target attached with nearby entity in left or right
    - id: vertical
      type: System.Boolean
      description: True if the target attached with nearby entity in up or down
    content.vb: Public Shared Sub HighlightBlink(cell As Cell, pivotX As Single = 0.5, pivotY As Single = 0, horizontal As Boolean = True, vertical As Boolean = True)
  overload: AngeliA.FrameworkUtil.HighlightBlink*
  nameWithType.vb: FrameworkUtil.HighlightBlink(Cell, Single, Single, Boolean, Boolean)
  fullName.vb: AngeliA.FrameworkUtil.HighlightBlink(AngeliA.Cell, Single, Single, Boolean, Boolean)
  name.vb: HighlightBlink(Cell, Single, Single, Boolean, Boolean)
- uid: AngeliA.FrameworkUtil.Time01_to_TimeDigit(System.Single,System.Int32@,System.Int32@,System.Int32@)
  commentId: M:AngeliA.FrameworkUtil.Time01_to_TimeDigit(System.Single,System.Int32@,System.Int32@,System.Int32@)
  id: Time01_to_TimeDigit(System.Single,System.Int32@,System.Int32@,System.Int32@)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: Time01_to_TimeDigit(float, out int, out int, out int)
  nameWithType: FrameworkUtil.Time01_to_TimeDigit(float, out int, out int, out int)
  fullName: AngeliA.FrameworkUtil.Time01_to_TimeDigit(float, out int, out int, out int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Time01_to_TimeDigit
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil.cs
    startLine: 442
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Convert a float value into time
  example: []
  syntax:
    content: public static void Time01_to_TimeDigit(float time01, out int hour, out int minute, out int second)
    parameters:
    - id: time01
      type: System.Single
      description: 0 means 0:00, 0.5 means 12:00. 1 means 24:00
    - id: hour
      type: System.Int32
      description: ''
    - id: minute
      type: System.Int32
      description: ''
    - id: second
      type: System.Int32
      description: ''
    content.vb: Public Shared Sub Time01_to_TimeDigit(time01 As Single, hour As Integer, minute As Integer, second As Integer)
  overload: AngeliA.FrameworkUtil.Time01_to_TimeDigit*
  nameWithType.vb: FrameworkUtil.Time01_to_TimeDigit(Single, Integer, Integer, Integer)
  fullName.vb: AngeliA.FrameworkUtil.Time01_to_TimeDigit(Single, Integer, Integer, Integer)
  name.vb: Time01_to_TimeDigit(Single, Integer, Integer, Integer)
- uid: AngeliA.FrameworkUtil.TimeDigit_to_Time01(System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.FrameworkUtil.TimeDigit_to_Time01(System.Int32,System.Int32,System.Int32)
  id: TimeDigit_to_Time01(System.Int32,System.Int32,System.Int32)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: TimeDigit_to_Time01(int, int, int)
  nameWithType: FrameworkUtil.TimeDigit_to_Time01(int, int, int)
  fullName: AngeliA.FrameworkUtil.TimeDigit_to_Time01(int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TimeDigit_to_Time01
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil.cs
    startLine: 455
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Convert time into a float value
  example: []
  syntax:
    content: public static float TimeDigit_to_Time01(int hour, int minute, int second)
    parameters:
    - id: hour
      type: System.Int32
      description: ''
    - id: minute
      type: System.Int32
      description: ''
    - id: second
      type: System.Int32
      description: ''
    return:
      type: System.Single
      description: 0 means 0:00, 0.5 means 12:00. 1 means 24:00
    content.vb: Public Shared Function TimeDigit_to_Time01(hour As Integer, minute As Integer, second As Integer) As Single
  overload: AngeliA.FrameworkUtil.TimeDigit_to_Time01*
  nameWithType.vb: FrameworkUtil.TimeDigit_to_Time01(Integer, Integer, Integer)
  fullName.vb: AngeliA.FrameworkUtil.TimeDigit_to_Time01(Integer, Integer, Integer)
  name.vb: TimeDigit_to_Time01(Integer, Integer, Integer)
- uid: AngeliA.FrameworkUtil.PerformSpringBounce(AngeliA.Entity,AngeliA.Direction4,System.Int32,System.Int32)
  commentId: M:AngeliA.FrameworkUtil.PerformSpringBounce(AngeliA.Entity,AngeliA.Direction4,System.Int32,System.Int32)
  id: PerformSpringBounce(AngeliA.Entity,AngeliA.Direction4,System.Int32,System.Int32)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: PerformSpringBounce(Entity, Direction4, int, int)
  nameWithType: FrameworkUtil.PerformSpringBounce(Entity, Direction4, int, int)
  fullName: AngeliA.FrameworkUtil.PerformSpringBounce(AngeliA.Entity, AngeliA.Direction4, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: PerformSpringBounce
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil.cs
    startLine: 465
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Bounce entities on stage for once
  example: []
  syntax:
    content: public static bool PerformSpringBounce(Entity springEntity, Direction4 direction, int power, int powerSide = 0)
    parameters:
    - id: springEntity
      type: AngeliA.Entity
      description: Entity that exists as the spring
    - id: direction
      type: AngeliA.Direction4
      description: Direction that the spring power goes
    - id: power
      type: System.Int32
      description: Initial speed for entities get bounced
    - id: powerSide
      type: System.Int32
      description: Initial speed on side direction for entities get bounced
    return:
      type: System.Boolean
      description: True if any entity get bounced
    content.vb: Public Shared Function PerformSpringBounce(springEntity As Entity, direction As Direction4, power As Integer, powerSide As Integer = 0) As Boolean
  overload: AngeliA.FrameworkUtil.PerformSpringBounce*
  nameWithType.vb: FrameworkUtil.PerformSpringBounce(Entity, Direction4, Integer, Integer)
  fullName.vb: AngeliA.FrameworkUtil.PerformSpringBounce(AngeliA.Entity, AngeliA.Direction4, Integer, Integer)
  name.vb: PerformSpringBounce(Entity, Direction4, Integer, Integer)
- uid: AngeliA.FrameworkUtil.PerformSpringBounce(AngeliA.Rigidbody,AngeliA.Entity,AngeliA.Direction4,System.Int32,System.Int32)
  commentId: M:AngeliA.FrameworkUtil.PerformSpringBounce(AngeliA.Rigidbody,AngeliA.Entity,AngeliA.Direction4,System.Int32,System.Int32)
  id: PerformSpringBounce(AngeliA.Rigidbody,AngeliA.Entity,AngeliA.Direction4,System.Int32,System.Int32)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: PerformSpringBounce(Rigidbody, Entity, Direction4, int, int)
  nameWithType: FrameworkUtil.PerformSpringBounce(Rigidbody, Entity, Direction4, int, int)
  fullName: AngeliA.FrameworkUtil.PerformSpringBounce(AngeliA.Rigidbody, AngeliA.Entity, AngeliA.Direction4, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: PerformSpringBounce
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil.cs
    startLine: 503
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Bounce the given target for once
  example: []
  syntax:
    content: public static void PerformSpringBounce(Rigidbody target, Entity spring, Direction4 direction, int power, int powerSide = 0)
    parameters:
    - id: target
      type: AngeliA.Rigidbody
      description: Target to get bounce
    - id: spring
      type: AngeliA.Entity
      description: Entity that exists as the spring
    - id: direction
      type: AngeliA.Direction4
      description: Direction that the spring power goes
    - id: power
      type: System.Int32
      description: Initial speed for entities get bounced
    - id: powerSide
      type: System.Int32
      description: Initial speed on side direction for entities get bounced
    content.vb: Public Shared Sub PerformSpringBounce(target As Rigidbody, spring As Entity, direction As Direction4, power As Integer, powerSide As Integer = 0)
  overload: AngeliA.FrameworkUtil.PerformSpringBounce*
  nameWithType.vb: FrameworkUtil.PerformSpringBounce(Rigidbody, Entity, Direction4, Integer, Integer)
  fullName.vb: AngeliA.FrameworkUtil.PerformSpringBounce(AngeliA.Rigidbody, AngeliA.Entity, AngeliA.Direction4, Integer, Integer)
  name.vb: PerformSpringBounce(Rigidbody, Entity, Direction4, Integer, Integer)
- uid: AngeliA.FrameworkUtil.GiveBuffFromMap(AngeliA.IWithCharacterBuff,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.FrameworkUtil.GiveBuffFromMap(AngeliA.IWithCharacterBuff,System.Int32,System.Int32,System.Int32,System.Int32)
  id: GiveBuffFromMap(AngeliA.IWithCharacterBuff,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: GiveBuffFromMap(IWithCharacterBuff, int, int, int, int)
  nameWithType: FrameworkUtil.GiveBuffFromMap(IWithCharacterBuff, int, int, int, int)
  fullName: AngeliA.FrameworkUtil.GiveBuffFromMap(AngeliA.IWithCharacterBuff, int, int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GiveBuffFromMap
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil.cs
    startLine: 543
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Try get buff from map element at given unit position
  example: []
  syntax:
    content: public static void GiveBuffFromMap(IWithCharacterBuff wBuff, int unitX = -2147483648, int unitY = -2147483648, int unitZ = -2147483648, int duration = -1)
    parameters:
    - id: wBuff
      type: AngeliA.IWithCharacterBuff
    - id: unitX
      type: System.Int32
    - id: unitY
      type: System.Int32
    - id: unitZ
      type: System.Int32
    - id: duration
      type: System.Int32
    content.vb: Public Shared Sub GiveBuffFromMap(wBuff As IWithCharacterBuff, unitX As Integer = -2147483648, unitY As Integer = -2147483648, unitZ As Integer = -2147483648, duration As Integer = -1)
  overload: AngeliA.FrameworkUtil.GiveBuffFromMap*
  nameWithType.vb: FrameworkUtil.GiveBuffFromMap(IWithCharacterBuff, Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.FrameworkUtil.GiveBuffFromMap(AngeliA.IWithCharacterBuff, Integer, Integer, Integer, Integer)
  name.vb: GiveBuffFromMap(IWithCharacterBuff, Integer, Integer, Integer, Integer)
- uid: AngeliA.FrameworkUtil.GetGameKeyLabel(AngeliA.Gamekey)
  commentId: M:AngeliA.FrameworkUtil.GetGameKeyLabel(AngeliA.Gamekey)
  id: GetGameKeyLabel(AngeliA.Gamekey)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: GetGameKeyLabel(Gamekey)
  nameWithType: FrameworkUtil.GetGameKeyLabel(Gamekey)
  fullName: AngeliA.FrameworkUtil.GetGameKeyLabel(AngeliA.Gamekey)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetGameKeyLabel
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil.cs
    startLine: 556
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get display name for given game-key.
  example: []
  syntax:
    content: public static string GetGameKeyLabel(Gamekey key)
    parameters:
    - id: key
      type: AngeliA.Gamekey
    return:
      type: System.String
    content.vb: Public Shared Function GetGameKeyLabel(key As Gamekey) As String
  overload: AngeliA.FrameworkUtil.GetGameKeyLabel*
- uid: AngeliA.FrameworkUtil.GetFrameAmortizedValue(System.Int32,System.Int32)
  commentId: M:AngeliA.FrameworkUtil.GetFrameAmortizedValue(System.Int32,System.Int32)
  id: GetFrameAmortizedValue(System.Int32,System.Int32)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: GetFrameAmortizedValue(int, int)
  nameWithType: FrameworkUtil.GetFrameAmortizedValue(int, int)
  fullName: AngeliA.FrameworkUtil.GetFrameAmortizedValue(int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetFrameAmortizedValue
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil.cs
    startLine: 562
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Used to calculate acceleration with intager. eg. When value is 2000, it means 2 unit every frame. When value is 500, it means 1 unit every 2 frames.
  example: []
  syntax:
    content: public static int GetFrameAmortizedValue(int value1000, int frame = -2147483648)
    parameters:
    - id: value1000
      type: System.Int32
    - id: frame
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function GetFrameAmortizedValue(value1000 As Integer, frame As Integer = -2147483648) As Integer
  overload: AngeliA.FrameworkUtil.GetFrameAmortizedValue*
  nameWithType.vb: FrameworkUtil.GetFrameAmortizedValue(Integer, Integer)
  fullName.vb: AngeliA.FrameworkUtil.GetFrameAmortizedValue(Integer, Integer)
  name.vb: GetFrameAmortizedValue(Integer, Integer)
- uid: AngeliA.FrameworkUtil.SpawnItemFromMap(AngeliA.IBlockSquad,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  commentId: M:AngeliA.FrameworkUtil.SpawnItemFromMap(AngeliA.IBlockSquad,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  id: SpawnItemFromMap(AngeliA.IBlockSquad,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: SpawnItemFromMap(IBlockSquad, int, int, int, int, int, int, bool)
  nameWithType: FrameworkUtil.SpawnItemFromMap(IBlockSquad, int, int, int, int, int, int, bool)
  fullName: AngeliA.FrameworkUtil.SpawnItemFromMap(AngeliA.IBlockSquad, int, int, int, int, int, int, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SpawnItemFromMap
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil.cs
    startLine: 645
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Spawn item based on items list from map. This is used for the map chest.
  example: []
  syntax:
    content: public static void SpawnItemFromMap(IBlockSquad squad, int unitX, int unitY, int z, int maxDeltaX = 1024, int maxDeltaY = 1024, int placeHolderID = 0, bool spawnEntity = true)
    parameters:
    - id: squad
      type: AngeliA.IBlockSquad
      description: Source of the map blocks
    - id: unitX
      type: System.Int32
      description: Position X in unit space
    - id: unitY
      type: System.Int32
      description: Position Y in unit space
    - id: z
      type: System.Int32
      description: Position Z
    - id: maxDeltaX
      type: System.Int32
      description: Limitation on horizontal checking distance
    - id: maxDeltaY
      type: System.Int32
      description: Limitation on vertical checking distance
    - id: placeHolderID
      type: System.Int32
      description: Set spawned item into this ID
    - id: spawnEntity
      type: System.Boolean
      description: True if spawn the entity that paint as map element
    content.vb: Public Shared Sub SpawnItemFromMap(squad As IBlockSquad, unitX As Integer, unitY As Integer, z As Integer, maxDeltaX As Integer = 1024, maxDeltaY As Integer = 1024, placeHolderID As Integer = 0, spawnEntity As Boolean = True)
  overload: AngeliA.FrameworkUtil.SpawnItemFromMap*
  nameWithType.vb: FrameworkUtil.SpawnItemFromMap(IBlockSquad, Integer, Integer, Integer, Integer, Integer, Integer, Boolean)
  fullName.vb: AngeliA.FrameworkUtil.SpawnItemFromMap(AngeliA.IBlockSquad, Integer, Integer, Integer, Integer, Integer, Integer, Boolean)
  name.vb: SpawnItemFromMap(IBlockSquad, Integer, Integer, Integer, Integer, Integer, Integer, Boolean)
- uid: AngeliA.FrameworkUtil.GetPlayerHoldingHandTool
  commentId: M:AngeliA.FrameworkUtil.GetPlayerHoldingHandTool
  id: GetPlayerHoldingHandTool
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: GetPlayerHoldingHandTool()
  nameWithType: FrameworkUtil.GetPlayerHoldingHandTool()
  fullName: AngeliA.FrameworkUtil.GetPlayerHoldingHandTool()
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetPlayerHoldingHandTool
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil.cs
    startLine: 685
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get global single instance of the handtool that player currently equipping
  example: []
  syntax:
    content: public static HandTool GetPlayerHoldingHandTool()
    return:
      type: AngeliA.HandTool
      description: ''
    content.vb: Public Shared Function GetPlayerHoldingHandTool() As HandTool
  overload: AngeliA.FrameworkUtil.GetPlayerHoldingHandTool*
- uid: AngeliA.FrameworkUtil.BroadcastBuff(AngeliA.IRect,System.Int32,System.Int32)
  commentId: M:AngeliA.FrameworkUtil.BroadcastBuff(AngeliA.IRect,System.Int32,System.Int32)
  id: BroadcastBuff(AngeliA.IRect,System.Int32,System.Int32)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: BroadcastBuff(IRect, int, int)
  nameWithType: FrameworkUtil.BroadcastBuff(IRect, int, int)
  fullName: AngeliA.FrameworkUtil.BroadcastBuff(AngeliA.IRect, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: BroadcastBuff
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil.cs
    startLine: 697
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Give buff for all buff holder in given rectangle range
  example: []
  syntax:
    content: public static void BroadcastBuff(IRect range, int buffID, int duration = 1)
    parameters:
    - id: range
      type: AngeliA.IRect
    - id: buffID
      type: System.Int32
    - id: duration
      type: System.Int32
    content.vb: Public Shared Sub BroadcastBuff(range As IRect, buffID As Integer, duration As Integer = 1)
  overload: AngeliA.FrameworkUtil.BroadcastBuff*
  nameWithType.vb: FrameworkUtil.BroadcastBuff(IRect, Integer, Integer)
  fullName.vb: AngeliA.FrameworkUtil.BroadcastBuff(AngeliA.IRect, Integer, Integer)
  name.vb: BroadcastBuff(IRect, Integer, Integer)
- uid: AngeliA.FrameworkUtil.BroadcastBuff(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.FrameworkUtil.BroadcastBuff(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: BroadcastBuff(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: BroadcastBuff(int, int, int, int, int)
  nameWithType: FrameworkUtil.BroadcastBuff(int, int, int, int, int)
  fullName: AngeliA.FrameworkUtil.BroadcastBuff(int, int, int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: BroadcastBuff
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil.cs
    startLine: 709
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Give buff for all buff holder in given circle range
  example: []
  syntax:
    content: public static void BroadcastBuff(int x, int y, int radius, int buffID, int duration = 1)
    parameters:
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: radius
      type: System.Int32
    - id: buffID
      type: System.Int32
    - id: duration
      type: System.Int32
    content.vb: Public Shared Sub BroadcastBuff(x As Integer, y As Integer, radius As Integer, buffID As Integer, duration As Integer = 1)
  overload: AngeliA.FrameworkUtil.BroadcastBuff*
  nameWithType.vb: FrameworkUtil.BroadcastBuff(Integer, Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.FrameworkUtil.BroadcastBuff(Integer, Integer, Integer, Integer, Integer)
  name.vb: BroadcastBuff(Integer, Integer, Integer, Integer, Integer)
- uid: AngeliA.FrameworkUtil.RunBuiltInSpriteAnalysys(System.Boolean)
  commentId: M:AngeliA.FrameworkUtil.RunBuiltInSpriteAnalysys(System.Boolean)
  id: RunBuiltInSpriteAnalysys(System.Boolean)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: RunBuiltInSpriteAnalysys(bool)
  nameWithType: FrameworkUtil.RunBuiltInSpriteAnalysys(bool)
  fullName: AngeliA.FrameworkUtil.RunBuiltInSpriteAnalysys(bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: RunBuiltInSpriteAnalysys
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil.cs
    startLine: 726
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Perform checking logic for checking built-in sprite sync with artwork sheet or not
  example: []
  syntax:
    content: public static void RunBuiltInSpriteAnalysys(bool onlyLogWhenWarningFounded = false)
    parameters:
    - id: onlyLogWhenWarningFounded
      type: System.Boolean
    content.vb: Public Shared Sub RunBuiltInSpriteAnalysys(onlyLogWhenWarningFounded As Boolean = False)
  overload: AngeliA.FrameworkUtil.RunBuiltInSpriteAnalysys*
  nameWithType.vb: FrameworkUtil.RunBuiltInSpriteAnalysys(Boolean)
  fullName.vb: AngeliA.FrameworkUtil.RunBuiltInSpriteAnalysys(Boolean)
  name.vb: RunBuiltInSpriteAnalysys(Boolean)
- uid: AngeliA.FrameworkUtil.RunEmptyScriptFileAnalysis(System.String,System.Boolean)
  commentId: M:AngeliA.FrameworkUtil.RunEmptyScriptFileAnalysis(System.String,System.Boolean)
  id: RunEmptyScriptFileAnalysis(System.String,System.Boolean)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: RunEmptyScriptFileAnalysis(string, bool)
  nameWithType: FrameworkUtil.RunEmptyScriptFileAnalysis(string, bool)
  fullName: AngeliA.FrameworkUtil.RunEmptyScriptFileAnalysis(string, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: RunEmptyScriptFileAnalysis
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil.cs
    startLine: 746
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Check for empty script file in given project root
  example: []
  syntax:
    content: public static void RunEmptyScriptFileAnalysis(string rootPath, bool onlyLogWhenWarningFounded = false)
    parameters:
    - id: rootPath
      type: System.String
    - id: onlyLogWhenWarningFounded
      type: System.Boolean
    content.vb: Public Shared Sub RunEmptyScriptFileAnalysis(rootPath As String, onlyLogWhenWarningFounded As Boolean = False)
  overload: AngeliA.FrameworkUtil.RunEmptyScriptFileAnalysis*
  nameWithType.vb: FrameworkUtil.RunEmptyScriptFileAnalysis(String, Boolean)
  fullName.vb: AngeliA.FrameworkUtil.RunEmptyScriptFileAnalysis(String, Boolean)
  name.vb: RunEmptyScriptFileAnalysis(String, Boolean)
- uid: AngeliA.FrameworkUtil.RunAngeliaCodeAnalysis(System.Boolean,System.Boolean,System.Boolean)
  commentId: M:AngeliA.FrameworkUtil.RunAngeliaCodeAnalysis(System.Boolean,System.Boolean,System.Boolean)
  id: RunAngeliaCodeAnalysis(System.Boolean,System.Boolean,System.Boolean)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: RunAngeliaCodeAnalysis(bool, bool, bool)
  nameWithType: FrameworkUtil.RunAngeliaCodeAnalysis(bool, bool, bool)
  fullName: AngeliA.FrameworkUtil.RunAngeliaCodeAnalysis(bool, bool, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: RunAngeliaCodeAnalysis
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil.cs
    startLine: 769
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Perform analyses for current AngeliA project and log the report
  example: []
  syntax:
    content: public static void RunAngeliaCodeAnalysis(bool onlyLogWhenWarningFounded = false, bool fixScriptFileName = false, bool checkNoItemCombination = true)
    parameters:
    - id: onlyLogWhenWarningFounded
      type: System.Boolean
    - id: fixScriptFileName
      type: System.Boolean
    - id: checkNoItemCombination
      type: System.Boolean
    content.vb: Public Shared Sub RunAngeliaCodeAnalysis(onlyLogWhenWarningFounded As Boolean = False, fixScriptFileName As Boolean = False, checkNoItemCombination As Boolean = True)
  overload: AngeliA.FrameworkUtil.RunAngeliaCodeAnalysis*
  nameWithType.vb: FrameworkUtil.RunAngeliaCodeAnalysis(Boolean, Boolean, Boolean)
  fullName.vb: AngeliA.FrameworkUtil.RunAngeliaCodeAnalysis(Boolean, Boolean, Boolean)
  name.vb: RunAngeliaCodeAnalysis(Boolean, Boolean, Boolean)
- uid: AngeliA.FrameworkUtil.InvokeObjectBreak(System.Int32,AngeliA.IRect)
  commentId: M:AngeliA.FrameworkUtil.InvokeObjectBreak(System.Int32,AngeliA.IRect)
  id: InvokeObjectBreak(System.Int32,AngeliA.IRect)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: InvokeObjectBreak(int, IRect)
  nameWithType: FrameworkUtil.InvokeObjectBreak(int, IRect)
  fullName: AngeliA.FrameworkUtil.InvokeObjectBreak(int, AngeliA.IRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Event.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: InvokeObjectBreak
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Event.cs
    startLine: 35
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Invoke function for object broke animation
  example: []
  syntax:
    content: public static void InvokeObjectBreak(int spriteID, IRect rect)
    parameters:
    - id: spriteID
      type: System.Int32
      description: Artwork sprite ID
    - id: rect
      type: AngeliA.IRect
      description: Starting rect position in global space
    content.vb: Public Shared Sub InvokeObjectBreak(spriteID As Integer, rect As IRect)
  overload: AngeliA.FrameworkUtil.InvokeObjectBreak*
  nameWithType.vb: FrameworkUtil.InvokeObjectBreak(Integer, IRect)
  fullName.vb: AngeliA.FrameworkUtil.InvokeObjectBreak(Integer, AngeliA.IRect)
  name.vb: InvokeObjectBreak(Integer, IRect)
- uid: AngeliA.FrameworkUtil.InvokeObjectFreeFall(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  commentId: M:AngeliA.FrameworkUtil.InvokeObjectFreeFall(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  id: InvokeObjectFreeFall(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: InvokeObjectFreeFall(int, int, int, int, int, int, int, int, bool)
  nameWithType: FrameworkUtil.InvokeObjectFreeFall(int, int, int, int, int, int, int, int, bool)
  fullName: AngeliA.FrameworkUtil.InvokeObjectFreeFall(int, int, int, int, int, int, int, int, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Event.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: InvokeObjectFreeFall
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Event.cs
    startLine: 49
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Invoke function for free fall animation
  example: []
  syntax:
    content: public static void InvokeObjectFreeFall(int spriteID, int x, int y, int speedX = 0, int speedY = 0, int rotation = -2147483648, int rotationSpeed = 0, int gravity = 5, bool flipX = false)
    parameters:
    - id: spriteID
      type: System.Int32
      description: Artwork sprite ID
    - id: x
      type: System.Int32
      description: Start position X in global space
    - id: y
      type: System.Int32
      description: Start position Y in global space
    - id: speedX
      type: System.Int32
      description: Initial speed X
    - id: speedY
      type: System.Int32
      description: Initial speed Y
    - id: rotation
      type: System.Int32
      description: Initial rotation
    - id: rotationSpeed
      type: System.Int32
      description: ''
    - id: gravity
      type: System.Int32
      description: ''
    - id: flipX
      type: System.Boolean
      description: True if artwork sprite flip horizontaly
    content.vb: Public Shared Sub InvokeObjectFreeFall(spriteID As Integer, x As Integer, y As Integer, speedX As Integer = 0, speedY As Integer = 0, rotation As Integer = -2147483648, rotationSpeed As Integer = 0, gravity As Integer = 5, flipX As Boolean = False)
  overload: AngeliA.FrameworkUtil.InvokeObjectFreeFall*
  nameWithType.vb: FrameworkUtil.InvokeObjectFreeFall(Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Boolean)
  fullName.vb: AngeliA.FrameworkUtil.InvokeObjectFreeFall(Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Boolean)
  name.vb: InvokeObjectFreeFall(Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Boolean)
- uid: AngeliA.FrameworkUtil.InvokeBlockPicked(System.Int32,AngeliA.IRect)
  commentId: M:AngeliA.FrameworkUtil.InvokeBlockPicked(System.Int32,AngeliA.IRect)
  id: InvokeBlockPicked(System.Int32,AngeliA.IRect)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: InvokeBlockPicked(int, IRect)
  nameWithType: FrameworkUtil.InvokeBlockPicked(int, IRect)
  fullName: AngeliA.FrameworkUtil.InvokeBlockPicked(int, AngeliA.IRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Event.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: InvokeBlockPicked
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Event.cs
    startLine: 56
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Invoke function for map block get picked
  example: []
  syntax:
    content: public static void InvokeBlockPicked(int spriteID, IRect rect)
    parameters:
    - id: spriteID
      type: System.Int32
      description: Artwork sprite ID
    - id: rect
      type: AngeliA.IRect
      description: Starting rect position in global space
    content.vb: Public Shared Sub InvokeBlockPicked(spriteID As Integer, rect As IRect)
  overload: AngeliA.FrameworkUtil.InvokeBlockPicked*
  nameWithType.vb: FrameworkUtil.InvokeBlockPicked(Integer, IRect)
  fullName.vb: AngeliA.FrameworkUtil.InvokeBlockPicked(Integer, AngeliA.IRect)
  name.vb: InvokeBlockPicked(Integer, IRect)
- uid: AngeliA.FrameworkUtil.InvokeFallIntoWater(AngeliA.Rigidbody,AngeliA.Entity)
  commentId: M:AngeliA.FrameworkUtil.InvokeFallIntoWater(AngeliA.Rigidbody,AngeliA.Entity)
  id: InvokeFallIntoWater(AngeliA.Rigidbody,AngeliA.Entity)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: InvokeFallIntoWater(Rigidbody, Entity)
  nameWithType: FrameworkUtil.InvokeFallIntoWater(Rigidbody, Entity)
  fullName: AngeliA.FrameworkUtil.InvokeFallIntoWater(AngeliA.Rigidbody, AngeliA.Entity)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Event.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: InvokeFallIntoWater
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Event.cs
    startLine: 63
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Invoke function for object get into water
  example: []
  syntax:
    content: public static void InvokeFallIntoWater(Rigidbody rig, Entity water)
    parameters:
    - id: rig
      type: AngeliA.Rigidbody
      description: Target object
    - id: water
      type: AngeliA.Entity
      description: Water entity instance. Null if water is from map block
    content.vb: Public Shared Sub InvokeFallIntoWater(rig As Rigidbody, water As Entity)
  overload: AngeliA.FrameworkUtil.InvokeFallIntoWater*
- uid: AngeliA.FrameworkUtil.InvokeCameOutOfWater(AngeliA.Rigidbody,AngeliA.Entity)
  commentId: M:AngeliA.FrameworkUtil.InvokeCameOutOfWater(AngeliA.Rigidbody,AngeliA.Entity)
  id: InvokeCameOutOfWater(AngeliA.Rigidbody,AngeliA.Entity)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: InvokeCameOutOfWater(Rigidbody, Entity)
  nameWithType: FrameworkUtil.InvokeCameOutOfWater(Rigidbody, Entity)
  fullName: AngeliA.FrameworkUtil.InvokeCameOutOfWater(AngeliA.Rigidbody, AngeliA.Entity)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Event.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: InvokeCameOutOfWater
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Event.cs
    startLine: 70
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Invoke function for object get out of water
  example: []
  syntax:
    content: public static void InvokeCameOutOfWater(Rigidbody rig, Entity water)
    parameters:
    - id: rig
      type: AngeliA.Rigidbody
      description: Target object
    - id: water
      type: AngeliA.Entity
      description: Water entity instance. Null if water is from map block
    content.vb: Public Shared Sub InvokeCameOutOfWater(rig As Rigidbody, water As Entity)
  overload: AngeliA.FrameworkUtil.InvokeCameOutOfWater*
- uid: AngeliA.FrameworkUtil.InvokeErrorHint(System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.FrameworkUtil.InvokeErrorHint(System.Int32,System.Int32,System.Int32)
  id: InvokeErrorHint(System.Int32,System.Int32,System.Int32)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: InvokeErrorHint(int, int, int)
  nameWithType: FrameworkUtil.InvokeErrorHint(int, int, int)
  fullName: AngeliA.FrameworkUtil.InvokeErrorHint(int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Event.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: InvokeErrorHint
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Event.cs
    startLine: 78
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Invoke animation hint for error
  example: []
  syntax:
    content: public static void InvokeErrorHint(int x, int y, int id)
    parameters:
    - id: x
      type: System.Int32
      description: Position in global space
    - id: y
      type: System.Int32
      description: Position in global space
    - id: id
      type: System.Int32
      description: Artwork sprite ID for the icon inside
    content.vb: Public Shared Sub InvokeErrorHint(x As Integer, y As Integer, id As Integer)
  overload: AngeliA.FrameworkUtil.InvokeErrorHint*
  nameWithType.vb: FrameworkUtil.InvokeErrorHint(Integer, Integer, Integer)
  fullName.vb: AngeliA.FrameworkUtil.InvokeErrorHint(Integer, Integer, Integer)
  name.vb: InvokeErrorHint(Integer, Integer, Integer)
- uid: AngeliA.FrameworkUtil.InvokeErrorHint(AngeliA.Entity,System.Int32)
  commentId: M:AngeliA.FrameworkUtil.InvokeErrorHint(AngeliA.Entity,System.Int32)
  id: InvokeErrorHint(AngeliA.Entity,System.Int32)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: InvokeErrorHint(Entity, int)
  nameWithType: FrameworkUtil.InvokeErrorHint(Entity, int)
  fullName: AngeliA.FrameworkUtil.InvokeErrorHint(AngeliA.Entity, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Event.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: InvokeErrorHint
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Event.cs
    startLine: 85
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Invoke animation hint for error
  example: []
  syntax:
    content: public static void InvokeErrorHint(Entity holder, int id)
    parameters:
    - id: holder
      type: AngeliA.Entity
      description: Entity that get the error
    - id: id
      type: System.Int32
      description: Artwork sprite ID for the icon inside
    content.vb: Public Shared Sub InvokeErrorHint(holder As Entity, id As Integer)
  overload: AngeliA.FrameworkUtil.InvokeErrorHint*
  nameWithType.vb: FrameworkUtil.InvokeErrorHint(Entity, Integer)
  fullName.vb: AngeliA.FrameworkUtil.InvokeErrorHint(AngeliA.Entity, Integer)
  name.vb: InvokeErrorHint(Entity, Integer)
- uid: AngeliA.FrameworkUtil.InvokeItemCollected(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.FrameworkUtil.InvokeItemCollected(System.Int32,System.Int32,System.Int32,System.Int32)
  id: InvokeItemCollected(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: InvokeItemCollected(int, int, int, int)
  nameWithType: FrameworkUtil.InvokeItemCollected(int, int, int, int)
  fullName: AngeliA.FrameworkUtil.InvokeItemCollected(int, int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Event.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: InvokeItemCollected
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Event.cs
    startLine: 97
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Invoke function for item get collected by a character
  example: []
  syntax:
    content: public static void InvokeItemCollected(int id, int x, int y, int count)
    parameters:
    - id: id
      type: System.Int32
      description: ID of the item
    - id: x
      type: System.Int32
      description: Position in global space
    - id: y
      type: System.Int32
      description: Position in global space
    - id: count
      type: System.Int32
      description: How many items get collected
    content.vb: Public Shared Sub InvokeItemCollected(id As Integer, x As Integer, y As Integer, count As Integer)
  overload: AngeliA.FrameworkUtil.InvokeItemCollected*
  nameWithType.vb: FrameworkUtil.InvokeItemCollected(Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.FrameworkUtil.InvokeItemCollected(Integer, Integer, Integer, Integer)
  name.vb: InvokeItemCollected(Integer, Integer, Integer, Integer)
- uid: AngeliA.FrameworkUtil.InvokeItemCollected(AngeliA.Entity,System.Int32,System.Int32)
  commentId: M:AngeliA.FrameworkUtil.InvokeItemCollected(AngeliA.Entity,System.Int32,System.Int32)
  id: InvokeItemCollected(AngeliA.Entity,System.Int32,System.Int32)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: InvokeItemCollected(Entity, int, int)
  nameWithType: FrameworkUtil.InvokeItemCollected(Entity, int, int)
  fullName: AngeliA.FrameworkUtil.InvokeItemCollected(AngeliA.Entity, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Event.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: InvokeItemCollected
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Event.cs
    startLine: 105
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Invoke function for item get collected by a character
  example: []
  syntax:
    content: public static void InvokeItemCollected(Entity collector, int id, int count)
    parameters:
    - id: collector
      type: AngeliA.Entity
      description: Character that collect the item
    - id: id
      type: System.Int32
      description: ID of the item
    - id: count
      type: System.Int32
      description: How many items get collected
    content.vb: Public Shared Sub InvokeItemCollected(collector As Entity, id As Integer, count As Integer)
  overload: AngeliA.FrameworkUtil.InvokeItemCollected*
  nameWithType.vb: FrameworkUtil.InvokeItemCollected(Entity, Integer, Integer)
  fullName.vb: AngeliA.FrameworkUtil.InvokeItemCollected(AngeliA.Entity, Integer, Integer)
  name.vb: InvokeItemCollected(Entity, Integer, Integer)
- uid: AngeliA.FrameworkUtil.InvokeItemLost(AngeliA.Character,System.Int32)
  commentId: M:AngeliA.FrameworkUtil.InvokeItemLost(AngeliA.Character,System.Int32)
  id: InvokeItemLost(AngeliA.Character,System.Int32)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: InvokeItemLost(Character, int)
  nameWithType: FrameworkUtil.InvokeItemLost(Character, int)
  fullName: AngeliA.FrameworkUtil.InvokeItemLost(AngeliA.Character, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Event.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: InvokeItemLost
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Event.cs
    startLine: 112
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Invoke function for character lost an item
  example: []
  syntax:
    content: public static void InvokeItemLost(Character holder, int id)
    parameters:
    - id: holder
      type: AngeliA.Character
      description: Character that lost the item
    - id: id
      type: System.Int32
      description: ID of the item
    content.vb: Public Shared Sub InvokeItemLost(holder As Character, id As Integer)
  overload: AngeliA.FrameworkUtil.InvokeItemLost*
  nameWithType.vb: FrameworkUtil.InvokeItemLost(Character, Integer)
  fullName.vb: AngeliA.FrameworkUtil.InvokeItemLost(AngeliA.Character, Integer)
  name.vb: InvokeItemLost(Character, Integer)
- uid: AngeliA.FrameworkUtil.InvokeItemDamage(AngeliA.Character,System.Int32,System.Int32)
  commentId: M:AngeliA.FrameworkUtil.InvokeItemDamage(AngeliA.Character,System.Int32,System.Int32)
  id: InvokeItemDamage(AngeliA.Character,System.Int32,System.Int32)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: InvokeItemDamage(Character, int, int)
  nameWithType: FrameworkUtil.InvokeItemDamage(Character, int, int)
  fullName: AngeliA.FrameworkUtil.InvokeItemDamage(AngeliA.Character, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Event.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: InvokeItemDamage
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Event.cs
    startLine: 120
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Invoke function for item being damaged/broken
  example: []
  syntax:
    content: public static void InvokeItemDamage(Character holder, int fromID, int toID)
    parameters:
    - id: holder
      type: AngeliA.Character
      description: Character that own the item
    - id: fromID
      type: System.Int32
      description: ID of the item before it broke
    - id: toID
      type: System.Int32
      description: ID of the item after it broke
    content.vb: Public Shared Sub InvokeItemDamage(holder As Character, fromID As Integer, toID As Integer)
  overload: AngeliA.FrameworkUtil.InvokeItemDamage*
  nameWithType.vb: FrameworkUtil.InvokeItemDamage(Character, Integer, Integer)
  fullName.vb: AngeliA.FrameworkUtil.InvokeItemDamage(AngeliA.Character, Integer, Integer)
  name.vb: InvokeItemDamage(Character, Integer, Integer)
- uid: AngeliA.FrameworkUtil.InvokeItemUnlocked(System.Int32)
  commentId: M:AngeliA.FrameworkUtil.InvokeItemUnlocked(System.Int32)
  id: InvokeItemUnlocked(System.Int32)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: InvokeItemUnlocked(int)
  nameWithType: FrameworkUtil.InvokeItemUnlocked(int)
  fullName: AngeliA.FrameworkUtil.InvokeItemUnlocked(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Event.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: InvokeItemUnlocked
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Event.cs
    startLine: 126
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Invoke function for item being unlocked
  example: []
  syntax:
    content: public static void InvokeItemUnlocked(int itemID)
    parameters:
    - id: itemID
      type: System.Int32
      description: ID of the unlocked item
    content.vb: Public Shared Sub InvokeItemUnlocked(itemID As Integer)
  overload: AngeliA.FrameworkUtil.InvokeItemUnlocked*
  nameWithType.vb: FrameworkUtil.InvokeItemUnlocked(Integer)
  fullName.vb: AngeliA.FrameworkUtil.InvokeItemUnlocked(Integer)
  name.vb: InvokeItemUnlocked(Integer)
- uid: AngeliA.FrameworkUtil.InvokeCheatPerformed(System.String)
  commentId: M:AngeliA.FrameworkUtil.InvokeCheatPerformed(System.String)
  id: InvokeCheatPerformed(System.String)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: InvokeCheatPerformed(string)
  nameWithType: FrameworkUtil.InvokeCheatPerformed(string)
  fullName: AngeliA.FrameworkUtil.InvokeCheatPerformed(string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Event.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: InvokeCheatPerformed
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Event.cs
    startLine: 132
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Invoke function for a cheat code get performed
  example: []
  syntax:
    content: public static void InvokeCheatPerformed(string cheatCode)
    parameters:
    - id: cheatCode
      type: System.String
      description: The performed cheat code
    content.vb: Public Shared Sub InvokeCheatPerformed(cheatCode As String)
  overload: AngeliA.FrameworkUtil.InvokeCheatPerformed*
  nameWithType.vb: FrameworkUtil.InvokeCheatPerformed(String)
  fullName.vb: AngeliA.FrameworkUtil.InvokeCheatPerformed(String)
  name.vb: InvokeCheatPerformed(String)
- uid: AngeliA.FrameworkUtil.InvokeOnFootStepped(AngeliA.Entity)
  commentId: M:AngeliA.FrameworkUtil.InvokeOnFootStepped(AngeliA.Entity)
  id: InvokeOnFootStepped(AngeliA.Entity)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: InvokeOnFootStepped(Entity)
  nameWithType: FrameworkUtil.InvokeOnFootStepped(Entity)
  fullName: AngeliA.FrameworkUtil.InvokeOnFootStepped(AngeliA.Entity)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Event.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: InvokeOnFootStepped
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Event.cs
    startLine: 137
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Invoke function for a character walks with a foot step
  example: []
  syntax:
    content: public static void InvokeOnFootStepped(Entity target)
    parameters:
    - id: target
      type: AngeliA.Entity
    content.vb: Public Shared Sub InvokeOnFootStepped(target As Entity)
  overload: AngeliA.FrameworkUtil.InvokeOnFootStepped*
- uid: AngeliA.FrameworkUtil.InvokeOnCharacterSleeping(AngeliA.Entity)
  commentId: M:AngeliA.FrameworkUtil.InvokeOnCharacterSleeping(AngeliA.Entity)
  id: InvokeOnCharacterSleeping(AngeliA.Entity)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: InvokeOnCharacterSleeping(Entity)
  nameWithType: FrameworkUtil.InvokeOnCharacterSleeping(Entity)
  fullName: AngeliA.FrameworkUtil.InvokeOnCharacterSleeping(AngeliA.Entity)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Event.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: InvokeOnCharacterSleeping
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Event.cs
    startLine: 142
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Invoke function for a character is sleeping
  example: []
  syntax:
    content: public static void InvokeOnCharacterSleeping(Entity target)
    parameters:
    - id: target
      type: AngeliA.Entity
    content.vb: Public Shared Sub InvokeOnCharacterSleeping(target As Entity)
  overload: AngeliA.FrameworkUtil.InvokeOnCharacterSleeping*
- uid: AngeliA.FrameworkUtil.InvokeOnCharacterJump(AngeliA.Entity)
  commentId: M:AngeliA.FrameworkUtil.InvokeOnCharacterJump(AngeliA.Entity)
  id: InvokeOnCharacterJump(AngeliA.Entity)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: InvokeOnCharacterJump(Entity)
  nameWithType: FrameworkUtil.InvokeOnCharacterJump(Entity)
  fullName: AngeliA.FrameworkUtil.InvokeOnCharacterJump(AngeliA.Entity)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Event.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: InvokeOnCharacterJump
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Event.cs
    startLine: 147
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Invoke function for character jumps
  example: []
  syntax:
    content: public static void InvokeOnCharacterJump(Entity target)
    parameters:
    - id: target
      type: AngeliA.Entity
    content.vb: Public Shared Sub InvokeOnCharacterJump(target As Entity)
  overload: AngeliA.FrameworkUtil.InvokeOnCharacterJump*
- uid: AngeliA.FrameworkUtil.InvokeOnCharacterPound(AngeliA.Entity)
  commentId: M:AngeliA.FrameworkUtil.InvokeOnCharacterPound(AngeliA.Entity)
  id: InvokeOnCharacterPound(AngeliA.Entity)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: InvokeOnCharacterPound(Entity)
  nameWithType: FrameworkUtil.InvokeOnCharacterPound(Entity)
  fullName: AngeliA.FrameworkUtil.InvokeOnCharacterPound(AngeliA.Entity)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Event.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: InvokeOnCharacterPound
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Event.cs
    startLine: 152
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Invoke function for character ground pound
  example: []
  syntax:
    content: public static void InvokeOnCharacterPound(Entity target)
    parameters:
    - id: target
      type: AngeliA.Entity
    content.vb: Public Shared Sub InvokeOnCharacterPound(target As Entity)
  overload: AngeliA.FrameworkUtil.InvokeOnCharacterPound*
- uid: AngeliA.FrameworkUtil.InvokeOnCharacterFly(AngeliA.Entity)
  commentId: M:AngeliA.FrameworkUtil.InvokeOnCharacterFly(AngeliA.Entity)
  id: InvokeOnCharacterFly(AngeliA.Entity)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: InvokeOnCharacterFly(Entity)
  nameWithType: FrameworkUtil.InvokeOnCharacterFly(Entity)
  fullName: AngeliA.FrameworkUtil.InvokeOnCharacterFly(AngeliA.Entity)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Event.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: InvokeOnCharacterFly
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Event.cs
    startLine: 157
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Invoke function for character fly
  example: []
  syntax:
    content: public static void InvokeOnCharacterFly(Entity target)
    parameters:
    - id: target
      type: AngeliA.Entity
    content.vb: Public Shared Sub InvokeOnCharacterFly(target As Entity)
  overload: AngeliA.FrameworkUtil.InvokeOnCharacterFly*
- uid: AngeliA.FrameworkUtil.InvokeOnCharacterSlideStepped(AngeliA.Entity)
  commentId: M:AngeliA.FrameworkUtil.InvokeOnCharacterSlideStepped(AngeliA.Entity)
  id: InvokeOnCharacterSlideStepped(AngeliA.Entity)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: InvokeOnCharacterSlideStepped(Entity)
  nameWithType: FrameworkUtil.InvokeOnCharacterSlideStepped(Entity)
  fullName: AngeliA.FrameworkUtil.InvokeOnCharacterSlideStepped(AngeliA.Entity)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Event.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: InvokeOnCharacterSlideStepped
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Event.cs
    startLine: 162
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Invoke function for character slide with a step
  example: []
  syntax:
    content: public static void InvokeOnCharacterSlideStepped(Entity target)
    parameters:
    - id: target
      type: AngeliA.Entity
    content.vb: Public Shared Sub InvokeOnCharacterSlideStepped(target As Entity)
  overload: AngeliA.FrameworkUtil.InvokeOnCharacterSlideStepped*
- uid: AngeliA.FrameworkUtil.InvokeOnCharacterPassOut(AngeliA.Entity)
  commentId: M:AngeliA.FrameworkUtil.InvokeOnCharacterPassOut(AngeliA.Entity)
  id: InvokeOnCharacterPassOut(AngeliA.Entity)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: InvokeOnCharacterPassOut(Entity)
  nameWithType: FrameworkUtil.InvokeOnCharacterPassOut(Entity)
  fullName: AngeliA.FrameworkUtil.InvokeOnCharacterPassOut(AngeliA.Entity)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Event.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: InvokeOnCharacterPassOut
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Event.cs
    startLine: 167
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Invoke function for character get pass out
  example: []
  syntax:
    content: public static void InvokeOnCharacterPassOut(Entity target)
    parameters:
    - id: target
      type: AngeliA.Entity
    content.vb: Public Shared Sub InvokeOnCharacterPassOut(target As Entity)
  overload: AngeliA.FrameworkUtil.InvokeOnCharacterPassOut*
- uid: AngeliA.FrameworkUtil.InvokeOnCharacterTeleport(AngeliA.Entity)
  commentId: M:AngeliA.FrameworkUtil.InvokeOnCharacterTeleport(AngeliA.Entity)
  id: InvokeOnCharacterTeleport(AngeliA.Entity)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: InvokeOnCharacterTeleport(Entity)
  nameWithType: FrameworkUtil.InvokeOnCharacterTeleport(Entity)
  fullName: AngeliA.FrameworkUtil.InvokeOnCharacterTeleport(AngeliA.Entity)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Event.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: InvokeOnCharacterTeleport
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Event.cs
    startLine: 172
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Invoke function for character perform a teleport
  example: []
  syntax:
    content: public static void InvokeOnCharacterTeleport(Entity target)
    parameters:
    - id: target
      type: AngeliA.Entity
    content.vb: Public Shared Sub InvokeOnCharacterTeleport(target As Entity)
  overload: AngeliA.FrameworkUtil.InvokeOnCharacterTeleport*
- uid: AngeliA.FrameworkUtil.InvokeOnCharacterCrash(AngeliA.Entity)
  commentId: M:AngeliA.FrameworkUtil.InvokeOnCharacterCrash(AngeliA.Entity)
  id: InvokeOnCharacterCrash(AngeliA.Entity)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: InvokeOnCharacterCrash(Entity)
  nameWithType: FrameworkUtil.InvokeOnCharacterCrash(Entity)
  fullName: AngeliA.FrameworkUtil.InvokeOnCharacterCrash(AngeliA.Entity)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Event.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: InvokeOnCharacterCrash
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Event.cs
    startLine: 177
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Invoke function for character crash
  example: []
  syntax:
    content: public static void InvokeOnCharacterCrash(Entity target)
    parameters:
    - id: target
      type: AngeliA.Entity
    content.vb: Public Shared Sub InvokeOnCharacterCrash(target As Entity)
  overload: AngeliA.FrameworkUtil.InvokeOnCharacterCrash*
- uid: AngeliA.FrameworkUtil.RedirectForRule(AngeliA.IBlockSquad,AngeliA.IRect,System.Int32)
  commentId: M:AngeliA.FrameworkUtil.RedirectForRule(AngeliA.IBlockSquad,AngeliA.IRect,System.Int32)
  id: RedirectForRule(AngeliA.IBlockSquad,AngeliA.IRect,System.Int32)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: RedirectForRule(IBlockSquad, IRect, int)
  nameWithType: FrameworkUtil.RedirectForRule(IBlockSquad, IRect, int)
  fullName: AngeliA.FrameworkUtil.RedirectForRule(AngeliA.IBlockSquad, AngeliA.IRect, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: RedirectForRule
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
    startLine: 46
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Auto tile all map blocks inside given range
  example: []
  syntax:
    content: public static void RedirectForRule(IBlockSquad squad, IRect unitRange, int z)
    parameters:
    - id: squad
      type: AngeliA.IBlockSquad
      description: Source of the map blocks
    - id: unitRange
      type: AngeliA.IRect
      description: Target range in unit space
    - id: z
      type: System.Int32
      description: Position Z
    content.vb: Public Shared Sub RedirectForRule(squad As IBlockSquad, unitRange As IRect, z As Integer)
  overload: AngeliA.FrameworkUtil.RedirectForRule*
  nameWithType.vb: FrameworkUtil.RedirectForRule(IBlockSquad, IRect, Integer)
  fullName.vb: AngeliA.FrameworkUtil.RedirectForRule(AngeliA.IBlockSquad, AngeliA.IRect, Integer)
  name.vb: RedirectForRule(IBlockSquad, IRect, Integer)
- uid: AngeliA.FrameworkUtil.RedirectForRule(AngeliA.IBlockSquad,System.Int32,System.Int32,System.Int32,AngeliA.BlockType)
  commentId: M:AngeliA.FrameworkUtil.RedirectForRule(AngeliA.IBlockSquad,System.Int32,System.Int32,System.Int32,AngeliA.BlockType)
  id: RedirectForRule(AngeliA.IBlockSquad,System.Int32,System.Int32,System.Int32,AngeliA.BlockType)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: RedirectForRule(IBlockSquad, int, int, int, BlockType)
  nameWithType: FrameworkUtil.RedirectForRule(IBlockSquad, int, int, int, BlockType)
  fullName: AngeliA.FrameworkUtil.RedirectForRule(AngeliA.IBlockSquad, int, int, int, AngeliA.BlockType)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: RedirectForRule
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
    startLine: 66
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Auto tile map block in given position and all tiles nearby
  example: []
  syntax:
    content: public static void RedirectForRule(IBlockSquad squad, int unitX, int unitY, int z, BlockType type)
    parameters:
    - id: squad
      type: AngeliA.IBlockSquad
      description: Source of the map blocks
    - id: unitX
      type: System.Int32
      description: Position in unit space
    - id: unitY
      type: System.Int32
      description: Position in unit space
    - id: z
      type: System.Int32
      description: Position z
    - id: type
      type: AngeliA.BlockType
      description: Type of the auto tile block
    content.vb: Public Shared Sub RedirectForRule(squad As IBlockSquad, unitX As Integer, unitY As Integer, z As Integer, type As BlockType)
  overload: AngeliA.FrameworkUtil.RedirectForRule*
  nameWithType.vb: FrameworkUtil.RedirectForRule(IBlockSquad, Integer, Integer, Integer, BlockType)
  fullName.vb: AngeliA.FrameworkUtil.RedirectForRule(AngeliA.IBlockSquad, Integer, Integer, Integer, AngeliA.BlockType)
  name.vb: RedirectForRule(IBlockSquad, Integer, Integer, Integer, BlockType)
- uid: AngeliA.FrameworkUtil.GetRuleIndex(System.Collections.Generic.IList{AngeliA.AngeSprite},System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.FrameworkUtil.GetRuleIndex(System.Collections.Generic.IList{AngeliA.AngeSprite},System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: GetRuleIndex(System.Collections.Generic.IList{AngeliA.AngeSprite},System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: GetRuleIndex(IList<AngeSprite>, int, int, int, int, int, int, int, int, int)
  nameWithType: FrameworkUtil.GetRuleIndex(IList<AngeSprite>, int, int, int, int, int, int, int, int, int)
  fullName: AngeliA.FrameworkUtil.GetRuleIndex(System.Collections.Generic.IList<AngeliA.AngeSprite>, int, int, int, int, int, int, int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetRuleIndex
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
    startLine: 104
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Find which tile in the given list conforms the auto tiling rule
  example: []
  syntax:
    content: public static int GetRuleIndex(IList<AngeSprite> sprites, int ruleDigit, int tl, int tm, int tr, int ml, int mr, int bl, int bm, int br)
    parameters:
    - id: sprites
      type: System.Collections.Generic.IList{AngeliA.AngeSprite}
      description: Source list
    - id: ruleDigit
      type: System.Int32
      description: Int data of the tiling rule. Get this data with FrameworkUtil.BlockRuleToDigit
    - id: tl
      type: System.Int32
      description: ID for block at top-left
    - id: tm
      type: System.Int32
      description: ID for block at top
    - id: tr
      type: System.Int32
      description: ID for block at top-right
    - id: ml
      type: System.Int32
      description: ID for block at left
    - id: mr
      type: System.Int32
      description: ID for block at right
    - id: bl
      type: System.Int32
      description: ID for block at bottom-left
    - id: bm
      type: System.Int32
      description: ID for block at bottom
    - id: br
      type: System.Int32
      description: ID for block at bottom-right
    return:
      type: System.Int32
      description: Index of the founded sprite
    content.vb: Public Shared Function GetRuleIndex(sprites As IList(Of AngeSprite), ruleDigit As Integer, tl As Integer, tm As Integer, tr As Integer, ml As Integer, mr As Integer, bl As Integer, bm As Integer, br As Integer) As Integer
  overload: AngeliA.FrameworkUtil.GetRuleIndex*
  nameWithType.vb: FrameworkUtil.GetRuleIndex(IList(Of AngeSprite), Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.FrameworkUtil.GetRuleIndex(System.Collections.Generic.IList(Of AngeliA.AngeSprite), Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
  name.vb: GetRuleIndex(IList(Of AngeSprite), Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
- uid: AngeliA.FrameworkUtil.DigitToBlockRule(System.Int32)
  commentId: M:AngeliA.FrameworkUtil.DigitToBlockRule(System.Int32)
  id: DigitToBlockRule(System.Int32)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: DigitToBlockRule(int)
  nameWithType: FrameworkUtil.DigitToBlockRule(int)
  fullName: AngeliA.FrameworkUtil.DigitToBlockRule(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DigitToBlockRule
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
    startLine: 153
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Convert auto tiling rule digit into BlockRule struct
  example: []
  syntax:
    content: public static BlockRule DigitToBlockRule(int digit)
    parameters:
    - id: digit
      type: System.Int32
    return:
      type: AngeliA.BlockRule
    content.vb: Public Shared Function DigitToBlockRule(digit As Integer) As BlockRule
  overload: AngeliA.FrameworkUtil.DigitToBlockRule*
  nameWithType.vb: FrameworkUtil.DigitToBlockRule(Integer)
  fullName.vb: AngeliA.FrameworkUtil.DigitToBlockRule(Integer)
  name.vb: DigitToBlockRule(Integer)
- uid: AngeliA.FrameworkUtil.DigitToRuleByte(System.Int32,System.Byte[])
  commentId: M:AngeliA.FrameworkUtil.DigitToRuleByte(System.Int32,System.Byte[])
  id: DigitToRuleByte(System.Int32,System.Byte[])
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: DigitToRuleByte(int, byte[])
  nameWithType: FrameworkUtil.DigitToRuleByte(int, byte[])
  fullName: AngeliA.FrameworkUtil.DigitToRuleByte(int, byte[])
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DigitToRuleByte
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
    startLine: 174
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Convert auto tiling rule digit into byte array
  example: []
  syntax:
    content: public static void DigitToRuleByte(int digit, byte[] bytes)
    parameters:
    - id: digit
      type: System.Int32
    - id: bytes
      type: System.Byte[]
    content.vb: Public Shared Sub DigitToRuleByte(digit As Integer, bytes As Byte())
  overload: AngeliA.FrameworkUtil.DigitToRuleByte*
  nameWithType.vb: FrameworkUtil.DigitToRuleByte(Integer, Byte())
  fullName.vb: AngeliA.FrameworkUtil.DigitToRuleByte(Integer, Byte())
  name.vb: DigitToRuleByte(Integer, Byte())
- uid: AngeliA.FrameworkUtil.BlockRuleToDigit(AngeliA.BlockRule)
  commentId: M:AngeliA.FrameworkUtil.BlockRuleToDigit(AngeliA.BlockRule)
  id: BlockRuleToDigit(AngeliA.BlockRule)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: BlockRuleToDigit(BlockRule)
  nameWithType: FrameworkUtil.BlockRuleToDigit(BlockRule)
  fullName: AngeliA.FrameworkUtil.BlockRuleToDigit(AngeliA.BlockRule)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: BlockRuleToDigit
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
    startLine: 192
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Convert BlockRule struct into auto tiling rule digit
  example: []
  syntax:
    content: public static int BlockRuleToDigit(BlockRule ruleStr)
    parameters:
    - id: ruleStr
      type: AngeliA.BlockRule
    return:
      type: System.Int32
    content.vb: Public Shared Function BlockRuleToDigit(ruleStr As BlockRule) As Integer
  overload: AngeliA.FrameworkUtil.BlockRuleToDigit*
- uid: AngeliA.FrameworkUtil.RuleByteToDigit(System.Byte[])
  commentId: M:AngeliA.FrameworkUtil.RuleByteToDigit(System.Byte[])
  id: RuleByteToDigit(System.Byte[])
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: RuleByteToDigit(byte[])
  nameWithType: FrameworkUtil.RuleByteToDigit(byte[])
  fullName: AngeliA.FrameworkUtil.RuleByteToDigit(byte[])
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: RuleByteToDigit
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
    startLine: 212
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Convert byte array into auto tiling rule digit
  example: []
  syntax:
    content: public static int RuleByteToDigit(byte[] singleRule)
    parameters:
    - id: singleRule
      type: System.Byte[]
    return:
      type: System.Int32
    content.vb: Public Shared Function RuleByteToDigit(singleRule As Byte()) As Integer
  overload: AngeliA.FrameworkUtil.RuleByteToDigit*
  nameWithType.vb: FrameworkUtil.RuleByteToDigit(Byte())
  fullName.vb: AngeliA.FrameworkUtil.RuleByteToDigit(Byte())
  name.vb: RuleByteToDigit(Byte())
- uid: AngeliA.FrameworkUtil.BreakEntityBlock(AngeliA.IBlockEntity)
  commentId: M:AngeliA.FrameworkUtil.BreakEntityBlock(AngeliA.IBlockEntity)
  id: BreakEntityBlock(AngeliA.IBlockEntity)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: BreakEntityBlock(IBlockEntity)
  nameWithType: FrameworkUtil.BreakEntityBlock(IBlockEntity)
  fullName: AngeliA.FrameworkUtil.BreakEntityBlock(AngeliA.IBlockEntity)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: BreakEntityBlock
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
    startLine: 233
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Remove given block entity from map and invoke corresponding callback functions. (Do not handle item drops)
  example: []
  syntax:
    content: public static bool BreakEntityBlock(IBlockEntity eBlock)
    parameters:
    - id: eBlock
      type: AngeliA.IBlockEntity
    return:
      type: System.Boolean
    content.vb: Public Shared Function BreakEntityBlock(eBlock As IBlockEntity) As Boolean
  overload: AngeliA.FrameworkUtil.BreakEntityBlock*
- uid: AngeliA.FrameworkUtil.PickBlockAt(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:AngeliA.FrameworkUtil.PickBlockAt(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  id: PickBlockAt(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: PickBlockAt(int, int, bool, bool, bool, bool, bool)
  nameWithType: FrameworkUtil.PickBlockAt(int, int, bool, bool, bool, bool, bool)
  fullName: AngeliA.FrameworkUtil.PickBlockAt(int, int, bool, bool, bool, bool, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: PickBlockAt
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
    startLine: 273
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Perform a block pick
  example: []
  syntax:
    content: public static bool PickBlockAt(int unitX, int unitY, bool allowPickBlockEntity = true, bool allowPickLevelBlock = true, bool allowPickBackgroundBlock = true, bool dropItemAfterPicked = true, bool allowMultiplePick = false)
    parameters:
    - id: unitX
      type: System.Int32
      description: Target position X in unit space
    - id: unitY
      type: System.Int32
      description: Target position Y in unit space
    - id: allowPickBlockEntity
      type: System.Boolean
      description: True if entity blocks will be picked
    - id: allowPickLevelBlock
      type: System.Boolean
      description: True if level blocks will be picked
    - id: allowPickBackgroundBlock
      type: System.Boolean
      description: True if background blocks will be picked
    - id: dropItemAfterPicked
      type: System.Boolean
      description: True if spawn an ItemHolder with the block
    - id: allowMultiplePick
      type: System.Boolean
      description: True if pick more than one block with one function call
    return:
      type: System.Boolean
      description: True if any block is picked
    content.vb: Public Shared Function PickBlockAt(unitX As Integer, unitY As Integer, allowPickBlockEntity As Boolean = True, allowPickLevelBlock As Boolean = True, allowPickBackgroundBlock As Boolean = True, dropItemAfterPicked As Boolean = True, allowMultiplePick As Boolean = False) As Boolean
  overload: AngeliA.FrameworkUtil.PickBlockAt*
  nameWithType.vb: FrameworkUtil.PickBlockAt(Integer, Integer, Boolean, Boolean, Boolean, Boolean, Boolean)
  fullName.vb: AngeliA.FrameworkUtil.PickBlockAt(Integer, Integer, Boolean, Boolean, Boolean, Boolean, Boolean)
  name.vb: PickBlockAt(Integer, Integer, Boolean, Boolean, Boolean, Boolean, Boolean)
- uid: AngeliA.FrameworkUtil.HasPickableBlockAt(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:AngeliA.FrameworkUtil.HasPickableBlockAt(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)
  id: HasPickableBlockAt(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: HasPickableBlockAt(int, int, bool, bool, bool)
  nameWithType: FrameworkUtil.HasPickableBlockAt(int, int, bool, bool, bool)
  fullName: AngeliA.FrameworkUtil.HasPickableBlockAt(int, int, bool, bool, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: HasPickableBlockAt
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
    startLine: 435
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: True if found any block can be pick at given position
  example: []
  syntax:
    content: public static bool HasPickableBlockAt(int unitX, int unitY, bool allowPickBlockEntity = true, bool allowPickLevelBlock = true, bool allowPickBackgroundBlock = true)
    parameters:
    - id: unitX
      type: System.Int32
      description: Target position X in unit space
    - id: unitY
      type: System.Int32
      description: Target position Y in unit space
    - id: allowPickBlockEntity
      type: System.Boolean
      description: True if entity blocks will be picked
    - id: allowPickLevelBlock
      type: System.Boolean
      description: True if level blocks will be picked
    - id: allowPickBackgroundBlock
      type: System.Boolean
      description: True if background blocks will be picked
    return:
      type: System.Boolean
    content.vb: Public Shared Function HasPickableBlockAt(unitX As Integer, unitY As Integer, allowPickBlockEntity As Boolean = True, allowPickLevelBlock As Boolean = True, allowPickBackgroundBlock As Boolean = True) As Boolean
  overload: AngeliA.FrameworkUtil.HasPickableBlockAt*
  nameWithType.vb: FrameworkUtil.HasPickableBlockAt(Integer, Integer, Boolean, Boolean, Boolean)
  fullName.vb: AngeliA.FrameworkUtil.HasPickableBlockAt(Integer, Integer, Boolean, Boolean, Boolean)
  name.vb: HasPickableBlockAt(Integer, Integer, Boolean, Boolean, Boolean)
- uid: AngeliA.FrameworkUtil.PutBlockTo(System.Int32,AngeliA.BlockType,System.Int32,System.Int32)
  commentId: M:AngeliA.FrameworkUtil.PutBlockTo(System.Int32,AngeliA.BlockType,System.Int32,System.Int32)
  id: PutBlockTo(System.Int32,AngeliA.BlockType,System.Int32,System.Int32)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: PutBlockTo(int, BlockType, int, int)
  nameWithType: FrameworkUtil.PutBlockTo(int, BlockType, int, int)
  fullName: AngeliA.FrameworkUtil.PutBlockTo(int, AngeliA.BlockType, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: PutBlockTo
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
    startLine: 480
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Build a block into the map
  example: []
  syntax:
    content: public static bool PutBlockTo(int blockID, BlockType blockType, int targetUnitX, int targetUnitY)
    parameters:
    - id: blockID
      type: System.Int32
      description: ID of the building block
    - id: blockType
      type: AngeliA.BlockType
      description: Type of the building block
    - id: targetUnitX
      type: System.Int32
      description: Target position X in unit space
    - id: targetUnitY
      type: System.Int32
      description: Target position Y in unit space
    return:
      type: System.Boolean
      description: True if the block is built
    content.vb: Public Shared Function PutBlockTo(blockID As Integer, blockType As BlockType, targetUnitX As Integer, targetUnitY As Integer) As Boolean
  overload: AngeliA.FrameworkUtil.PutBlockTo*
  nameWithType.vb: FrameworkUtil.PutBlockTo(Integer, BlockType, Integer, Integer)
  fullName.vb: AngeliA.FrameworkUtil.PutBlockTo(Integer, AngeliA.BlockType, Integer, Integer)
  name.vb: PutBlockTo(Integer, BlockType, Integer, Integer)
- uid: AngeliA.FrameworkUtil.TryGetEmptyPlaceNearbyForEntity(System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32,System.Boolean)
  commentId: M:AngeliA.FrameworkUtil.TryGetEmptyPlaceNearbyForEntity(System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32,System.Boolean)
  id: TryGetEmptyPlaceNearbyForEntity(System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32,System.Boolean)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: TryGetEmptyPlaceNearbyForEntity(int, int, int, out int, out int, int, bool)
  nameWithType: FrameworkUtil.TryGetEmptyPlaceNearbyForEntity(int, int, int, out int, out int, int, bool)
  fullName: AngeliA.FrameworkUtil.TryGetEmptyPlaceNearbyForEntity(int, int, int, out int, out int, int, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TryGetEmptyPlaceNearbyForEntity
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
    startLine: 571
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Find an empty place on map nearby given position for placing an entity
  example: []
  syntax:
    content: public static bool TryGetEmptyPlaceNearbyForEntity(int unitX, int unitY, int z, out int resultUnitX, out int resultUnitY, int maxRange = 8, bool preferNoSolidLevel = true)
    parameters:
    - id: unitX
      type: System.Int32
      description: Target position X in unit space
    - id: unitY
      type: System.Int32
      description: Target position Y in unit space
    - id: z
      type: System.Int32
      description: Position Z
    - id: resultUnitX
      type: System.Int32
      description: Position founded in unit space
    - id: resultUnitY
      type: System.Int32
      description: Position founded in unit space
    - id: maxRange
      type: System.Int32
      description: Maximal searching range in unit space
    - id: preferNoSolidLevel
      type: System.Boolean
      description: Set to true to put this entity into place without solid level blocks
    return:
      type: System.Boolean
      description: True if the place is founded
    content.vb: Public Shared Function TryGetEmptyPlaceNearbyForEntity(unitX As Integer, unitY As Integer, z As Integer, resultUnitX As Integer, resultUnitY As Integer, maxRange As Integer = 8, preferNoSolidLevel As Boolean = True) As Boolean
  overload: AngeliA.FrameworkUtil.TryGetEmptyPlaceNearbyForEntity*
  nameWithType.vb: FrameworkUtil.TryGetEmptyPlaceNearbyForEntity(Integer, Integer, Integer, Integer, Integer, Integer, Boolean)
  fullName.vb: AngeliA.FrameworkUtil.TryGetEmptyPlaceNearbyForEntity(Integer, Integer, Integer, Integer, Integer, Integer, Boolean)
  name.vb: TryGetEmptyPlaceNearbyForEntity(Integer, Integer, Integer, Integer, Integer, Integer, Boolean)
- uid: AngeliA.FrameworkUtil.RemoveFromWorldMemory(AngeliA.Entity)
  commentId: M:AngeliA.FrameworkUtil.RemoveFromWorldMemory(AngeliA.Entity)
  id: RemoveFromWorldMemory(AngeliA.Entity)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: RemoveFromWorldMemory(Entity)
  nameWithType: FrameworkUtil.RemoveFromWorldMemory(Entity)
  fullName: AngeliA.FrameworkUtil.RemoveFromWorldMemory(AngeliA.Entity)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: RemoveFromWorldMemory
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
    startLine: 636
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Remove target entity from world data. Only work when entity spawned from map.
  example: []
  syntax:
    content: public static void RemoveFromWorldMemory(Entity entity)
    parameters:
    - id: entity
      type: AngeliA.Entity
    content.vb: Public Shared Sub RemoveFromWorldMemory(entity As Entity)
  overload: AngeliA.FrameworkUtil.RemoveFromWorldMemory*
- uid: AngeliA.FrameworkUtil.SearchlightBlockCheck(AngeliA.IBlockSquad,AngeliA.Int3,System.Nullable{AngeliA.Direction8},System.Int32,System.Boolean)
  commentId: M:AngeliA.FrameworkUtil.SearchlightBlockCheck(AngeliA.IBlockSquad,AngeliA.Int3,System.Nullable{AngeliA.Direction8},System.Int32,System.Boolean)
  id: SearchlightBlockCheck(AngeliA.IBlockSquad,AngeliA.Int3,System.Nullable{AngeliA.Direction8},System.Int32,System.Boolean)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: SearchlightBlockCheck(IBlockSquad, Int3, Direction8?, int, bool)
  nameWithType: FrameworkUtil.SearchlightBlockCheck(IBlockSquad, Int3, Direction8?, int, bool)
  fullName: AngeliA.FrameworkUtil.SearchlightBlockCheck(AngeliA.IBlockSquad, AngeliA.Int3, AngeliA.Direction8?, int, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SearchlightBlockCheck
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
    startLine: 652
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: True if any block founded inside given range. Search blocks with specific order to lower the CPU usage.
  example: []
  syntax:
    content: public static bool SearchlightBlockCheck(IBlockSquad squad, Int3 startUnitPoint, Direction8? direction, int unitDistance = 128, bool reverse = false)
    parameters:
    - id: squad
      type: AngeliA.IBlockSquad
      description: Source of map blocks
    - id: startUnitPoint
      type: AngeliA.Int3
      description: Position to start searching in unit space
    - id: direction
      type: System.Nullable{AngeliA.Direction8}
      description: Direction of the search operation facing. Set to null to make it search in circle range.
    - id: unitDistance
      type: System.Int32
      description: Maximal distance for the search in unit space
    - id: reverse
      type: System.Boolean
      description: True if search blocks from far side first
    return:
      type: System.Boolean
    content.vb: Public Shared Function SearchlightBlockCheck(squad As IBlockSquad, startUnitPoint As Int3, direction As Direction8?, unitDistance As Integer = 128, reverse As Boolean = False) As Boolean
  overload: AngeliA.FrameworkUtil.SearchlightBlockCheck*
  nameWithType.vb: FrameworkUtil.SearchlightBlockCheck(IBlockSquad, Int3, Direction8?, Integer, Boolean)
  fullName.vb: AngeliA.FrameworkUtil.SearchlightBlockCheck(AngeliA.IBlockSquad, AngeliA.Int3, AngeliA.Direction8?, Integer, Boolean)
  name.vb: SearchlightBlockCheck(IBlockSquad, Int3, Direction8?, Integer, Boolean)
- uid: AngeliA.FrameworkUtil.GetEntityPose(System.Int32,System.Int32,System.Int32,System.Boolean)
  commentId: M:AngeliA.FrameworkUtil.GetEntityPose(System.Int32,System.Int32,System.Int32,System.Boolean)
  id: GetEntityPose(System.Int32,System.Int32,System.Int32,System.Boolean)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: GetEntityPose(int, int, int, bool)
  nameWithType: FrameworkUtil.GetEntityPose(int, int, int, bool)
  fullName: AngeliA.FrameworkUtil.GetEntityPose(int, int, int, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetEntityPose
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
    startLine: 740
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: >-
    Get FittingPose for given position and entity ID from WorldSquad. 

    eg. 3 mushroom entities makes a tall mushroom, only the top one is the cap. So your entity renders as cap only when the fitting pose is FittingPose.Up.
  example: []
  syntax:
    content: public static FittingPose GetEntityPose(int typeID, int unitX, int unitY, bool horizontal)
    parameters:
    - id: typeID
      type: System.Int32
      description: Type of the target entity
    - id: unitX
      type: System.Int32
      description: Target position X in unit space
    - id: unitY
      type: System.Int32
      description: Target position Y in unit space
    - id: horizontal
      type: System.Boolean
      description: True if the entity fits horizontaly
    return:
      type: AngeliA.FittingPose
    content.vb: Public Shared Function GetEntityPose(typeID As Integer, unitX As Integer, unitY As Integer, horizontal As Boolean) As FittingPose
  overload: AngeliA.FrameworkUtil.GetEntityPose*
  nameWithType.vb: FrameworkUtil.GetEntityPose(Integer, Integer, Integer, Boolean)
  fullName.vb: AngeliA.FrameworkUtil.GetEntityPose(Integer, Integer, Integer, Boolean)
  name.vb: GetEntityPose(Integer, Integer, Integer, Boolean)
- uid: AngeliA.FrameworkUtil.GetEntityPose(AngeliA.Entity,System.Boolean,System.Int32,AngeliA.Entity@,AngeliA.Entity@)
  commentId: M:AngeliA.FrameworkUtil.GetEntityPose(AngeliA.Entity,System.Boolean,System.Int32,AngeliA.Entity@,AngeliA.Entity@)
  id: GetEntityPose(AngeliA.Entity,System.Boolean,System.Int32,AngeliA.Entity@,AngeliA.Entity@)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: GetEntityPose(Entity, bool, int, out Entity, out Entity)
  nameWithType: FrameworkUtil.GetEntityPose(Entity, bool, int, out Entity, out Entity)
  fullName: AngeliA.FrameworkUtil.GetEntityPose(AngeliA.Entity, bool, int, out AngeliA.Entity, out AngeliA.Entity)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetEntityPose
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
    startLine: 759
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get FittingPose for given entity type from WorldSquad and stage.
  example: []
  syntax:
    content: public static FittingPose GetEntityPose(Entity entity, bool horizontal, int mask, out Entity left_down, out Entity right_up)
    parameters:
    - id: entity
      type: AngeliA.Entity
      description: Target entity
    - id: horizontal
      type: System.Boolean
      description: True if the entity fits horizontaly
    - id: mask
      type: System.Int32
      description: Physics layers to get the entity instance
    - id: left_down
      type: AngeliA.Entity
      description: Nearby entity instance at left/down
    - id: right_up
      type: AngeliA.Entity
      description: Nearby entity instance at right/up
    return:
      type: AngeliA.FittingPose
    content.vb: Public Shared Function GetEntityPose(entity As Entity, horizontal As Boolean, mask As Integer, left_down As Entity, right_up As Entity) As FittingPose
  overload: AngeliA.FrameworkUtil.GetEntityPose*
  nameWithType.vb: FrameworkUtil.GetEntityPose(Entity, Boolean, Integer, Entity, Entity)
  fullName.vb: AngeliA.FrameworkUtil.GetEntityPose(AngeliA.Entity, Boolean, Integer, AngeliA.Entity, AngeliA.Entity)
  name.vb: GetEntityPose(Entity, Boolean, Integer, Entity, Entity)
- uid: AngeliA.FrameworkUtil.ForAllWorldInRange(AngeliA.IRect,System.Int32,System.Int32@)
  commentId: M:AngeliA.FrameworkUtil.ForAllWorldInRange(AngeliA.IRect,System.Int32,System.Int32@)
  id: ForAllWorldInRange(AngeliA.IRect,System.Int32,System.Int32@)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: ForAllWorldInRange(IRect, int, out int)
  nameWithType: FrameworkUtil.ForAllWorldInRange(IRect, int, out int)
  fullName: AngeliA.FrameworkUtil.ForAllWorldInRange(AngeliA.IRect, int, out int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ForAllWorldInRange
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
    startLine: 788
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Find all world position that overlap the given range. (256 results in maximal)
  example: []
  syntax:
    content: public static Int3[] ForAllWorldInRange(IRect overlapUnitRange, int z, out int count)
    parameters:
    - id: overlapUnitRange
      type: AngeliA.IRect
      description: Target range in unit space
    - id: z
      type: System.Int32
      description: Position Z
    - id: count
      type: System.Int32
      description: How many result is founded
    return:
      type: AngeliA.Int3[]
      description: Array that holds the result
    content.vb: Public Shared Function ForAllWorldInRange(overlapUnitRange As IRect, z As Integer, count As Integer) As Int3()
  overload: AngeliA.FrameworkUtil.ForAllWorldInRange*
  nameWithType.vb: FrameworkUtil.ForAllWorldInRange(IRect, Integer, Integer)
  fullName.vb: AngeliA.FrameworkUtil.ForAllWorldInRange(AngeliA.IRect, Integer, Integer)
  name.vb: ForAllWorldInRange(IRect, Integer, Integer)
- uid: AngeliA.FrameworkUtil.ForAllExistsWorldInRange(AngeliA.IBlockSquad,AngeliA.IRect,System.Int32,System.Int32@)
  commentId: M:AngeliA.FrameworkUtil.ForAllExistsWorldInRange(AngeliA.IBlockSquad,AngeliA.IRect,System.Int32,System.Int32@)
  id: ForAllExistsWorldInRange(AngeliA.IBlockSquad,AngeliA.IRect,System.Int32,System.Int32@)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: ForAllExistsWorldInRange(IBlockSquad, IRect, int, out int)
  nameWithType: FrameworkUtil.ForAllExistsWorldInRange(IBlockSquad, IRect, int, out int)
  fullName: AngeliA.FrameworkUtil.ForAllExistsWorldInRange(AngeliA.IBlockSquad, AngeliA.IRect, int, out int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ForAllExistsWorldInRange
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
    startLine: 818
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Find all existing world position that overlap the given range. (256 results in maximal)
  example: []
  syntax:
    content: public static Int3[] ForAllExistsWorldInRange(IBlockSquad squad, IRect overlapUnitRange, int z, out int count)
    parameters:
    - id: squad
      type: AngeliA.IBlockSquad
      description: Source of the world instance
    - id: overlapUnitRange
      type: AngeliA.IRect
      description: Target range in unit space
    - id: z
      type: System.Int32
      description: Position Z
    - id: count
      type: System.Int32
      description: How many result is founded
    return:
      type: AngeliA.Int3[]
      description: Array that holds the result
    content.vb: Public Shared Function ForAllExistsWorldInRange(squad As IBlockSquad, overlapUnitRange As IRect, z As Integer, count As Integer) As Int3()
  overload: AngeliA.FrameworkUtil.ForAllExistsWorldInRange*
  nameWithType.vb: FrameworkUtil.ForAllExistsWorldInRange(IBlockSquad, IRect, Integer, Integer)
  fullName.vb: AngeliA.FrameworkUtil.ForAllExistsWorldInRange(AngeliA.IBlockSquad, AngeliA.IRect, Integer, Integer)
  name.vb: ForAllExistsWorldInRange(IBlockSquad, IRect, Integer, Integer)
- uid: AngeliA.FrameworkUtil.PaintBlock(System.Int32,System.Int32,System.Int32,System.Boolean)
  commentId: M:AngeliA.FrameworkUtil.PaintBlock(System.Int32,System.Int32,System.Int32,System.Boolean)
  id: PaintBlock(System.Int32,System.Int32,System.Int32,System.Boolean)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: PaintBlock(int, int, int, bool)
  nameWithType: FrameworkUtil.PaintBlock(int, int, int, bool)
  fullName: AngeliA.FrameworkUtil.PaintBlock(int, int, int, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: PaintBlock
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
    startLine: 849
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Paint the map block with BlockColoringSystem at given position
  example: []
  syntax:
    content: public static void PaintBlock(int unitX, int unitY, int blockColorID, bool overrideExistingElement = false)
    parameters:
    - id: unitX
      type: System.Int32
      description: Target position X in unit space
    - id: unitY
      type: System.Int32
      description: Target position Y in unit space
    - id: blockColorID
      type: System.Int32
      description: ID of BlockColor's subclass as a map element
    - id: overrideExistingElement
      type: System.Boolean
      description: True if existing map element at given position will be override
    content.vb: Public Shared Sub PaintBlock(unitX As Integer, unitY As Integer, blockColorID As Integer, overrideExistingElement As Boolean = False)
  overload: AngeliA.FrameworkUtil.PaintBlock*
  nameWithType.vb: FrameworkUtil.PaintBlock(Integer, Integer, Integer, Boolean)
  fullName.vb: AngeliA.FrameworkUtil.PaintBlock(Integer, Integer, Integer, Boolean)
  name.vb: PaintBlock(Integer, Integer, Integer, Boolean)
- uid: AngeliA.FrameworkUtil.TryEjectOutsideGround(AngeliA.Rigidbody,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.FrameworkUtil.TryEjectOutsideGround(AngeliA.Rigidbody,System.Int32,System.Int32,System.Int32)
  id: TryEjectOutsideGround(AngeliA.Rigidbody,System.Int32,System.Int32,System.Int32)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: TryEjectOutsideGround(Rigidbody, int, int, int)
  nameWithType: FrameworkUtil.TryEjectOutsideGround(Rigidbody, int, int, int)
  fullName: AngeliA.FrameworkUtil.TryEjectOutsideGround(AngeliA.Rigidbody, int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TryEjectOutsideGround
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
    startLine: 865
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Move the given rigidbody to closest empty space nearby
  example: []
  syntax:
    content: public static void TryEjectOutsideGround(Rigidbody rig, int collisionMask = 0, int unitRange = 2, int speed = 32)
    parameters:
    - id: rig
      type: AngeliA.Rigidbody
      description: ''
    - id: collisionMask
      type: System.Int32
      description: Which physics layers should count as "Ground"
    - id: unitRange
      type: System.Int32
      description: How far can it move in unit space
    - id: speed
      type: System.Int32
      description: How fast will it move
    content.vb: Public Shared Sub TryEjectOutsideGround(rig As Rigidbody, collisionMask As Integer = 0, unitRange As Integer = 2, speed As Integer = 32)
  overload: AngeliA.FrameworkUtil.TryEjectOutsideGround*
  nameWithType.vb: FrameworkUtil.TryEjectOutsideGround(Rigidbody, Integer, Integer, Integer)
  fullName.vb: AngeliA.FrameworkUtil.TryEjectOutsideGround(AngeliA.Rigidbody, Integer, Integer, Integer)
  name.vb: TryEjectOutsideGround(Rigidbody, Integer, Integer, Integer)
- uid: AngeliA.FrameworkUtil.DeleteAllEmptyMaps(System.String)
  commentId: M:AngeliA.FrameworkUtil.DeleteAllEmptyMaps(System.String)
  id: DeleteAllEmptyMaps(System.String)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: DeleteAllEmptyMaps(string)
  nameWithType: FrameworkUtil.DeleteAllEmptyMaps(string)
  fullName: AngeliA.FrameworkUtil.DeleteAllEmptyMaps(string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DeleteAllEmptyMaps
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
    startLine: 899
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void DeleteAllEmptyMaps(string mapRoot)
    parameters:
    - id: mapRoot
      type: System.String
    content.vb: Public Shared Sub DeleteAllEmptyMaps(mapRoot As String)
  overload: AngeliA.FrameworkUtil.DeleteAllEmptyMaps*
  nameWithType.vb: FrameworkUtil.DeleteAllEmptyMaps(String)
  fullName.vb: AngeliA.FrameworkUtil.DeleteAllEmptyMaps(String)
  name.vb: DeleteAllEmptyMaps(String)
- uid: AngeliA.FrameworkUtil.SystemNumberID_to_Number(System.Int32)
  commentId: M:AngeliA.FrameworkUtil.SystemNumberID_to_Number(System.Int32)
  id: SystemNumberID_to_Number(System.Int32)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: SystemNumberID_to_Number(int)
  nameWithType: FrameworkUtil.SystemNumberID_to_Number(int)
  fullName: AngeliA.FrameworkUtil.SystemNumberID_to_Number(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SystemNumberID_to_Number
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
    startLine: 935
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Convert system number ID into the number it represents
  example: []
  syntax:
    content: public static int SystemNumberID_to_Number(int id)
    parameters:
    - id: id
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function SystemNumberID_to_Number(id As Integer) As Integer
  overload: AngeliA.FrameworkUtil.SystemNumberID_to_Number*
  nameWithType.vb: FrameworkUtil.SystemNumberID_to_Number(Integer)
  fullName.vb: AngeliA.FrameworkUtil.SystemNumberID_to_Number(Integer)
  name.vb: SystemNumberID_to_Number(Integer)
- uid: AngeliA.FrameworkUtil.Number_to_SystemNumberID(System.Int32)
  commentId: M:AngeliA.FrameworkUtil.Number_to_SystemNumberID(System.Int32)
  id: Number_to_SystemNumberID(System.Int32)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: Number_to_SystemNumberID(int)
  nameWithType: FrameworkUtil.Number_to_SystemNumberID(int)
  fullName: AngeliA.FrameworkUtil.Number_to_SystemNumberID(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Number_to_SystemNumberID
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
    startLine: 941
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Convert number into system number map element ID. 0 by default.
  example: []
  syntax:
    content: public static int Number_to_SystemNumberID(int number)
    parameters:
    - id: number
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function Number_to_SystemNumberID(number As Integer) As Integer
  overload: AngeliA.FrameworkUtil.Number_to_SystemNumberID*
  nameWithType.vb: FrameworkUtil.Number_to_SystemNumberID(Integer)
  fullName.vb: AngeliA.FrameworkUtil.Number_to_SystemNumberID(Integer)
  name.vb: Number_to_SystemNumberID(Integer)
- uid: AngeliA.FrameworkUtil.ReadSystemNumber(AngeliA.IBlockSquad,System.Int32,System.Int32,System.Int32,System.Int32@)
  commentId: M:AngeliA.FrameworkUtil.ReadSystemNumber(AngeliA.IBlockSquad,System.Int32,System.Int32,System.Int32,System.Int32@)
  id: ReadSystemNumber(AngeliA.IBlockSquad,System.Int32,System.Int32,System.Int32,System.Int32@)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: ReadSystemNumber(IBlockSquad, int, int, int, out int)
  nameWithType: FrameworkUtil.ReadSystemNumber(IBlockSquad, int, int, int, out int)
  fullName: AngeliA.FrameworkUtil.ReadSystemNumber(AngeliA.IBlockSquad, int, int, int, out int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ReadSystemNumber
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
    startLine: 953
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get system number at given position from map. (Left-to-right then up-to-down)
  example: []
  syntax:
    content: public static bool ReadSystemNumber(IBlockSquad squad, int unitX, int unitY, int z, out int number)
    parameters:
    - id: squad
      type: AngeliA.IBlockSquad
      description: Source of the map blocks
    - id: unitX
      type: System.Int32
      description: Target position X in unit space
    - id: unitY
      type: System.Int32
      description: Target position Y in unit space
    - id: z
      type: System.Int32
      description: Position Z
    - id: number
      type: System.Int32
      description: Result number
    return:
      type: System.Boolean
      description: True if the number is founded
    content.vb: Public Shared Function ReadSystemNumber(squad As IBlockSquad, unitX As Integer, unitY As Integer, z As Integer, number As Integer) As Boolean
  overload: AngeliA.FrameworkUtil.ReadSystemNumber*
  nameWithType.vb: FrameworkUtil.ReadSystemNumber(IBlockSquad, Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.FrameworkUtil.ReadSystemNumber(AngeliA.IBlockSquad, Integer, Integer, Integer, Integer)
  name.vb: ReadSystemNumber(IBlockSquad, Integer, Integer, Integer, Integer)
- uid: AngeliA.FrameworkUtil.ReadSystemNumber(AngeliA.IBlockSquad,System.Int32,System.Int32,System.Int32,AngeliA.Direction4,System.Int32@)
  commentId: M:AngeliA.FrameworkUtil.ReadSystemNumber(AngeliA.IBlockSquad,System.Int32,System.Int32,System.Int32,AngeliA.Direction4,System.Int32@)
  id: ReadSystemNumber(AngeliA.IBlockSquad,System.Int32,System.Int32,System.Int32,AngeliA.Direction4,System.Int32@)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: ReadSystemNumber(IBlockSquad, int, int, int, Direction4, out int)
  nameWithType: FrameworkUtil.ReadSystemNumber(IBlockSquad, int, int, int, Direction4, out int)
  fullName: AngeliA.FrameworkUtil.ReadSystemNumber(AngeliA.IBlockSquad, int, int, int, AngeliA.Direction4, out int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ReadSystemNumber
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
    startLine: 978
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get system number at given position from map in specified direction
  example: []
  syntax:
    content: public static bool ReadSystemNumber(IBlockSquad squad, int unitX, int unitY, int z, Direction4 direction, out int number)
    parameters:
    - id: squad
      type: AngeliA.IBlockSquad
      description: Source of the map blocks
    - id: unitX
      type: System.Int32
      description: Target position X in unit space
    - id: unitY
      type: System.Int32
      description: Target position Y in unit space
    - id: z
      type: System.Int32
      description: Position Z
    - id: direction
      type: AngeliA.Direction4
      description: Which direction should it reads
    - id: number
      type: System.Int32
      description: Result number
    return:
      type: System.Boolean
      description: True if the number is founded
    content.vb: Public Shared Function ReadSystemNumber(squad As IBlockSquad, unitX As Integer, unitY As Integer, z As Integer, direction As Direction4, number As Integer) As Boolean
  overload: AngeliA.FrameworkUtil.ReadSystemNumber*
  nameWithType.vb: FrameworkUtil.ReadSystemNumber(IBlockSquad, Integer, Integer, Integer, Direction4, Integer)
  fullName.vb: AngeliA.FrameworkUtil.ReadSystemNumber(AngeliA.IBlockSquad, Integer, Integer, Integer, AngeliA.Direction4, Integer)
  name.vb: ReadSystemNumber(IBlockSquad, Integer, Integer, Integer, Direction4, Integer)
- uid: AngeliA.FrameworkUtil.HasSystemNumber(AngeliA.IBlockSquad,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.FrameworkUtil.HasSystemNumber(AngeliA.IBlockSquad,System.Int32,System.Int32,System.Int32)
  id: HasSystemNumber(AngeliA.IBlockSquad,System.Int32,System.Int32,System.Int32)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: HasSystemNumber(IBlockSquad, int, int, int)
  nameWithType: FrameworkUtil.HasSystemNumber(IBlockSquad, int, int, int)
  fullName: AngeliA.FrameworkUtil.HasSystemNumber(AngeliA.IBlockSquad, int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: HasSystemNumber
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
    startLine: 1018
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: True if there is system number at given position
  example: []
  syntax:
    content: public static bool HasSystemNumber(IBlockSquad squad, int unitX, int unitY, int z)
    parameters:
    - id: squad
      type: AngeliA.IBlockSquad
      description: Source of the map blocks
    - id: unitX
      type: System.Int32
      description: Target position X in unit space
    - id: unitY
      type: System.Int32
      description: Target position Y in unit space
    - id: z
      type: System.Int32
      description: Position Z
    return:
      type: System.Boolean
    content.vb: Public Shared Function HasSystemNumber(squad As IBlockSquad, unitX As Integer, unitY As Integer, z As Integer) As Boolean
  overload: AngeliA.FrameworkUtil.HasSystemNumber*
  nameWithType.vb: FrameworkUtil.HasSystemNumber(IBlockSquad, Integer, Integer, Integer)
  fullName.vb: AngeliA.FrameworkUtil.HasSystemNumber(AngeliA.IBlockSquad, Integer, Integer, Integer)
  name.vb: HasSystemNumber(IBlockSquad, Integer, Integer, Integer)
- uid: AngeliA.FrameworkUtil.TryGetSingleSystemNumber(AngeliA.IBlockSquad,System.Int32,System.Int32,System.Int32,System.Int32@)
  commentId: M:AngeliA.FrameworkUtil.TryGetSingleSystemNumber(AngeliA.IBlockSquad,System.Int32,System.Int32,System.Int32,System.Int32@)
  id: TryGetSingleSystemNumber(AngeliA.IBlockSquad,System.Int32,System.Int32,System.Int32,System.Int32@)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: TryGetSingleSystemNumber(IBlockSquad, int, int, int, out int)
  nameWithType: FrameworkUtil.TryGetSingleSystemNumber(IBlockSquad, int, int, int, out int)
  fullName: AngeliA.FrameworkUtil.TryGetSingleSystemNumber(AngeliA.IBlockSquad, int, int, int, out int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TryGetSingleSystemNumber
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
    startLine: 1033
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get a single digit of system number at given position from map
  example: []
  syntax:
    content: public static bool TryGetSingleSystemNumber(IBlockSquad squad, int unitX, int unitY, int z, out int digitValue)
    parameters:
    - id: squad
      type: AngeliA.IBlockSquad
      description: Source of the map blocks
    - id: unitX
      type: System.Int32
      description: Target position X in unit space
    - id: unitY
      type: System.Int32
      description: Target position Y in unit space
    - id: z
      type: System.Int32
      description: Position Z
    - id: digitValue
      type: System.Int32
      description: Result of the digit
    return:
      type: System.Boolean
      description: True if the digit is founded
    content.vb: Public Shared Function TryGetSingleSystemNumber(squad As IBlockSquad, unitX As Integer, unitY As Integer, z As Integer, digitValue As Integer) As Boolean
  overload: AngeliA.FrameworkUtil.TryGetSingleSystemNumber*
  nameWithType.vb: FrameworkUtil.TryGetSingleSystemNumber(IBlockSquad, Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.FrameworkUtil.TryGetSingleSystemNumber(AngeliA.IBlockSquad, Integer, Integer, Integer, Integer)
  name.vb: TryGetSingleSystemNumber(IBlockSquad, Integer, Integer, Integer, Integer)
- uid: AngeliA.FrameworkUtil.GetAimingBuilderPositionFromMouse(AngeliA.Character,AngeliA.BlockType,System.Int32@,System.Int32@,System.Boolean@)
  commentId: M:AngeliA.FrameworkUtil.GetAimingBuilderPositionFromMouse(AngeliA.Character,AngeliA.BlockType,System.Int32@,System.Int32@,System.Boolean@)
  id: GetAimingBuilderPositionFromMouse(AngeliA.Character,AngeliA.BlockType,System.Int32@,System.Int32@,System.Boolean@)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: GetAimingBuilderPositionFromMouse(Character, BlockType, out int, out int, out bool)
  nameWithType: FrameworkUtil.GetAimingBuilderPositionFromMouse(Character, BlockType, out int, out int, out bool)
  fullName: AngeliA.FrameworkUtil.GetAimingBuilderPositionFromMouse(AngeliA.Character, AngeliA.BlockType, out int, out int, out bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetAimingBuilderPositionFromMouse
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
    startLine: 1050
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get aiming position for block building target with mouse
  example: []
  syntax:
    content: public static bool GetAimingBuilderPositionFromMouse(Character holder, BlockType blockType, out int targetUnitX, out int targetUnitY, out bool requireEmbedAsElement)
    parameters:
    - id: holder
      type: AngeliA.Character
      description: Character that using the tool
    - id: blockType
      type: AngeliA.BlockType
      description: Type of building block
    - id: targetUnitX
      type: System.Int32
      description: Result position in unit space
    - id: targetUnitY
      type: System.Int32
      description: Result position in unit space
    - id: requireEmbedAsElement
      type: System.Boolean
      description: True if this block can be embed into other block
    return:
      type: System.Boolean
      description: True if the target is founded
    content.vb: Public Shared Function GetAimingBuilderPositionFromMouse(holder As Character, blockType As BlockType, targetUnitX As Integer, targetUnitY As Integer, requireEmbedAsElement As Boolean) As Boolean
  overload: AngeliA.FrameworkUtil.GetAimingBuilderPositionFromMouse*
  nameWithType.vb: FrameworkUtil.GetAimingBuilderPositionFromMouse(Character, BlockType, Integer, Integer, Boolean)
  fullName.vb: AngeliA.FrameworkUtil.GetAimingBuilderPositionFromMouse(AngeliA.Character, AngeliA.BlockType, Integer, Integer, Boolean)
  name.vb: GetAimingBuilderPositionFromMouse(Character, BlockType, Integer, Integer, Boolean)
- uid: AngeliA.FrameworkUtil.GetAimingBuilderPositionFromKey(AngeliA.Character,AngeliA.BlockType,System.Int32@,System.Int32@,System.Boolean@,System.Boolean)
  commentId: M:AngeliA.FrameworkUtil.GetAimingBuilderPositionFromKey(AngeliA.Character,AngeliA.BlockType,System.Int32@,System.Int32@,System.Boolean@,System.Boolean)
  id: GetAimingBuilderPositionFromKey(AngeliA.Character,AngeliA.BlockType,System.Int32@,System.Int32@,System.Boolean@,System.Boolean)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: GetAimingBuilderPositionFromKey(Character, BlockType, out int, out int, out bool, bool)
  nameWithType: FrameworkUtil.GetAimingBuilderPositionFromKey(Character, BlockType, out int, out int, out bool, bool)
  fullName: AngeliA.FrameworkUtil.GetAimingBuilderPositionFromKey(AngeliA.Character, AngeliA.BlockType, out int, out int, out bool, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetAimingBuilderPositionFromKey
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
    startLine: 1079
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get aiming position for block building target with keyboard keys
  example: []
  syntax:
    content: public static bool GetAimingBuilderPositionFromKey(Character holder, BlockType blockType, out int targetUnitX, out int targetUnitY, out bool requireEmbedAsElement, bool ignoreValid = false)
    parameters:
    - id: holder
      type: AngeliA.Character
      description: Character that using the tool
    - id: blockType
      type: AngeliA.BlockType
      description: Type of building block
    - id: targetUnitX
      type: System.Int32
      description: Result position in unit space
    - id: targetUnitY
      type: System.Int32
      description: Result position in unit space
    - id: requireEmbedAsElement
      type: System.Boolean
      description: True if this block can be embed into other block
    - id: ignoreValid
      type: System.Boolean
      description: Set to true to skip block building validation
    return:
      type: System.Boolean
      description: True if valid position is founded
    content.vb: Public Shared Function GetAimingBuilderPositionFromKey(holder As Character, blockType As BlockType, targetUnitX As Integer, targetUnitY As Integer, requireEmbedAsElement As Boolean, ignoreValid As Boolean = False) As Boolean
  overload: AngeliA.FrameworkUtil.GetAimingBuilderPositionFromKey*
  nameWithType.vb: FrameworkUtil.GetAimingBuilderPositionFromKey(Character, BlockType, Integer, Integer, Boolean, Boolean)
  fullName.vb: AngeliA.FrameworkUtil.GetAimingBuilderPositionFromKey(AngeliA.Character, AngeliA.BlockType, Integer, Integer, Boolean, Boolean)
  name.vb: GetAimingBuilderPositionFromKey(Character, BlockType, Integer, Integer, Boolean, Boolean)
- uid: AngeliA.FrameworkUtil.GetAimingPickerPositionFromMouse(AngeliA.Character,System.Int32,System.Int32@,System.Int32@,System.Boolean@,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:AngeliA.FrameworkUtil.GetAimingPickerPositionFromMouse(AngeliA.Character,System.Int32,System.Int32@,System.Int32@,System.Boolean@,System.Boolean,System.Boolean,System.Boolean)
  id: GetAimingPickerPositionFromMouse(AngeliA.Character,System.Int32,System.Int32@,System.Int32@,System.Boolean@,System.Boolean,System.Boolean,System.Boolean)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: GetAimingPickerPositionFromMouse(Character, int, out int, out int, out bool, bool, bool, bool)
  nameWithType: FrameworkUtil.GetAimingPickerPositionFromMouse(Character, int, out int, out int, out bool, bool, bool, bool)
  fullName: AngeliA.FrameworkUtil.GetAimingPickerPositionFromMouse(AngeliA.Character, int, out int, out int, out bool, bool, bool, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetAimingPickerPositionFromMouse
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
    startLine: 1166
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get aiming position for block picking target with mouse
  example: []
  syntax:
    content: public static bool GetAimingPickerPositionFromMouse(Character holder, int unitRange, out int targetUnitX, out int targetUnitY, out bool inRange, bool allowPickBlockEntity = true, bool allowPickLevelBlock = true, bool allowPickBackgroundBlock = true)
    parameters:
    - id: holder
      type: AngeliA.Character
      description: Character that using the tool
    - id: unitRange
      type: System.Int32
      description: Range limitation in unit space
    - id: targetUnitX
      type: System.Int32
      description: Result position in unit space
    - id: targetUnitY
      type: System.Int32
      description: Result position in unit space
    - id: inRange
      type: System.Boolean
      description: True if the current mouse cursor is in range
    - id: allowPickBlockEntity
      type: System.Boolean
      description: True if the tool can pick entity blocks
    - id: allowPickLevelBlock
      type: System.Boolean
      description: True if the tool can pick level blocks
    - id: allowPickBackgroundBlock
      type: System.Boolean
      description: True if the tool can pick background blocks
    return:
      type: System.Boolean
      description: True if valid position is founded
    content.vb: Public Shared Function GetAimingPickerPositionFromMouse(holder As Character, unitRange As Integer, targetUnitX As Integer, targetUnitY As Integer, inRange As Boolean, allowPickBlockEntity As Boolean = True, allowPickLevelBlock As Boolean = True, allowPickBackgroundBlock As Boolean = True) As Boolean
  overload: AngeliA.FrameworkUtil.GetAimingPickerPositionFromMouse*
  nameWithType.vb: FrameworkUtil.GetAimingPickerPositionFromMouse(Character, Integer, Integer, Integer, Boolean, Boolean, Boolean, Boolean)
  fullName.vb: AngeliA.FrameworkUtil.GetAimingPickerPositionFromMouse(AngeliA.Character, Integer, Integer, Integer, Boolean, Boolean, Boolean, Boolean)
  name.vb: GetAimingPickerPositionFromMouse(Character, Integer, Integer, Integer, Boolean, Boolean, Boolean, Boolean)
- uid: AngeliA.FrameworkUtil.GetAimingPickerPositionFromKey(AngeliA.Character,System.Int32@,System.Int32@,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:AngeliA.FrameworkUtil.GetAimingPickerPositionFromKey(AngeliA.Character,System.Int32@,System.Int32@,System.Boolean,System.Boolean,System.Boolean)
  id: GetAimingPickerPositionFromKey(AngeliA.Character,System.Int32@,System.Int32@,System.Boolean,System.Boolean,System.Boolean)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: GetAimingPickerPositionFromKey(Character, out int, out int, bool, bool, bool)
  nameWithType: FrameworkUtil.GetAimingPickerPositionFromKey(Character, out int, out int, bool, bool, bool)
  fullName: AngeliA.FrameworkUtil.GetAimingPickerPositionFromKey(AngeliA.Character, out int, out int, bool, bool, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetAimingPickerPositionFromKey
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Map.cs
    startLine: 1200
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get aiming position for block picking target with keyboard keys
  example: []
  syntax:
    content: public static bool GetAimingPickerPositionFromKey(Character pHolder, out int targetUnitX, out int targetUnitY, bool allowPickBlockEntity = true, bool allowPickLevelBlock = true, bool allowPickBackgroundBlock = true)
    parameters:
    - id: pHolder
      type: AngeliA.Character
      description: Character that using the tool
    - id: targetUnitX
      type: System.Int32
      description: Result position in unit space
    - id: targetUnitY
      type: System.Int32
      description: Result position in unit space
    - id: allowPickBlockEntity
      type: System.Boolean
      description: True if the tool can pick entity blocks
    - id: allowPickLevelBlock
      type: System.Boolean
      description: True if the tool can pick level blocks
    - id: allowPickBackgroundBlock
      type: System.Boolean
      description: True if the tool can pick background blocks
    return:
      type: System.Boolean
      description: True if valid position is founded
    content.vb: Public Shared Function GetAimingPickerPositionFromKey(pHolder As Character, targetUnitX As Integer, targetUnitY As Integer, allowPickBlockEntity As Boolean = True, allowPickLevelBlock As Boolean = True, allowPickBackgroundBlock As Boolean = True) As Boolean
  overload: AngeliA.FrameworkUtil.GetAimingPickerPositionFromKey*
  nameWithType.vb: FrameworkUtil.GetAimingPickerPositionFromKey(Character, Integer, Integer, Boolean, Boolean, Boolean)
  fullName.vb: AngeliA.FrameworkUtil.GetAimingPickerPositionFromKey(AngeliA.Character, Integer, Integer, Boolean, Boolean, Boolean)
  name.vb: GetAimingPickerPositionFromKey(Character, Integer, Integer, Boolean, Boolean, Boolean)
- uid: AngeliA.FrameworkUtil.ClampCells(AngeliA.Cell[],AngeliA.IRect,System.Int32,System.Int32)
  commentId: M:AngeliA.FrameworkUtil.ClampCells(AngeliA.Cell[],AngeliA.IRect,System.Int32,System.Int32)
  id: ClampCells(AngeliA.Cell[],AngeliA.IRect,System.Int32,System.Int32)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: ClampCells(Cell[], IRect, int, int)
  nameWithType: FrameworkUtil.ClampCells(Cell[], IRect, int, int)
  fullName: AngeliA.FrameworkUtil.ClampCells(AngeliA.Cell[], AngeliA.IRect, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Rendering.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ClampCells
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Rendering.cs
    startLine: 33
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void ClampCells(Cell[] cells, IRect rect, int startIndex, int endIndex)
    parameters:
    - id: cells
      type: AngeliA.Cell[]
    - id: rect
      type: AngeliA.IRect
    - id: startIndex
      type: System.Int32
    - id: endIndex
      type: System.Int32
    content.vb: Public Shared Sub ClampCells(cells As Cell(), rect As IRect, startIndex As Integer, endIndex As Integer)
  overload: AngeliA.FrameworkUtil.ClampCells*
  nameWithType.vb: FrameworkUtil.ClampCells(Cell(), IRect, Integer, Integer)
  fullName.vb: AngeliA.FrameworkUtil.ClampCells(AngeliA.Cell(), AngeliA.IRect, Integer, Integer)
  name.vb: ClampCells(Cell(), IRect, Integer, Integer)
- uid: AngeliA.FrameworkUtil.ClampCells(System.Span{AngeliA.Cell},AngeliA.IRect,System.Int32,System.Int32)
  commentId: M:AngeliA.FrameworkUtil.ClampCells(System.Span{AngeliA.Cell},AngeliA.IRect,System.Int32,System.Int32)
  id: ClampCells(System.Span{AngeliA.Cell},AngeliA.IRect,System.Int32,System.Int32)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: ClampCells(Span<Cell>, IRect, int, int)
  nameWithType: FrameworkUtil.ClampCells(Span<Cell>, IRect, int, int)
  fullName: AngeliA.FrameworkUtil.ClampCells(System.Span<AngeliA.Cell>, AngeliA.IRect, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Rendering.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ClampCells
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Rendering.cs
    startLine: 35
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static void ClampCells(Span<Cell> cells, IRect rect, int startIndex, int endIndex)
    parameters:
    - id: cells
      type: System.Span{AngeliA.Cell}
    - id: rect
      type: AngeliA.IRect
    - id: startIndex
      type: System.Int32
    - id: endIndex
      type: System.Int32
    content.vb: Public Shared Sub ClampCells(cells As Span(Of Cell), rect As IRect, startIndex As Integer, endIndex As Integer)
  overload: AngeliA.FrameworkUtil.ClampCells*
  nameWithType.vb: FrameworkUtil.ClampCells(Span(Of Cell), IRect, Integer, Integer)
  fullName.vb: AngeliA.FrameworkUtil.ClampCells(System.Span(Of AngeliA.Cell), AngeliA.IRect, Integer, Integer)
  name.vb: ClampCells(Span(Of Cell), IRect, Integer, Integer)
- uid: AngeliA.FrameworkUtil.GetSummaryTint(AngeliA.Color32[])
  commentId: M:AngeliA.FrameworkUtil.GetSummaryTint(AngeliA.Color32[])
  id: GetSummaryTint(AngeliA.Color32[])
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: GetSummaryTint(Color32[])
  nameWithType: FrameworkUtil.GetSummaryTint(Color32[])
  fullName: AngeliA.FrameworkUtil.GetSummaryTint(AngeliA.Color32[])
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Rendering.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetSummaryTint
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Rendering.cs
    startLine: 133
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get average color of given pixels
  example: []
  syntax:
    content: public static Color32 GetSummaryTint(Color32[] pixels)
    parameters:
    - id: pixels
      type: AngeliA.Color32[]
    return:
      type: AngeliA.Color32
    content.vb: Public Shared Function GetSummaryTint(pixels As Color32()) As Color32
  overload: AngeliA.FrameworkUtil.GetSummaryTint*
  nameWithType.vb: FrameworkUtil.GetSummaryTint(Color32())
  fullName.vb: AngeliA.FrameworkUtil.GetSummaryTint(AngeliA.Color32())
  name.vb: GetSummaryTint(Color32())
- uid: AngeliA.FrameworkUtil.DrawEnvironmentShadow(AngeliA.Cell,System.Int32,System.Int32,System.Byte,System.Int32)
  commentId: M:AngeliA.FrameworkUtil.DrawEnvironmentShadow(AngeliA.Cell,System.Int32,System.Int32,System.Byte,System.Int32)
  id: DrawEnvironmentShadow(AngeliA.Cell,System.Int32,System.Int32,System.Byte,System.Int32)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: DrawEnvironmentShadow(Cell, int, int, byte, int)
  nameWithType: FrameworkUtil.DrawEnvironmentShadow(Cell, int, int, byte, int)
  fullName: AngeliA.FrameworkUtil.DrawEnvironmentShadow(AngeliA.Cell, int, int, byte, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Rendering.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawEnvironmentShadow
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Rendering.cs
    startLine: 165
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Draw a shadow for given rendering cell
  example: []
  syntax:
    content: public static Cell DrawEnvironmentShadow(Cell source, int offsetX = -64, int offsetY = 0, byte alpha = 64, int z = -65520)
    parameters:
    - id: source
      type: AngeliA.Cell
      description: Target rendering cell
    - id: offsetX
      type: System.Int32
      description: Position offset X in global space
    - id: offsetY
      type: System.Int32
      description: Position offset Y in global space
    - id: alpha
      type: System.Byte
      description: ''
    - id: z
      type: System.Int32
      description: Position Z for the shadow
    return:
      type: AngeliA.Cell
      description: Rendering cell of the shadow
    content.vb: Public Shared Function DrawEnvironmentShadow(source As Cell, offsetX As Integer = -64, offsetY As Integer = 0, alpha As Byte = 64, z As Integer = -65520) As Cell
  overload: AngeliA.FrameworkUtil.DrawEnvironmentShadow*
  nameWithType.vb: FrameworkUtil.DrawEnvironmentShadow(Cell, Integer, Integer, Byte, Integer)
  fullName.vb: AngeliA.FrameworkUtil.DrawEnvironmentShadow(AngeliA.Cell, Integer, Integer, Byte, Integer)
  name.vb: DrawEnvironmentShadow(Cell, Integer, Integer, Byte, Integer)
- uid: AngeliA.FrameworkUtil.DrawPoseCharacterAsUI(AngeliA.IRect,AngeliA.PoseCharacterRenderer,System.Int32)
  commentId: M:AngeliA.FrameworkUtil.DrawPoseCharacterAsUI(AngeliA.IRect,AngeliA.PoseCharacterRenderer,System.Int32)
  id: DrawPoseCharacterAsUI(AngeliA.IRect,AngeliA.PoseCharacterRenderer,System.Int32)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: DrawPoseCharacterAsUI(IRect, PoseCharacterRenderer, int)
  nameWithType: FrameworkUtil.DrawPoseCharacterAsUI(IRect, PoseCharacterRenderer, int)
  fullName: AngeliA.FrameworkUtil.DrawPoseCharacterAsUI(AngeliA.IRect, AngeliA.PoseCharacterRenderer, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Rendering.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawPoseCharacterAsUI
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Rendering.cs
    startLine: 186
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Display target pose-styled character as UI (like the character preview in player menu)
  example: []
  syntax:
    content: public static bool DrawPoseCharacterAsUI(IRect rect, PoseCharacterRenderer renderer, int animationFrame)
    parameters:
    - id: rect
      type: AngeliA.IRect
      description: Rect position to display the UI in global space
    - id: renderer
      type: AngeliA.PoseCharacterRenderer
      description: Target character
    - id: animationFrame
      type: System.Int32
      description: Current frame for animation
    return:
      type: System.Boolean
      description: True if the character is rendered
    content.vb: Public Shared Function DrawPoseCharacterAsUI(rect As IRect, renderer As PoseCharacterRenderer, animationFrame As Integer) As Boolean
  overload: AngeliA.FrameworkUtil.DrawPoseCharacterAsUI*
  nameWithType.vb: FrameworkUtil.DrawPoseCharacterAsUI(IRect, PoseCharacterRenderer, Integer)
  fullName.vb: AngeliA.FrameworkUtil.DrawPoseCharacterAsUI(AngeliA.IRect, AngeliA.PoseCharacterRenderer, Integer)
  name.vb: DrawPoseCharacterAsUI(IRect, PoseCharacterRenderer, Integer)
- uid: AngeliA.FrameworkUtil.DrawPoseCharacterAsUI(AngeliA.IRect,AngeliA.PoseCharacterRenderer,System.Int32,AngeliA.IRect@,AngeliA.IRect@)
  commentId: M:AngeliA.FrameworkUtil.DrawPoseCharacterAsUI(AngeliA.IRect,AngeliA.PoseCharacterRenderer,System.Int32,AngeliA.IRect@,AngeliA.IRect@)
  id: DrawPoseCharacterAsUI(AngeliA.IRect,AngeliA.PoseCharacterRenderer,System.Int32,AngeliA.IRect@,AngeliA.IRect@)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: DrawPoseCharacterAsUI(IRect, PoseCharacterRenderer, int, out IRect, out IRect)
  nameWithType: FrameworkUtil.DrawPoseCharacterAsUI(IRect, PoseCharacterRenderer, int, out IRect, out IRect)
  fullName: AngeliA.FrameworkUtil.DrawPoseCharacterAsUI(AngeliA.IRect, AngeliA.PoseCharacterRenderer, int, out AngeliA.IRect, out AngeliA.IRect)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Rendering.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawPoseCharacterAsUI
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Rendering.cs
    startLine: 188
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Display target pose-styled character as UI (like the character preview in player menu)
  example: []
  syntax:
    content: public static bool DrawPoseCharacterAsUI(IRect rect, PoseCharacterRenderer renderer, int animationFrame, out IRect globalRect, out IRect uiRect)
    parameters:
    - id: rect
      type: AngeliA.IRect
      description: Rect position to display the UI in global space
    - id: renderer
      type: AngeliA.PoseCharacterRenderer
      description: Target character
    - id: animationFrame
      type: System.Int32
      description: Current frame for animation
    - id: globalRect
      type: AngeliA.IRect
    - id: uiRect
      type: AngeliA.IRect
    return:
      type: System.Boolean
      description: True if the character is rendered
    content.vb: Public Shared Function DrawPoseCharacterAsUI(rect As IRect, renderer As PoseCharacterRenderer, animationFrame As Integer, globalRect As IRect, uiRect As IRect) As Boolean
  overload: AngeliA.FrameworkUtil.DrawPoseCharacterAsUI*
  nameWithType.vb: FrameworkUtil.DrawPoseCharacterAsUI(IRect, PoseCharacterRenderer, Integer, IRect, IRect)
  fullName.vb: AngeliA.FrameworkUtil.DrawPoseCharacterAsUI(AngeliA.IRect, AngeliA.PoseCharacterRenderer, Integer, AngeliA.IRect, AngeliA.IRect)
  name.vb: DrawPoseCharacterAsUI(IRect, PoseCharacterRenderer, Integer, IRect, IRect)
- uid: AngeliA.FrameworkUtil.RemapCells(AngeliA.Cell[],System.Int32,System.Int32,AngeliA.IRect,AngeliA.IRect,System.Int32,System.Int32,System.Boolean)
  commentId: M:AngeliA.FrameworkUtil.RemapCells(AngeliA.Cell[],System.Int32,System.Int32,AngeliA.IRect,AngeliA.IRect,System.Int32,System.Int32,System.Boolean)
  id: RemapCells(AngeliA.Cell[],System.Int32,System.Int32,AngeliA.IRect,AngeliA.IRect,System.Int32,System.Int32,System.Boolean)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: RemapCells(Cell[], int, int, IRect, IRect, int, int, bool)
  nameWithType: FrameworkUtil.RemapCells(Cell[], int, int, IRect, IRect, int, int, bool)
  fullName: AngeliA.FrameworkUtil.RemapCells(AngeliA.Cell[], int, int, AngeliA.IRect, AngeliA.IRect, int, int, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Rendering.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: RemapCells
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Rendering.cs
    startLine: 251
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Remap the position and size of given rendering cells
  example: []
  syntax:
    content: public static void RemapCells(Cell[] cells, int cellIndexStart, int cellIndexEnd, IRect from, IRect to, int fitPivotX = 500, int fitPivotY = 500, bool fit = true)
    parameters:
    - id: cells
      type: AngeliA.Cell[]
      description: ''
    - id: cellIndexStart
      type: System.Int32
      description: Start index of remap logic
    - id: cellIndexEnd
      type: System.Int32
      description: End index of remap logic (exclude)
    - id: from
      type: AngeliA.IRect
      description: Remap from this range (global space)
    - id: to
      type: AngeliA.IRect
      description: Remap to this range (global space)
    - id: fitPivotX
      type: System.Int32
      description: ''
    - id: fitPivotY
      type: System.Int32
      description: ''
    - id: fit
      type: System.Boolean
      description: True if keep the aspect ratio by resize the cells
    content.vb: Public Shared Sub RemapCells(cells As Cell(), cellIndexStart As Integer, cellIndexEnd As Integer, from As IRect, [to] As IRect, fitPivotX As Integer = 500, fitPivotY As Integer = 500, fit As Boolean = True)
  overload: AngeliA.FrameworkUtil.RemapCells*
  nameWithType.vb: FrameworkUtil.RemapCells(Cell(), Integer, Integer, IRect, IRect, Integer, Integer, Boolean)
  fullName.vb: AngeliA.FrameworkUtil.RemapCells(AngeliA.Cell(), Integer, Integer, AngeliA.IRect, AngeliA.IRect, Integer, Integer, Boolean)
  name.vb: RemapCells(Cell(), Integer, Integer, IRect, IRect, Integer, Integer, Boolean)
- uid: AngeliA.FrameworkUtil.RemapCells(System.Span{AngeliA.Cell},System.Int32,System.Int32,AngeliA.IRect,AngeliA.IRect,System.Int32,System.Int32,System.Boolean)
  commentId: M:AngeliA.FrameworkUtil.RemapCells(System.Span{AngeliA.Cell},System.Int32,System.Int32,AngeliA.IRect,AngeliA.IRect,System.Int32,System.Int32,System.Boolean)
  id: RemapCells(System.Span{AngeliA.Cell},System.Int32,System.Int32,AngeliA.IRect,AngeliA.IRect,System.Int32,System.Int32,System.Boolean)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: RemapCells(Span<Cell>, int, int, IRect, IRect, int, int, bool)
  nameWithType: FrameworkUtil.RemapCells(Span<Cell>, int, int, IRect, IRect, int, int, bool)
  fullName: AngeliA.FrameworkUtil.RemapCells(System.Span<AngeliA.Cell>, int, int, AngeliA.IRect, AngeliA.IRect, int, int, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Rendering.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: RemapCells
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Rendering.cs
    startLine: 253
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Remap the position and size of given rendering cells
  example: []
  syntax:
    content: public static void RemapCells(Span<Cell> cells, int cellIndexStart, int cellIndexEnd, IRect from, IRect to, int fitPivotX = 500, int fitPivotY = 500, bool fit = true)
    parameters:
    - id: cells
      type: System.Span{AngeliA.Cell}
      description: ''
    - id: cellIndexStart
      type: System.Int32
      description: Start index of remap logic
    - id: cellIndexEnd
      type: System.Int32
      description: End index of remap logic (exclude)
    - id: from
      type: AngeliA.IRect
      description: Remap from this range (global space)
    - id: to
      type: AngeliA.IRect
      description: Remap to this range (global space)
    - id: fitPivotX
      type: System.Int32
      description: ''
    - id: fitPivotY
      type: System.Int32
      description: ''
    - id: fit
      type: System.Boolean
      description: True if keep the aspect ratio by resize the cells
    content.vb: Public Shared Sub RemapCells(cells As Span(Of Cell), cellIndexStart As Integer, cellIndexEnd As Integer, from As IRect, [to] As IRect, fitPivotX As Integer = 500, fitPivotY As Integer = 500, fit As Boolean = True)
  overload: AngeliA.FrameworkUtil.RemapCells*
  nameWithType.vb: FrameworkUtil.RemapCells(Span(Of Cell), Integer, Integer, IRect, IRect, Integer, Integer, Boolean)
  fullName.vb: AngeliA.FrameworkUtil.RemapCells(System.Span(Of AngeliA.Cell), Integer, Integer, AngeliA.IRect, AngeliA.IRect, Integer, Integer, Boolean)
  name.vb: RemapCells(Span(Of Cell), Integer, Integer, IRect, IRect, Integer, Integer, Boolean)
- uid: AngeliA.FrameworkUtil.RemapCells(AngeliA.Cell[],System.Int32,System.Int32,AngeliA.IRect,AngeliA.IRect,System.Int32@,System.Int32,System.Int32,System.Boolean)
  commentId: M:AngeliA.FrameworkUtil.RemapCells(AngeliA.Cell[],System.Int32,System.Int32,AngeliA.IRect,AngeliA.IRect,System.Int32@,System.Int32,System.Int32,System.Boolean)
  id: RemapCells(AngeliA.Cell[],System.Int32,System.Int32,AngeliA.IRect,AngeliA.IRect,System.Int32@,System.Int32,System.Int32,System.Boolean)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: RemapCells(Cell[], int, int, IRect, IRect, out int, int, int, bool)
  nameWithType: FrameworkUtil.RemapCells(Cell[], int, int, IRect, IRect, out int, int, int, bool)
  fullName: AngeliA.FrameworkUtil.RemapCells(AngeliA.Cell[], int, int, AngeliA.IRect, AngeliA.IRect, out int, int, int, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Rendering.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: RemapCells
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Rendering.cs
    startLine: 255
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Remap the position and size of given rendering cells
  example: []
  syntax:
    content: public static void RemapCells(Cell[] cells, int cellIndexStart, int cellIndexEnd, IRect from, IRect to, out int minZ, int fitPivotX = 500, int fitPivotY = 500, bool fit = true)
    parameters:
    - id: cells
      type: AngeliA.Cell[]
      description: ''
    - id: cellIndexStart
      type: System.Int32
      description: Start index of remap logic
    - id: cellIndexEnd
      type: System.Int32
      description: End index of remap logic (exclude)
    - id: from
      type: AngeliA.IRect
      description: Remap from this range (global space)
    - id: to
      type: AngeliA.IRect
      description: Remap to this range (global space)
    - id: minZ
      type: System.Int32
      description: Minimal Z value for sort rendering cells
    - id: fitPivotX
      type: System.Int32
      description: ''
    - id: fitPivotY
      type: System.Int32
      description: ''
    - id: fit
      type: System.Boolean
      description: True if keep the aspect ratio by resize the cells
    content.vb: Public Shared Sub RemapCells(cells As Cell(), cellIndexStart As Integer, cellIndexEnd As Integer, from As IRect, [to] As IRect, minZ As Integer, fitPivotX As Integer = 500, fitPivotY As Integer = 500, fit As Boolean = True)
  overload: AngeliA.FrameworkUtil.RemapCells*
  nameWithType.vb: FrameworkUtil.RemapCells(Cell(), Integer, Integer, IRect, IRect, Integer, Integer, Integer, Boolean)
  fullName.vb: AngeliA.FrameworkUtil.RemapCells(AngeliA.Cell(), Integer, Integer, AngeliA.IRect, AngeliA.IRect, Integer, Integer, Integer, Boolean)
  name.vb: RemapCells(Cell(), Integer, Integer, IRect, IRect, Integer, Integer, Integer, Boolean)
- uid: AngeliA.FrameworkUtil.RemapCells(System.Span{AngeliA.Cell},System.Int32,System.Int32,AngeliA.IRect,AngeliA.IRect,System.Int32@,System.Int32,System.Int32,System.Boolean)
  commentId: M:AngeliA.FrameworkUtil.RemapCells(System.Span{AngeliA.Cell},System.Int32,System.Int32,AngeliA.IRect,AngeliA.IRect,System.Int32@,System.Int32,System.Int32,System.Boolean)
  id: RemapCells(System.Span{AngeliA.Cell},System.Int32,System.Int32,AngeliA.IRect,AngeliA.IRect,System.Int32@,System.Int32,System.Int32,System.Boolean)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: RemapCells(Span<Cell>, int, int, IRect, IRect, out int, int, int, bool)
  nameWithType: FrameworkUtil.RemapCells(Span<Cell>, int, int, IRect, IRect, out int, int, int, bool)
  fullName: AngeliA.FrameworkUtil.RemapCells(System.Span<AngeliA.Cell>, int, int, AngeliA.IRect, AngeliA.IRect, out int, int, int, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Rendering.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: RemapCells
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Rendering.cs
    startLine: 268
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Remap the position and size of given rendering cells
  example: []
  syntax:
    content: public static void RemapCells(Span<Cell> cells, int cellIndexStart, int cellIndexEnd, IRect from, IRect to, out int minZ, int fitPivotX = 500, int fitPivotY = 500, bool fit = true)
    parameters:
    - id: cells
      type: System.Span{AngeliA.Cell}
      description: ''
    - id: cellIndexStart
      type: System.Int32
      description: Start index of remap logic
    - id: cellIndexEnd
      type: System.Int32
      description: End index of remap logic (exclude)
    - id: from
      type: AngeliA.IRect
      description: Remap from this range (global space)
    - id: to
      type: AngeliA.IRect
      description: Remap to this range (global space)
    - id: minZ
      type: System.Int32
      description: Minimal Z value for sort rendering cells
    - id: fitPivotX
      type: System.Int32
      description: ''
    - id: fitPivotY
      type: System.Int32
      description: ''
    - id: fit
      type: System.Boolean
      description: True if keep the aspect ratio by resize the cells
    content.vb: Public Shared Sub RemapCells(cells As Span(Of Cell), cellIndexStart As Integer, cellIndexEnd As Integer, from As IRect, [to] As IRect, minZ As Integer, fitPivotX As Integer = 500, fitPivotY As Integer = 500, fit As Boolean = True)
  overload: AngeliA.FrameworkUtil.RemapCells*
  nameWithType.vb: FrameworkUtil.RemapCells(Span(Of Cell), Integer, Integer, IRect, IRect, Integer, Integer, Integer, Boolean)
  fullName.vb: AngeliA.FrameworkUtil.RemapCells(System.Span(Of AngeliA.Cell), Integer, Integer, AngeliA.IRect, AngeliA.IRect, Integer, Integer, Integer, Boolean)
  name.vb: RemapCells(Span(Of Cell), Integer, Integer, IRect, IRect, Integer, Integer, Integer, Boolean)
- uid: AngeliA.FrameworkUtil.DrawItemUsageBar(AngeliA.IRect,System.Int32,System.Int32)
  commentId: M:AngeliA.FrameworkUtil.DrawItemUsageBar(AngeliA.IRect,System.Int32,System.Int32)
  id: DrawItemUsageBar(AngeliA.IRect,System.Int32,System.Int32)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: DrawItemUsageBar(IRect, int, int)
  nameWithType: FrameworkUtil.DrawItemUsageBar(IRect, int, int)
  fullName: AngeliA.FrameworkUtil.DrawItemUsageBar(AngeliA.IRect, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Rendering.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawItemUsageBar
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Rendering.cs
    startLine: 300
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Draw usage bar UI
  example: []
  syntax:
    content: public static void DrawItemUsageBar(IRect rect, int usage, int maxUsage)
    parameters:
    - id: rect
      type: AngeliA.IRect
      description: Rect position in global space
    - id: usage
      type: System.Int32
      description: ''
    - id: maxUsage
      type: System.Int32
      description: ''
    content.vb: Public Shared Sub DrawItemUsageBar(rect As IRect, usage As Integer, maxUsage As Integer)
  overload: AngeliA.FrameworkUtil.DrawItemUsageBar*
  nameWithType.vb: FrameworkUtil.DrawItemUsageBar(IRect, Integer, Integer)
  fullName.vb: AngeliA.FrameworkUtil.DrawItemUsageBar(AngeliA.IRect, Integer, Integer)
  name.vb: DrawItemUsageBar(IRect, Integer, Integer)
- uid: AngeliA.FrameworkUtil.DrawAllCollidersAsGizmos(System.Int32,AngeliA.Int2,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean,AngeliA.Color32[])
  commentId: M:AngeliA.FrameworkUtil.DrawAllCollidersAsGizmos(System.Int32,AngeliA.Int2,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean,AngeliA.Color32[])
  id: DrawAllCollidersAsGizmos(System.Int32,AngeliA.Int2,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean,AngeliA.Color32[])
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: DrawAllCollidersAsGizmos(int, Int2, float, bool, bool, bool, bool, Color32[])
  nameWithType: FrameworkUtil.DrawAllCollidersAsGizmos(int, Int2, float, bool, bool, bool, bool, Color32[])
  fullName: AngeliA.FrameworkUtil.DrawAllCollidersAsGizmos(int, AngeliA.Int2, float, bool, bool, bool, bool, AngeliA.Color32[])
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Rendering.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawAllCollidersAsGizmos
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Rendering.cs
    startLine: 326
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Display current physics colliders with game gizmos functions
  example: []
  syntax:
    content: public static void DrawAllCollidersAsGizmos(int physicsMask = 31, Int2 offset = default, float brightness = 1, bool ignoreNonOnewayTrigger = false, bool ignoreOnewayTrigger = false, bool useTechEffect = false, bool drawVelocity = false, Color32[] layerTints = null)
    parameters:
    - id: physicsMask
      type: System.Int32
      description: Which physics layers are included
    - id: offset
      type: AngeliA.Int2
      description: Position offset for all gizmos
    - id: brightness
      type: System.Single
      description: 0 means dark, 1 means normal color
    - id: ignoreNonOnewayTrigger
      type: System.Boolean
      description: True if triggers that is not oneway gate are excluded
    - id: ignoreOnewayTrigger
      type: System.Boolean
      description: True if oneway gates are excluded
    - id: useTechEffect
      type: System.Boolean
      description: True if the gizmos glitchs
    - id: drawVelocity
      type: System.Boolean
      description: True if draw the current velocity for rigidbody
    - id: layerTints
      type: AngeliA.Color32[]
      description: Color for specified layers. Set to null to use default.
    content.vb: Public Shared Sub DrawAllCollidersAsGizmos(physicsMask As Integer = 31, offset As Int2 = Nothing, brightness As Single = 1, ignoreNonOnewayTrigger As Boolean = False, ignoreOnewayTrigger As Boolean = False, useTechEffect As Boolean = False, drawVelocity As Boolean = False, layerTints As Color32() = Nothing)
  overload: AngeliA.FrameworkUtil.DrawAllCollidersAsGizmos*
  nameWithType.vb: FrameworkUtil.DrawAllCollidersAsGizmos(Integer, Int2, Single, Boolean, Boolean, Boolean, Boolean, Color32())
  fullName.vb: AngeliA.FrameworkUtil.DrawAllCollidersAsGizmos(Integer, AngeliA.Int2, Single, Boolean, Boolean, Boolean, Boolean, AngeliA.Color32())
  name.vb: DrawAllCollidersAsGizmos(Integer, Int2, Single, Boolean, Boolean, Boolean, Boolean, Color32())
- uid: AngeliA.FrameworkUtil.GetItemTypeIcon(System.Int32)
  commentId: M:AngeliA.FrameworkUtil.GetItemTypeIcon(System.Int32)
  id: GetItemTypeIcon(System.Int32)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: GetItemTypeIcon(int)
  nameWithType: FrameworkUtil.GetItemTypeIcon(int)
  fullName: AngeliA.FrameworkUtil.GetItemTypeIcon(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Rendering.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetItemTypeIcon
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Rendering.cs
    startLine: 419
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get type icon artwork sprite ID for given item
  example: []
  syntax:
    content: public static int GetItemTypeIcon(int itemID)
    parameters:
    - id: itemID
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function GetItemTypeIcon(itemID As Integer) As Integer
  overload: AngeliA.FrameworkUtil.GetItemTypeIcon*
  nameWithType.vb: FrameworkUtil.GetItemTypeIcon(Integer)
  fullName.vb: AngeliA.FrameworkUtil.GetItemTypeIcon(Integer)
  name.vb: GetItemTypeIcon(Integer)
- uid: AngeliA.FrameworkUtil.DrawClockHands(AngeliA.IRect,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  commentId: M:AngeliA.FrameworkUtil.DrawClockHands(AngeliA.IRect,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  id: DrawClockHands(AngeliA.IRect,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: DrawClockHands(IRect, int, int, int, Color32, int)
  nameWithType: FrameworkUtil.DrawClockHands(IRect, int, int, int, Color32, int)
  fullName: AngeliA.FrameworkUtil.DrawClockHands(AngeliA.IRect, int, int, int, AngeliA.Color32, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Rendering.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawClockHands
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Rendering.cs
    startLine: 449
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Draw clock hands from in-game time
  example: []
  syntax:
    content: public static void DrawClockHands(IRect rect, int handCode, int thickness, int thicknessSecond, Color32 tint, int z = -2147483648)
    parameters:
    - id: rect
      type: AngeliA.IRect
      description: Rect position for clock face in global space
    - id: handCode
      type: System.Int32
      description: Artwork sprite ID for the hand
    - id: thickness
      type: System.Int32
      description: ''
    - id: thicknessSecond
      type: System.Int32
      description: ''
    - id: tint
      type: AngeliA.Color32
      description: Color tint
    - id: z
      type: System.Int32
      description: Z value for sort rendering cells
    content.vb: Public Shared Sub DrawClockHands(rect As IRect, handCode As Integer, thickness As Integer, thicknessSecond As Integer, tint As Color32, z As Integer = -2147483648)
  overload: AngeliA.FrameworkUtil.DrawClockHands*
  nameWithType.vb: FrameworkUtil.DrawClockHands(IRect, Integer, Integer, Integer, Color32, Integer)
  fullName.vb: AngeliA.FrameworkUtil.DrawClockHands(AngeliA.IRect, Integer, Integer, Integer, AngeliA.Color32, Integer)
  name.vb: DrawClockHands(IRect, Integer, Integer, Integer, Color32, Integer)
- uid: AngeliA.FrameworkUtil.DrawClockHands(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  commentId: M:AngeliA.FrameworkUtil.DrawClockHands(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  id: DrawClockHands(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Color32,System.Int32)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: DrawClockHands(int, int, int, int, int, int, Color32, int)
  nameWithType: FrameworkUtil.DrawClockHands(int, int, int, int, int, int, Color32, int)
  fullName: AngeliA.FrameworkUtil.DrawClockHands(int, int, int, int, int, int, AngeliA.Color32, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Rendering.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawClockHands
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Rendering.cs
    startLine: 463
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Draw clock hands from in-game time
  example: []
  syntax:
    content: public static void DrawClockHands(int centerX, int centerY, int radius, int handCode, int thickness, int thicknessSecond, Color32 tint, int z = -2147483648)
    parameters:
    - id: centerX
      type: System.Int32
      description: Center position in global space
    - id: centerY
      type: System.Int32
      description: Center position in global space
    - id: radius
      type: System.Int32
      description: Radius of the clock face
    - id: handCode
      type: System.Int32
      description: Artwork sprite ID for the hand
    - id: thickness
      type: System.Int32
      description: ''
    - id: thicknessSecond
      type: System.Int32
      description: ''
    - id: tint
      type: AngeliA.Color32
      description: Color tint
    - id: z
      type: System.Int32
      description: Z value for sort rendering cells
    content.vb: Public Shared Sub DrawClockHands(centerX As Integer, centerY As Integer, radius As Integer, handCode As Integer, thickness As Integer, thicknessSecond As Integer, tint As Color32, z As Integer = -2147483648)
  overload: AngeliA.FrameworkUtil.DrawClockHands*
  nameWithType.vb: FrameworkUtil.DrawClockHands(Integer, Integer, Integer, Integer, Integer, Integer, Color32, Integer)
  fullName.vb: AngeliA.FrameworkUtil.DrawClockHands(Integer, Integer, Integer, Integer, Integer, Integer, AngeliA.Color32, Integer)
  name.vb: DrawClockHands(Integer, Integer, Integer, Integer, Integer, Integer, Color32, Integer)
- uid: AngeliA.FrameworkUtil.DrawClockPendulum(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.FrameworkUtil.DrawClockPendulum(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: DrawClockPendulum(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: DrawClockPendulum(int, int, int, int, int, int, int, int, int)
  nameWithType: FrameworkUtil.DrawClockPendulum(int, int, int, int, int, int, int, int, int)
  fullName: AngeliA.FrameworkUtil.DrawClockPendulum(int, int, int, int, int, int, int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Rendering.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawClockPendulum
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Rendering.cs
    startLine: 500
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Draw the pendulum for clocks
  example: []
  syntax:
    content: public static void DrawClockPendulum(int artCodeLeg, int artCodeHead, int x, int y, int length, int thickness, int headSize, int maxRot, int deltaX = 0)
    parameters:
    - id: artCodeLeg
      type: System.Int32
      description: Artwork sprite ID for the long handle part
    - id: artCodeHead
      type: System.Int32
      description: Artwork sprite ID for the head on the edge
    - id: x
      type: System.Int32
      description: Center position in global space
    - id: y
      type: System.Int32
      description: Center position in global space
    - id: length
      type: System.Int32
      description: Length of the pendulum in global space
    - id: thickness
      type: System.Int32
      description: Thichness of the leg in global space
    - id: headSize
      type: System.Int32
      description: Size of the head in global space
    - id: maxRot
      type: System.Int32
      description: Rotation amount
    - id: deltaX
      type: System.Int32
      description: Extra position shift amount
    content.vb: Public Shared Sub DrawClockPendulum(artCodeLeg As Integer, artCodeHead As Integer, x As Integer, y As Integer, length As Integer, thickness As Integer, headSize As Integer, maxRot As Integer, deltaX As Integer = 0)
  overload: AngeliA.FrameworkUtil.DrawClockPendulum*
  nameWithType.vb: FrameworkUtil.DrawClockPendulum(Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.FrameworkUtil.DrawClockPendulum(Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
  name.vb: DrawClockPendulum(Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
- uid: AngeliA.FrameworkUtil.SpiralSpinningCellEffect(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  commentId: M:AngeliA.FrameworkUtil.SpiralSpinningCellEffect(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  id: SpiralSpinningCellEffect(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: SpiralSpinningCellEffect(int, int, int, int, int, bool)
  nameWithType: FrameworkUtil.SpiralSpinningCellEffect(int, int, int, int, int, bool)
  fullName: AngeliA.FrameworkUtil.SpiralSpinningCellEffect(int, int, int, int, int, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Rendering.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SpiralSpinningCellEffect
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Rendering.cs
    startLine: 524
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Draw spinning effect for teleporting with portal
  example: []
  syntax:
    content: public static void SpiralSpinningCellEffect(int localFrame, int pointX, int pointY, int duration, int cellIndexStart, bool reverseSpin = false)
    parameters:
    - id: localFrame
      type: System.Int32
      description: ''
    - id: pointX
      type: System.Int32
      description: Center position in global space
    - id: pointY
      type: System.Int32
      description: Center position in global space
    - id: duration
      type: System.Int32
      description: Total duration of the animation
    - id: cellIndexStart
      type: System.Int32
      description: Start index of target rendering cells in current rendering layer
    - id: reverseSpin
      type: System.Boolean
      description: ''
    content.vb: Public Shared Sub SpiralSpinningCellEffect(localFrame As Integer, pointX As Integer, pointY As Integer, duration As Integer, cellIndexStart As Integer, reverseSpin As Boolean = False)
  overload: AngeliA.FrameworkUtil.SpiralSpinningCellEffect*
  nameWithType.vb: FrameworkUtil.SpiralSpinningCellEffect(Integer, Integer, Integer, Integer, Integer, Boolean)
  fullName.vb: AngeliA.FrameworkUtil.SpiralSpinningCellEffect(Integer, Integer, Integer, Integer, Integer, Boolean)
  name.vb: SpiralSpinningCellEffect(Integer, Integer, Integer, Integer, Integer, Boolean)
- uid: AngeliA.FrameworkUtil.DrawLoopingActivatedHighlight(AngeliA.IRect,AngeliA.Color32,System.Int32,System.Int32)
  commentId: M:AngeliA.FrameworkUtil.DrawLoopingActivatedHighlight(AngeliA.IRect,AngeliA.Color32,System.Int32,System.Int32)
  id: DrawLoopingActivatedHighlight(AngeliA.IRect,AngeliA.Color32,System.Int32,System.Int32)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: DrawLoopingActivatedHighlight(IRect, Color32, int, int)
  nameWithType: FrameworkUtil.DrawLoopingActivatedHighlight(IRect, Color32, int, int)
  fullName: AngeliA.FrameworkUtil.DrawLoopingActivatedHighlight(AngeliA.IRect, AngeliA.Color32, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Rendering.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawLoopingActivatedHighlight
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Rendering.cs
    startLine: 550
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Draw a highlight effect
  example: []
  syntax:
    content: public static void DrawLoopingActivatedHighlight(IRect targetRect, Color32 tint, int lineCount = 4, int duration = 22)
    parameters:
    - id: targetRect
      type: AngeliA.IRect
      description: Rect position in global space
    - id: tint
      type: AngeliA.Color32
      description: Color tint
    - id: lineCount
      type: System.Int32
      description: ''
    - id: duration
      type: System.Int32
      description: Duration in frame for a single loop
    content.vb: Public Shared Sub DrawLoopingActivatedHighlight(targetRect As IRect, tint As Color32, lineCount As Integer = 4, duration As Integer = 22)
  overload: AngeliA.FrameworkUtil.DrawLoopingActivatedHighlight*
  nameWithType.vb: FrameworkUtil.DrawLoopingActivatedHighlight(IRect, Color32, Integer, Integer)
  fullName.vb: AngeliA.FrameworkUtil.DrawLoopingActivatedHighlight(AngeliA.IRect, AngeliA.Color32, Integer, Integer)
  name.vb: DrawLoopingActivatedHighlight(IRect, Color32, Integer, Integer)
- uid: AngeliA.FrameworkUtil.DrawLoopingTriangleMark(AngeliA.IRect,System.Int32,AngeliA.Color32,AngeliA.Direction4,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.FrameworkUtil.DrawLoopingTriangleMark(AngeliA.IRect,System.Int32,AngeliA.Color32,AngeliA.Direction4,System.Int32,System.Int32,System.Int32,System.Int32)
  id: DrawLoopingTriangleMark(AngeliA.IRect,System.Int32,AngeliA.Color32,AngeliA.Direction4,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: DrawLoopingTriangleMark(IRect, int, Color32, Direction4, int, int, int, int)
  nameWithType: FrameworkUtil.DrawLoopingTriangleMark(IRect, int, Color32, Direction4, int, int, int, int)
  fullName: AngeliA.FrameworkUtil.DrawLoopingTriangleMark(AngeliA.IRect, int, AngeliA.Color32, AngeliA.Direction4, int, int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Rendering.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawLoopingTriangleMark
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Rendering.cs
    startLine: 576
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Draw a direction mark with looping moving triangles
  example: []
  syntax:
    content: public static void DrawLoopingTriangleMark(IRect range, int frame, Color32 tint, Direction4 direction, int count, int size, int z, int speed)
    parameters:
    - id: range
      type: AngeliA.IRect
      description: Rect position in global space
    - id: frame
      type: System.Int32
      description: Current animation frame
    - id: tint
      type: AngeliA.Color32
      description: Color tint
    - id: direction
      type: AngeliA.Direction4
      description: ''
    - id: count
      type: System.Int32
      description: Triangle count
    - id: size
      type: System.Int32
      description: Triangle size
    - id: z
      type: System.Int32
      description: Z value for sort rendering cells
    - id: speed
      type: System.Int32
      description: Moving speed of the triangle
    content.vb: Public Shared Sub DrawLoopingTriangleMark(range As IRect, frame As Integer, tint As Color32, direction As Direction4, count As Integer, size As Integer, z As Integer, speed As Integer)
  overload: AngeliA.FrameworkUtil.DrawLoopingTriangleMark*
  nameWithType.vb: FrameworkUtil.DrawLoopingTriangleMark(IRect, Integer, Color32, Direction4, Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.FrameworkUtil.DrawLoopingTriangleMark(AngeliA.IRect, Integer, AngeliA.Color32, AngeliA.Direction4, Integer, Integer, Integer, Integer)
  name.vb: DrawLoopingTriangleMark(IRect, Integer, Color32, Direction4, Integer, Integer, Integer, Integer)
- uid: AngeliA.FrameworkUtil.DrawOnFireEffect(System.Int32,AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.FrameworkUtil.DrawOnFireEffect(System.Int32,AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: DrawOnFireEffect(System.Int32,AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: DrawOnFireEffect(int, IRect, int, int, int, int, int)
  nameWithType: FrameworkUtil.DrawOnFireEffect(int, IRect, int, int, int, int, int)
  fullName: AngeliA.FrameworkUtil.DrawOnFireEffect(int, AngeliA.IRect, int, int, int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Rendering.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawOnFireEffect
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Rendering.cs
    startLine: 613
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Draw effect for object on fire
  example: []
  syntax:
    content: public static void DrawOnFireEffect(int spriteID, IRect rect, int count = 2, int loop = 40, int size = 200, int seed = 0, int z = 2147483647)
    parameters:
    - id: spriteID
      type: System.Int32
      description: Artwork sprite ID
    - id: rect
      type: AngeliA.IRect
      description: Rect range in global space
    - id: count
      type: System.Int32
      description: Rendering sprite count at same time
    - id: loop
      type: System.Int32
      description: Duration for a single loop
    - id: size
      type: System.Int32
      description: Size of a single sprite
    - id: seed
      type: System.Int32
      description: Seed to generate random value
    - id: z
      type: System.Int32
      description: Z value for sort rendering cells
    content.vb: Public Shared Sub DrawOnFireEffect(spriteID As Integer, rect As IRect, count As Integer = 2, [loop] As Integer = 40, size As Integer = 200, seed As Integer = 0, z As Integer = 2147483647)
  overload: AngeliA.FrameworkUtil.DrawOnFireEffect*
  nameWithType.vb: FrameworkUtil.DrawOnFireEffect(Integer, IRect, Integer, Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.FrameworkUtil.DrawOnFireEffect(Integer, AngeliA.IRect, Integer, Integer, Integer, Integer, Integer)
  name.vb: DrawOnFireEffect(Integer, IRect, Integer, Integer, Integer, Integer, Integer)
- uid: AngeliA.FrameworkUtil.DrawFrozenEffect(AngeliA.IRect,System.Byte,System.Int32,AngeliA.Int2,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.FrameworkUtil.DrawFrozenEffect(AngeliA.IRect,System.Byte,System.Int32,AngeliA.Int2,System.Int32,System.Int32,System.Int32)
  id: DrawFrozenEffect(AngeliA.IRect,System.Byte,System.Int32,AngeliA.Int2,System.Int32,System.Int32,System.Int32)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: DrawFrozenEffect(IRect, byte, int, Int2, int, int, int)
  nameWithType: FrameworkUtil.DrawFrozenEffect(IRect, byte, int, Int2, int, int, int)
  fullName: AngeliA.FrameworkUtil.DrawFrozenEffect(AngeliA.IRect, byte, int, AngeliA.Int2, int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Rendering.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawFrozenEffect
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Rendering.cs
    startLine: 646
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Draw effect for frozen zone
  example: []
  syntax:
    content: public static void DrawFrozenEffect(IRect rect, byte alpha, int count = 32, Int2 offset = default, int seed = 0, int size = 142, int z = 0)
    parameters:
    - id: rect
      type: AngeliA.IRect
      description: Position range in global space
    - id: alpha
      type: System.Byte
      description: ''
    - id: count
      type: System.Int32
      description: Particle count at same time
    - id: offset
      type: AngeliA.Int2
      description: Position offset
    - id: seed
      type: System.Int32
      description: Seed to generate random value
    - id: size
      type: System.Int32
      description: Size of a single particle
    - id: z
      type: System.Int32
      description: Z value to sort rendering cells
    content.vb: Public Shared Sub DrawFrozenEffect(rect As IRect, alpha As Byte, count As Integer = 32, offset As Int2 = Nothing, seed As Integer = 0, size As Integer = 142, z As Integer = 0)
  overload: AngeliA.FrameworkUtil.DrawFrozenEffect*
  nameWithType.vb: FrameworkUtil.DrawFrozenEffect(IRect, Byte, Integer, Int2, Integer, Integer, Integer)
  fullName.vb: AngeliA.FrameworkUtil.DrawFrozenEffect(AngeliA.IRect, Byte, Integer, AngeliA.Int2, Integer, Integer, Integer)
  name.vb: DrawFrozenEffect(IRect, Byte, Integer, Int2, Integer, Integer, Integer)
- uid: AngeliA.FrameworkUtil.DrawLightenEffect(System.Int32,AngeliA.IRect,System.Int32,System.Int32)
  commentId: M:AngeliA.FrameworkUtil.DrawLightenEffect(System.Int32,AngeliA.IRect,System.Int32,System.Int32)
  id: DrawLightenEffect(System.Int32,AngeliA.IRect,System.Int32,System.Int32)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: DrawLightenEffect(int, IRect, int, int)
  nameWithType: FrameworkUtil.DrawLightenEffect(int, IRect, int, int)
  fullName: AngeliA.FrameworkUtil.DrawLightenEffect(int, AngeliA.IRect, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Rendering.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawLightenEffect
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Rendering.cs
    startLine: 679
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Draw effect for electric light coming out of an object
  example: []
  syntax:
    content: public static void DrawLightenEffect(int spriteID, IRect rect, int count = 2, int size = 196)
    parameters:
    - id: spriteID
      type: System.Int32
      description: Artwork sprite ID for a single lighten
    - id: rect
      type: AngeliA.IRect
      description: Position range in global space
    - id: count
      type: System.Int32
      description: Count of sprite at same time
    - id: size
      type: System.Int32
      description: Size of a single sprite
    content.vb: Public Shared Sub DrawLightenEffect(spriteID As Integer, rect As IRect, count As Integer = 2, size As Integer = 196)
  overload: AngeliA.FrameworkUtil.DrawLightenEffect*
  nameWithType.vb: FrameworkUtil.DrawLightenEffect(Integer, IRect, Integer, Integer)
  fullName.vb: AngeliA.FrameworkUtil.DrawLightenEffect(Integer, AngeliA.IRect, Integer, Integer)
  name.vb: DrawLightenEffect(Integer, IRect, Integer, Integer)
- uid: AngeliA.FrameworkUtil.DrawPoisonEffect(System.Int32,AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.FrameworkUtil.DrawPoisonEffect(System.Int32,AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: DrawPoisonEffect(System.Int32,AngeliA.IRect,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: AngeliA.FrameworkUtil
  langs:
  - csharp
  - vb
  name: DrawPoisonEffect(int, IRect, int, int, int, int, int)
  nameWithType: FrameworkUtil.DrawPoisonEffect(int, IRect, int, int, int, int, int)
  fullName: AngeliA.FrameworkUtil.DrawPoisonEffect(int, AngeliA.IRect, int, int, int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/FrameworkUtil_Rendering.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: DrawPoisonEffect
    path: ../../AngeliA/AngeliA Framework/src/Utility/FrameworkUtil_Rendering.cs
    startLine: 710
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Draw effect for object being poisoned
  example: []
  syntax:
    content: public static void DrawPoisonEffect(int spriteID, IRect rect, int loop = 120, int count = 4, int seed = 0, int size = 132, int z = 2147483647)
    parameters:
    - id: spriteID
      type: System.Int32
      description: Artwork sprite ID
    - id: rect
      type: AngeliA.IRect
      description: Rect range in global space
    - id: loop
      type: System.Int32
      description: Duration of a single animation loop
    - id: count
      type: System.Int32
      description: Count of sprites at same time
    - id: seed
      type: System.Int32
      description: Seed to generate random value
    - id: size
      type: System.Int32
      description: Size of a single particle in global space
    - id: z
      type: System.Int32
      description: Z value for sort rendering cells
    content.vb: Public Shared Sub DrawPoisonEffect(spriteID As Integer, rect As IRect, [loop] As Integer = 120, count As Integer = 4, seed As Integer = 0, size As Integer = 132, z As Integer = 2147483647)
  overload: AngeliA.FrameworkUtil.DrawPoisonEffect*
  nameWithType.vb: FrameworkUtil.DrawPoisonEffect(Integer, IRect, Integer, Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.FrameworkUtil.DrawPoisonEffect(Integer, AngeliA.IRect, Integer, Integer, Integer, Integer, Integer)
  name.vb: DrawPoisonEffect(Integer, IRect, Integer, Integer, Integer, Integer, Integer)
references:
- uid: AngeliA
  commentId: N:AngeliA
  href: AngeliA.html
  name: AngeliA
  nameWithType: AngeliA
  fullName: AngeliA
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Collections.Generic.Dictionary{AngeliA.GamepadKey,System.Int32}
  commentId: T:System.Collections.Generic.Dictionary{AngeliA.GamepadKey,System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<GamepadKey, int>
  nameWithType: Dictionary<GamepadKey, int>
  fullName: System.Collections.Generic.Dictionary<AngeliA.GamepadKey, int>
  nameWithType.vb: Dictionary(Of GamepadKey, Integer)
  fullName.vb: System.Collections.Generic.Dictionary(Of AngeliA.GamepadKey, Integer)
  name.vb: Dictionary(Of GamepadKey, Integer)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: AngeliA.GamepadKey
    name: GamepadKey
    href: AngeliA.GamepadKey.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: AngeliA.GamepadKey
    name: GamepadKey
    href: AngeliA.GamepadKey.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: AngeliA.FrameworkUtil.GetBlockRealName*
  commentId: Overload:AngeliA.FrameworkUtil.GetBlockRealName
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_GetBlockRealName_System_String_
  name: GetBlockRealName
  nameWithType: FrameworkUtil.GetBlockRealName
  fullName: AngeliA.FrameworkUtil.GetBlockRealName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AngeliA.FrameworkUtil.GetOnewayTag*
  commentId: Overload:AngeliA.FrameworkUtil.GetOnewayTag
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_GetOnewayTag_AngeliA_Direction4_
  name: GetOnewayTag
  nameWithType: FrameworkUtil.GetOnewayTag
  fullName: AngeliA.FrameworkUtil.GetOnewayTag
- uid: AngeliA.Direction4
  commentId: T:AngeliA.Direction4
  parent: AngeliA
  href: AngeliA.Direction4.html
  name: Direction4
  nameWithType: Direction4
  fullName: AngeliA.Direction4
- uid: AngeliA.Tag
  commentId: T:AngeliA.Tag
  parent: AngeliA
  href: AngeliA.Tag.html
  name: Tag
  nameWithType: Tag
  fullName: AngeliA.Tag
- uid: AngeliA.FrameworkUtil.HasOnewayTag*
  commentId: Overload:AngeliA.FrameworkUtil.HasOnewayTag
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_HasOnewayTag_AngeliA_Tag_
  name: HasOnewayTag
  nameWithType: FrameworkUtil.HasOnewayTag
  fullName: AngeliA.FrameworkUtil.HasOnewayTag
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: AngeliA.FrameworkUtil.TryGetOnewayDirection*
  commentId: Overload:AngeliA.FrameworkUtil.TryGetOnewayDirection
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_TryGetOnewayDirection_AngeliA_Tag_AngeliA_Direction4__
  name: TryGetOnewayDirection
  nameWithType: FrameworkUtil.TryGetOnewayDirection
  fullName: AngeliA.FrameworkUtil.TryGetOnewayDirection
- uid: AngeliA.FrameworkUtil.GetFlyingFormation*
  commentId: Overload:AngeliA.FrameworkUtil.GetFlyingFormation
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_GetFlyingFormation_AngeliA_Int2_System_Int32_System_Int32_
  name: GetFlyingFormation
  nameWithType: FrameworkUtil.GetFlyingFormation
  fullName: AngeliA.FrameworkUtil.GetFlyingFormation
- uid: AngeliA.Int2
  commentId: T:AngeliA.Int2
  parent: AngeliA
  href: AngeliA.Int2.html
  name: Int2
  nameWithType: Int2
  fullName: AngeliA.Int2
- uid: AngeliA.FrameworkUtil.GetSpriteInfoFromName*
  commentId: Overload:AngeliA.FrameworkUtil.GetSpriteInfoFromName
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_GetSpriteInfoFromName_System_String_System_String__System_Boolean__AngeliA_Tag__AngeliA_BlockRule__System_Boolean__System_Int32__System_Int32__System_Nullable_System_Int32___System_Nullable_System_Int32___
  name: GetSpriteInfoFromName
  nameWithType: FrameworkUtil.GetSpriteInfoFromName
  fullName: AngeliA.FrameworkUtil.GetSpriteInfoFromName
- uid: AngeliA.BlockRule
  commentId: T:AngeliA.BlockRule
  parent: AngeliA
  href: AngeliA.BlockRule.html
  name: BlockRule
  nameWithType: BlockRule
  fullName: AngeliA.BlockRule
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: AngeliA.FrameworkUtil.GetGroupInfoFromSpriteRealName*
  commentId: Overload:AngeliA.FrameworkUtil.GetGroupInfoFromSpriteRealName
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_GetGroupInfoFromSpriteRealName_System_String_System_String__System_Int32__
  name: GetGroupInfoFromSpriteRealName
  nameWithType: FrameworkUtil.GetGroupInfoFromSpriteRealName
  fullName: AngeliA.FrameworkUtil.GetGroupInfoFromSpriteRealName
- uid: AngeliA.FrameworkUtil.GetScaledAudioVolume*
  commentId: Overload:AngeliA.FrameworkUtil.GetScaledAudioVolume
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_GetScaledAudioVolume_System_Int32_System_Int32_
  name: GetScaledAudioVolume
  nameWithType: FrameworkUtil.GetScaledAudioVolume
  fullName: AngeliA.FrameworkUtil.GetScaledAudioVolume
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: AngeliA.FrameworkUtil.PlaySoundAtPosition*
  commentId: Overload:AngeliA.FrameworkUtil.PlaySoundAtPosition
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_PlaySoundAtPosition_System_Int32_AngeliA_Int2_System_Single_System_Single_
  name: PlaySoundAtPosition
  nameWithType: FrameworkUtil.PlaySoundAtPosition
  fullName: AngeliA.FrameworkUtil.PlaySoundAtPosition
- uid: AngeliA.FrameworkUtil.ResetShoulderAndUpperArmPos*
  commentId: Overload:AngeliA.FrameworkUtil.ResetShoulderAndUpperArmPos
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_ResetShoulderAndUpperArmPos_AngeliA_PoseCharacterRenderer_System_Boolean_System_Boolean_
  name: ResetShoulderAndUpperArmPos
  nameWithType: FrameworkUtil.ResetShoulderAndUpperArmPos
  fullName: AngeliA.FrameworkUtil.ResetShoulderAndUpperArmPos
- uid: AngeliA.PoseCharacterRenderer
  commentId: T:AngeliA.PoseCharacterRenderer
  parent: AngeliA
  href: AngeliA.PoseCharacterRenderer.html
  name: PoseCharacterRenderer
  nameWithType: PoseCharacterRenderer
  fullName: AngeliA.PoseCharacterRenderer
- uid: AngeliA.FrameworkUtil.HighlightBlink*
  commentId: Overload:AngeliA.FrameworkUtil.HighlightBlink
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_HighlightBlink_AngeliA_Cell_System_Single_System_Single_System_Boolean_System_Boolean_
  name: HighlightBlink
  nameWithType: FrameworkUtil.HighlightBlink
  fullName: AngeliA.FrameworkUtil.HighlightBlink
- uid: AngeliA.Cell
  commentId: T:AngeliA.Cell
  parent: AngeliA
  href: AngeliA.Cell.html
  name: Cell
  nameWithType: Cell
  fullName: AngeliA.Cell
- uid: AngeliA.FrameworkUtil.Time01_to_TimeDigit*
  commentId: Overload:AngeliA.FrameworkUtil.Time01_to_TimeDigit
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_Time01_to_TimeDigit_System_Single_System_Int32__System_Int32__System_Int32__
  name: Time01_to_TimeDigit
  nameWithType: FrameworkUtil.Time01_to_TimeDigit
  fullName: AngeliA.FrameworkUtil.Time01_to_TimeDigit
- uid: AngeliA.FrameworkUtil.TimeDigit_to_Time01*
  commentId: Overload:AngeliA.FrameworkUtil.TimeDigit_to_Time01
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_TimeDigit_to_Time01_System_Int32_System_Int32_System_Int32_
  name: TimeDigit_to_Time01
  nameWithType: FrameworkUtil.TimeDigit_to_Time01
  fullName: AngeliA.FrameworkUtil.TimeDigit_to_Time01
- uid: AngeliA.FrameworkUtil.PerformSpringBounce*
  commentId: Overload:AngeliA.FrameworkUtil.PerformSpringBounce
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_PerformSpringBounce_AngeliA_Entity_AngeliA_Direction4_System_Int32_System_Int32_
  name: PerformSpringBounce
  nameWithType: FrameworkUtil.PerformSpringBounce
  fullName: AngeliA.FrameworkUtil.PerformSpringBounce
- uid: AngeliA.Entity
  commentId: T:AngeliA.Entity
  parent: AngeliA
  href: AngeliA.Entity.html
  name: Entity
  nameWithType: Entity
  fullName: AngeliA.Entity
- uid: AngeliA.Rigidbody
  commentId: T:AngeliA.Rigidbody
  parent: AngeliA
  href: AngeliA.Rigidbody.html
  name: Rigidbody
  nameWithType: Rigidbody
  fullName: AngeliA.Rigidbody
- uid: AngeliA.FrameworkUtil.GiveBuffFromMap*
  commentId: Overload:AngeliA.FrameworkUtil.GiveBuffFromMap
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_GiveBuffFromMap_AngeliA_IWithCharacterBuff_System_Int32_System_Int32_System_Int32_System_Int32_
  name: GiveBuffFromMap
  nameWithType: FrameworkUtil.GiveBuffFromMap
  fullName: AngeliA.FrameworkUtil.GiveBuffFromMap
- uid: AngeliA.IWithCharacterBuff
  commentId: T:AngeliA.IWithCharacterBuff
  parent: AngeliA
  href: AngeliA.IWithCharacterBuff.html
  name: IWithCharacterBuff
  nameWithType: IWithCharacterBuff
  fullName: AngeliA.IWithCharacterBuff
- uid: AngeliA.FrameworkUtil.GetGameKeyLabel*
  commentId: Overload:AngeliA.FrameworkUtil.GetGameKeyLabel
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_GetGameKeyLabel_AngeliA_Gamekey_
  name: GetGameKeyLabel
  nameWithType: FrameworkUtil.GetGameKeyLabel
  fullName: AngeliA.FrameworkUtil.GetGameKeyLabel
- uid: AngeliA.Gamekey
  commentId: T:AngeliA.Gamekey
  parent: AngeliA
  href: AngeliA.Gamekey.html
  name: Gamekey
  nameWithType: Gamekey
  fullName: AngeliA.Gamekey
- uid: AngeliA.FrameworkUtil.GetFrameAmortizedValue*
  commentId: Overload:AngeliA.FrameworkUtil.GetFrameAmortizedValue
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_GetFrameAmortizedValue_System_Int32_System_Int32_
  name: GetFrameAmortizedValue
  nameWithType: FrameworkUtil.GetFrameAmortizedValue
  fullName: AngeliA.FrameworkUtil.GetFrameAmortizedValue
- uid: AngeliA.FrameworkUtil.SpawnItemFromMap*
  commentId: Overload:AngeliA.FrameworkUtil.SpawnItemFromMap
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_SpawnItemFromMap_AngeliA_IBlockSquad_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Boolean_
  name: SpawnItemFromMap
  nameWithType: FrameworkUtil.SpawnItemFromMap
  fullName: AngeliA.FrameworkUtil.SpawnItemFromMap
- uid: AngeliA.IBlockSquad
  commentId: T:AngeliA.IBlockSquad
  parent: AngeliA
  href: AngeliA.IBlockSquad.html
  name: IBlockSquad
  nameWithType: IBlockSquad
  fullName: AngeliA.IBlockSquad
- uid: AngeliA.FrameworkUtil.GetPlayerHoldingHandTool*
  commentId: Overload:AngeliA.FrameworkUtil.GetPlayerHoldingHandTool
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_GetPlayerHoldingHandTool
  name: GetPlayerHoldingHandTool
  nameWithType: FrameworkUtil.GetPlayerHoldingHandTool
  fullName: AngeliA.FrameworkUtil.GetPlayerHoldingHandTool
- uid: AngeliA.HandTool
  commentId: T:AngeliA.HandTool
  parent: AngeliA
  href: AngeliA.HandTool.html
  name: HandTool
  nameWithType: HandTool
  fullName: AngeliA.HandTool
- uid: AngeliA.FrameworkUtil.BroadcastBuff*
  commentId: Overload:AngeliA.FrameworkUtil.BroadcastBuff
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_BroadcastBuff_AngeliA_IRect_System_Int32_System_Int32_
  name: BroadcastBuff
  nameWithType: FrameworkUtil.BroadcastBuff
  fullName: AngeliA.FrameworkUtil.BroadcastBuff
- uid: AngeliA.IRect
  commentId: T:AngeliA.IRect
  parent: AngeliA
  href: AngeliA.IRect.html
  name: IRect
  nameWithType: IRect
  fullName: AngeliA.IRect
- uid: AngeliA.FrameworkUtil.RunBuiltInSpriteAnalysys*
  commentId: Overload:AngeliA.FrameworkUtil.RunBuiltInSpriteAnalysys
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_RunBuiltInSpriteAnalysys_System_Boolean_
  name: RunBuiltInSpriteAnalysys
  nameWithType: FrameworkUtil.RunBuiltInSpriteAnalysys
  fullName: AngeliA.FrameworkUtil.RunBuiltInSpriteAnalysys
- uid: AngeliA.FrameworkUtil.RunEmptyScriptFileAnalysis*
  commentId: Overload:AngeliA.FrameworkUtil.RunEmptyScriptFileAnalysis
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_RunEmptyScriptFileAnalysis_System_String_System_Boolean_
  name: RunEmptyScriptFileAnalysis
  nameWithType: FrameworkUtil.RunEmptyScriptFileAnalysis
  fullName: AngeliA.FrameworkUtil.RunEmptyScriptFileAnalysis
- uid: AngeliA.FrameworkUtil.RunAngeliaCodeAnalysis*
  commentId: Overload:AngeliA.FrameworkUtil.RunAngeliaCodeAnalysis
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_RunAngeliaCodeAnalysis_System_Boolean_System_Boolean_System_Boolean_
  name: RunAngeliaCodeAnalysis
  nameWithType: FrameworkUtil.RunAngeliaCodeAnalysis
  fullName: AngeliA.FrameworkUtil.RunAngeliaCodeAnalysis
- uid: AngeliA.FrameworkUtil.InvokeObjectBreak*
  commentId: Overload:AngeliA.FrameworkUtil.InvokeObjectBreak
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_InvokeObjectBreak_System_Int32_AngeliA_IRect_
  name: InvokeObjectBreak
  nameWithType: FrameworkUtil.InvokeObjectBreak
  fullName: AngeliA.FrameworkUtil.InvokeObjectBreak
- uid: AngeliA.FrameworkUtil.InvokeObjectFreeFall*
  commentId: Overload:AngeliA.FrameworkUtil.InvokeObjectFreeFall
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_InvokeObjectFreeFall_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Boolean_
  name: InvokeObjectFreeFall
  nameWithType: FrameworkUtil.InvokeObjectFreeFall
  fullName: AngeliA.FrameworkUtil.InvokeObjectFreeFall
- uid: AngeliA.FrameworkUtil.InvokeBlockPicked*
  commentId: Overload:AngeliA.FrameworkUtil.InvokeBlockPicked
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_InvokeBlockPicked_System_Int32_AngeliA_IRect_
  name: InvokeBlockPicked
  nameWithType: FrameworkUtil.InvokeBlockPicked
  fullName: AngeliA.FrameworkUtil.InvokeBlockPicked
- uid: AngeliA.FrameworkUtil.InvokeFallIntoWater*
  commentId: Overload:AngeliA.FrameworkUtil.InvokeFallIntoWater
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_InvokeFallIntoWater_AngeliA_Rigidbody_AngeliA_Entity_
  name: InvokeFallIntoWater
  nameWithType: FrameworkUtil.InvokeFallIntoWater
  fullName: AngeliA.FrameworkUtil.InvokeFallIntoWater
- uid: AngeliA.FrameworkUtil.InvokeCameOutOfWater*
  commentId: Overload:AngeliA.FrameworkUtil.InvokeCameOutOfWater
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_InvokeCameOutOfWater_AngeliA_Rigidbody_AngeliA_Entity_
  name: InvokeCameOutOfWater
  nameWithType: FrameworkUtil.InvokeCameOutOfWater
  fullName: AngeliA.FrameworkUtil.InvokeCameOutOfWater
- uid: AngeliA.FrameworkUtil.InvokeErrorHint*
  commentId: Overload:AngeliA.FrameworkUtil.InvokeErrorHint
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_InvokeErrorHint_System_Int32_System_Int32_System_Int32_
  name: InvokeErrorHint
  nameWithType: FrameworkUtil.InvokeErrorHint
  fullName: AngeliA.FrameworkUtil.InvokeErrorHint
- uid: AngeliA.FrameworkUtil.InvokeItemCollected*
  commentId: Overload:AngeliA.FrameworkUtil.InvokeItemCollected
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_InvokeItemCollected_System_Int32_System_Int32_System_Int32_System_Int32_
  name: InvokeItemCollected
  nameWithType: FrameworkUtil.InvokeItemCollected
  fullName: AngeliA.FrameworkUtil.InvokeItemCollected
- uid: AngeliA.FrameworkUtil.InvokeItemLost*
  commentId: Overload:AngeliA.FrameworkUtil.InvokeItemLost
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_InvokeItemLost_AngeliA_Character_System_Int32_
  name: InvokeItemLost
  nameWithType: FrameworkUtil.InvokeItemLost
  fullName: AngeliA.FrameworkUtil.InvokeItemLost
- uid: AngeliA.Character
  commentId: T:AngeliA.Character
  parent: AngeliA
  href: AngeliA.Character.html
  name: Character
  nameWithType: Character
  fullName: AngeliA.Character
- uid: AngeliA.FrameworkUtil.InvokeItemDamage*
  commentId: Overload:AngeliA.FrameworkUtil.InvokeItemDamage
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_InvokeItemDamage_AngeliA_Character_System_Int32_System_Int32_
  name: InvokeItemDamage
  nameWithType: FrameworkUtil.InvokeItemDamage
  fullName: AngeliA.FrameworkUtil.InvokeItemDamage
- uid: AngeliA.FrameworkUtil.InvokeItemUnlocked*
  commentId: Overload:AngeliA.FrameworkUtil.InvokeItemUnlocked
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_InvokeItemUnlocked_System_Int32_
  name: InvokeItemUnlocked
  nameWithType: FrameworkUtil.InvokeItemUnlocked
  fullName: AngeliA.FrameworkUtil.InvokeItemUnlocked
- uid: AngeliA.FrameworkUtil.InvokeCheatPerformed*
  commentId: Overload:AngeliA.FrameworkUtil.InvokeCheatPerformed
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_InvokeCheatPerformed_System_String_
  name: InvokeCheatPerformed
  nameWithType: FrameworkUtil.InvokeCheatPerformed
  fullName: AngeliA.FrameworkUtil.InvokeCheatPerformed
- uid: AngeliA.FrameworkUtil.InvokeOnFootStepped*
  commentId: Overload:AngeliA.FrameworkUtil.InvokeOnFootStepped
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_InvokeOnFootStepped_AngeliA_Entity_
  name: InvokeOnFootStepped
  nameWithType: FrameworkUtil.InvokeOnFootStepped
  fullName: AngeliA.FrameworkUtil.InvokeOnFootStepped
- uid: AngeliA.FrameworkUtil.InvokeOnCharacterSleeping*
  commentId: Overload:AngeliA.FrameworkUtil.InvokeOnCharacterSleeping
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_InvokeOnCharacterSleeping_AngeliA_Entity_
  name: InvokeOnCharacterSleeping
  nameWithType: FrameworkUtil.InvokeOnCharacterSleeping
  fullName: AngeliA.FrameworkUtil.InvokeOnCharacterSleeping
- uid: AngeliA.FrameworkUtil.InvokeOnCharacterJump*
  commentId: Overload:AngeliA.FrameworkUtil.InvokeOnCharacterJump
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_InvokeOnCharacterJump_AngeliA_Entity_
  name: InvokeOnCharacterJump
  nameWithType: FrameworkUtil.InvokeOnCharacterJump
  fullName: AngeliA.FrameworkUtil.InvokeOnCharacterJump
- uid: AngeliA.FrameworkUtil.InvokeOnCharacterPound*
  commentId: Overload:AngeliA.FrameworkUtil.InvokeOnCharacterPound
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_InvokeOnCharacterPound_AngeliA_Entity_
  name: InvokeOnCharacterPound
  nameWithType: FrameworkUtil.InvokeOnCharacterPound
  fullName: AngeliA.FrameworkUtil.InvokeOnCharacterPound
- uid: AngeliA.FrameworkUtil.InvokeOnCharacterFly*
  commentId: Overload:AngeliA.FrameworkUtil.InvokeOnCharacterFly
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_InvokeOnCharacterFly_AngeliA_Entity_
  name: InvokeOnCharacterFly
  nameWithType: FrameworkUtil.InvokeOnCharacterFly
  fullName: AngeliA.FrameworkUtil.InvokeOnCharacterFly
- uid: AngeliA.FrameworkUtil.InvokeOnCharacterSlideStepped*
  commentId: Overload:AngeliA.FrameworkUtil.InvokeOnCharacterSlideStepped
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_InvokeOnCharacterSlideStepped_AngeliA_Entity_
  name: InvokeOnCharacterSlideStepped
  nameWithType: FrameworkUtil.InvokeOnCharacterSlideStepped
  fullName: AngeliA.FrameworkUtil.InvokeOnCharacterSlideStepped
- uid: AngeliA.FrameworkUtil.InvokeOnCharacterPassOut*
  commentId: Overload:AngeliA.FrameworkUtil.InvokeOnCharacterPassOut
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_InvokeOnCharacterPassOut_AngeliA_Entity_
  name: InvokeOnCharacterPassOut
  nameWithType: FrameworkUtil.InvokeOnCharacterPassOut
  fullName: AngeliA.FrameworkUtil.InvokeOnCharacterPassOut
- uid: AngeliA.FrameworkUtil.InvokeOnCharacterTeleport*
  commentId: Overload:AngeliA.FrameworkUtil.InvokeOnCharacterTeleport
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_InvokeOnCharacterTeleport_AngeliA_Entity_
  name: InvokeOnCharacterTeleport
  nameWithType: FrameworkUtil.InvokeOnCharacterTeleport
  fullName: AngeliA.FrameworkUtil.InvokeOnCharacterTeleport
- uid: AngeliA.FrameworkUtil.InvokeOnCharacterCrash*
  commentId: Overload:AngeliA.FrameworkUtil.InvokeOnCharacterCrash
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_InvokeOnCharacterCrash_AngeliA_Entity_
  name: InvokeOnCharacterCrash
  nameWithType: FrameworkUtil.InvokeOnCharacterCrash
  fullName: AngeliA.FrameworkUtil.InvokeOnCharacterCrash
- uid: AngeliA.FrameworkUtil.RedirectForRule*
  commentId: Overload:AngeliA.FrameworkUtil.RedirectForRule
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_RedirectForRule_AngeliA_IBlockSquad_AngeliA_IRect_System_Int32_
  name: RedirectForRule
  nameWithType: FrameworkUtil.RedirectForRule
  fullName: AngeliA.FrameworkUtil.RedirectForRule
- uid: AngeliA.BlockType
  commentId: T:AngeliA.BlockType
  parent: AngeliA
  href: AngeliA.BlockType.html
  name: BlockType
  nameWithType: BlockType
  fullName: AngeliA.BlockType
- uid: AngeliA.FrameworkUtil.GetRuleIndex*
  commentId: Overload:AngeliA.FrameworkUtil.GetRuleIndex
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_GetRuleIndex_System_Collections_Generic_IList_AngeliA_AngeSprite__System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_
  name: GetRuleIndex
  nameWithType: FrameworkUtil.GetRuleIndex
  fullName: AngeliA.FrameworkUtil.GetRuleIndex
- uid: System.Collections.Generic.IList{AngeliA.AngeSprite}
  commentId: T:System.Collections.Generic.IList{AngeliA.AngeSprite}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<AngeSprite>
  nameWithType: IList<AngeSprite>
  fullName: System.Collections.Generic.IList<AngeliA.AngeSprite>
  nameWithType.vb: IList(Of AngeSprite)
  fullName.vb: System.Collections.Generic.IList(Of AngeliA.AngeSprite)
  name.vb: IList(Of AngeSprite)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: AngeliA.AngeSprite
    name: AngeSprite
    href: AngeliA.AngeSprite.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: AngeliA.AngeSprite
    name: AngeSprite
    href: AngeliA.AngeSprite.html
  - name: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: AngeliA.FrameworkUtil.DigitToBlockRule*
  commentId: Overload:AngeliA.FrameworkUtil.DigitToBlockRule
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_DigitToBlockRule_System_Int32_
  name: DigitToBlockRule
  nameWithType: FrameworkUtil.DigitToBlockRule
  fullName: AngeliA.FrameworkUtil.DigitToBlockRule
- uid: AngeliA.FrameworkUtil.DigitToRuleByte*
  commentId: Overload:AngeliA.FrameworkUtil.DigitToRuleByte
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_DigitToRuleByte_System_Int32_System_Byte___
  name: DigitToRuleByte
  nameWithType: FrameworkUtil.DigitToRuleByte
  fullName: AngeliA.FrameworkUtil.DigitToRuleByte
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: AngeliA.FrameworkUtil.BlockRuleToDigit*
  commentId: Overload:AngeliA.FrameworkUtil.BlockRuleToDigit
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_BlockRuleToDigit_AngeliA_BlockRule_
  name: BlockRuleToDigit
  nameWithType: FrameworkUtil.BlockRuleToDigit
  fullName: AngeliA.FrameworkUtil.BlockRuleToDigit
- uid: AngeliA.FrameworkUtil.RuleByteToDigit*
  commentId: Overload:AngeliA.FrameworkUtil.RuleByteToDigit
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_RuleByteToDigit_System_Byte___
  name: RuleByteToDigit
  nameWithType: FrameworkUtil.RuleByteToDigit
  fullName: AngeliA.FrameworkUtil.RuleByteToDigit
- uid: AngeliA.FrameworkUtil.BreakEntityBlock*
  commentId: Overload:AngeliA.FrameworkUtil.BreakEntityBlock
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_BreakEntityBlock_AngeliA_IBlockEntity_
  name: BreakEntityBlock
  nameWithType: FrameworkUtil.BreakEntityBlock
  fullName: AngeliA.FrameworkUtil.BreakEntityBlock
- uid: AngeliA.IBlockEntity
  commentId: T:AngeliA.IBlockEntity
  parent: AngeliA
  href: AngeliA.IBlockEntity.html
  name: IBlockEntity
  nameWithType: IBlockEntity
  fullName: AngeliA.IBlockEntity
- uid: AngeliA.FrameworkUtil.PickBlockAt*
  commentId: Overload:AngeliA.FrameworkUtil.PickBlockAt
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_PickBlockAt_System_Int32_System_Int32_System_Boolean_System_Boolean_System_Boolean_System_Boolean_System_Boolean_
  name: PickBlockAt
  nameWithType: FrameworkUtil.PickBlockAt
  fullName: AngeliA.FrameworkUtil.PickBlockAt
- uid: AngeliA.FrameworkUtil.HasPickableBlockAt*
  commentId: Overload:AngeliA.FrameworkUtil.HasPickableBlockAt
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_HasPickableBlockAt_System_Int32_System_Int32_System_Boolean_System_Boolean_System_Boolean_
  name: HasPickableBlockAt
  nameWithType: FrameworkUtil.HasPickableBlockAt
  fullName: AngeliA.FrameworkUtil.HasPickableBlockAt
- uid: AngeliA.FrameworkUtil.PutBlockTo*
  commentId: Overload:AngeliA.FrameworkUtil.PutBlockTo
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_PutBlockTo_System_Int32_AngeliA_BlockType_System_Int32_System_Int32_
  name: PutBlockTo
  nameWithType: FrameworkUtil.PutBlockTo
  fullName: AngeliA.FrameworkUtil.PutBlockTo
- uid: AngeliA.FrameworkUtil.TryGetEmptyPlaceNearbyForEntity*
  commentId: Overload:AngeliA.FrameworkUtil.TryGetEmptyPlaceNearbyForEntity
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_TryGetEmptyPlaceNearbyForEntity_System_Int32_System_Int32_System_Int32_System_Int32__System_Int32__System_Int32_System_Boolean_
  name: TryGetEmptyPlaceNearbyForEntity
  nameWithType: FrameworkUtil.TryGetEmptyPlaceNearbyForEntity
  fullName: AngeliA.FrameworkUtil.TryGetEmptyPlaceNearbyForEntity
- uid: AngeliA.FrameworkUtil.RemoveFromWorldMemory*
  commentId: Overload:AngeliA.FrameworkUtil.RemoveFromWorldMemory
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_RemoveFromWorldMemory_AngeliA_Entity_
  name: RemoveFromWorldMemory
  nameWithType: FrameworkUtil.RemoveFromWorldMemory
  fullName: AngeliA.FrameworkUtil.RemoveFromWorldMemory
- uid: AngeliA.FrameworkUtil.SearchlightBlockCheck*
  commentId: Overload:AngeliA.FrameworkUtil.SearchlightBlockCheck
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_SearchlightBlockCheck_AngeliA_IBlockSquad_AngeliA_Int3_System_Nullable_AngeliA_Direction8__System_Int32_System_Boolean_
  name: SearchlightBlockCheck
  nameWithType: FrameworkUtil.SearchlightBlockCheck
  fullName: AngeliA.FrameworkUtil.SearchlightBlockCheck
- uid: AngeliA.Int3
  commentId: T:AngeliA.Int3
  parent: AngeliA
  href: AngeliA.Int3.html
  name: Int3
  nameWithType: Int3
  fullName: AngeliA.Int3
- uid: System.Nullable{AngeliA.Direction8}
  commentId: T:System.Nullable{AngeliA.Direction8}
  parent: System
  definition: System.Nullable`1
  href: AngeliA.Direction8.html
  name: Direction8?
  nameWithType: Direction8?
  fullName: AngeliA.Direction8?
  spec.csharp:
  - uid: AngeliA.Direction8
    name: Direction8
    href: AngeliA.Direction8.html
  - name: '?'
  spec.vb:
  - uid: AngeliA.Direction8
    name: Direction8
    href: AngeliA.Direction8.html
  - name: '?'
- uid: AngeliA.FrameworkUtil.GetEntityPose*
  commentId: Overload:AngeliA.FrameworkUtil.GetEntityPose
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_GetEntityPose_System_Int32_System_Int32_System_Int32_System_Boolean_
  name: GetEntityPose
  nameWithType: FrameworkUtil.GetEntityPose
  fullName: AngeliA.FrameworkUtil.GetEntityPose
- uid: AngeliA.FittingPose
  commentId: T:AngeliA.FittingPose
  parent: AngeliA
  href: AngeliA.FittingPose.html
  name: FittingPose
  nameWithType: FittingPose
  fullName: AngeliA.FittingPose
- uid: AngeliA.FrameworkUtil.ForAllWorldInRange*
  commentId: Overload:AngeliA.FrameworkUtil.ForAllWorldInRange
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_ForAllWorldInRange_AngeliA_IRect_System_Int32_System_Int32__
  name: ForAllWorldInRange
  nameWithType: FrameworkUtil.ForAllWorldInRange
  fullName: AngeliA.FrameworkUtil.ForAllWorldInRange
- uid: AngeliA.Int3[]
  isExternal: true
  href: AngeliA.Int3.html
  name: Int3[]
  nameWithType: Int3[]
  fullName: AngeliA.Int3[]
  nameWithType.vb: Int3()
  fullName.vb: AngeliA.Int3()
  name.vb: Int3()
  spec.csharp:
  - uid: AngeliA.Int3
    name: Int3
    href: AngeliA.Int3.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: AngeliA.Int3
    name: Int3
    href: AngeliA.Int3.html
  - name: (
  - name: )
- uid: AngeliA.FrameworkUtil.ForAllExistsWorldInRange*
  commentId: Overload:AngeliA.FrameworkUtil.ForAllExistsWorldInRange
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_ForAllExistsWorldInRange_AngeliA_IBlockSquad_AngeliA_IRect_System_Int32_System_Int32__
  name: ForAllExistsWorldInRange
  nameWithType: FrameworkUtil.ForAllExistsWorldInRange
  fullName: AngeliA.FrameworkUtil.ForAllExistsWorldInRange
- uid: AngeliA.FrameworkUtil.PaintBlock*
  commentId: Overload:AngeliA.FrameworkUtil.PaintBlock
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_PaintBlock_System_Int32_System_Int32_System_Int32_System_Boolean_
  name: PaintBlock
  nameWithType: FrameworkUtil.PaintBlock
  fullName: AngeliA.FrameworkUtil.PaintBlock
- uid: AngeliA.FrameworkUtil.TryEjectOutsideGround*
  commentId: Overload:AngeliA.FrameworkUtil.TryEjectOutsideGround
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_TryEjectOutsideGround_AngeliA_Rigidbody_System_Int32_System_Int32_System_Int32_
  name: TryEjectOutsideGround
  nameWithType: FrameworkUtil.TryEjectOutsideGround
  fullName: AngeliA.FrameworkUtil.TryEjectOutsideGround
- uid: AngeliA.FrameworkUtil.DeleteAllEmptyMaps*
  commentId: Overload:AngeliA.FrameworkUtil.DeleteAllEmptyMaps
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_DeleteAllEmptyMaps_System_String_
  name: DeleteAllEmptyMaps
  nameWithType: FrameworkUtil.DeleteAllEmptyMaps
  fullName: AngeliA.FrameworkUtil.DeleteAllEmptyMaps
- uid: AngeliA.FrameworkUtil.SystemNumberID_to_Number*
  commentId: Overload:AngeliA.FrameworkUtil.SystemNumberID_to_Number
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_SystemNumberID_to_Number_System_Int32_
  name: SystemNumberID_to_Number
  nameWithType: FrameworkUtil.SystemNumberID_to_Number
  fullName: AngeliA.FrameworkUtil.SystemNumberID_to_Number
- uid: AngeliA.FrameworkUtil.Number_to_SystemNumberID*
  commentId: Overload:AngeliA.FrameworkUtil.Number_to_SystemNumberID
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_Number_to_SystemNumberID_System_Int32_
  name: Number_to_SystemNumberID
  nameWithType: FrameworkUtil.Number_to_SystemNumberID
  fullName: AngeliA.FrameworkUtil.Number_to_SystemNumberID
- uid: AngeliA.FrameworkUtil.ReadSystemNumber*
  commentId: Overload:AngeliA.FrameworkUtil.ReadSystemNumber
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_ReadSystemNumber_AngeliA_IBlockSquad_System_Int32_System_Int32_System_Int32_System_Int32__
  name: ReadSystemNumber
  nameWithType: FrameworkUtil.ReadSystemNumber
  fullName: AngeliA.FrameworkUtil.ReadSystemNumber
- uid: AngeliA.FrameworkUtil.HasSystemNumber*
  commentId: Overload:AngeliA.FrameworkUtil.HasSystemNumber
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_HasSystemNumber_AngeliA_IBlockSquad_System_Int32_System_Int32_System_Int32_
  name: HasSystemNumber
  nameWithType: FrameworkUtil.HasSystemNumber
  fullName: AngeliA.FrameworkUtil.HasSystemNumber
- uid: AngeliA.FrameworkUtil.TryGetSingleSystemNumber*
  commentId: Overload:AngeliA.FrameworkUtil.TryGetSingleSystemNumber
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_TryGetSingleSystemNumber_AngeliA_IBlockSquad_System_Int32_System_Int32_System_Int32_System_Int32__
  name: TryGetSingleSystemNumber
  nameWithType: FrameworkUtil.TryGetSingleSystemNumber
  fullName: AngeliA.FrameworkUtil.TryGetSingleSystemNumber
- uid: AngeliA.FrameworkUtil.GetAimingBuilderPositionFromMouse*
  commentId: Overload:AngeliA.FrameworkUtil.GetAimingBuilderPositionFromMouse
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_GetAimingBuilderPositionFromMouse_AngeliA_Character_AngeliA_BlockType_System_Int32__System_Int32__System_Boolean__
  name: GetAimingBuilderPositionFromMouse
  nameWithType: FrameworkUtil.GetAimingBuilderPositionFromMouse
  fullName: AngeliA.FrameworkUtil.GetAimingBuilderPositionFromMouse
- uid: AngeliA.FrameworkUtil.GetAimingBuilderPositionFromKey*
  commentId: Overload:AngeliA.FrameworkUtil.GetAimingBuilderPositionFromKey
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_GetAimingBuilderPositionFromKey_AngeliA_Character_AngeliA_BlockType_System_Int32__System_Int32__System_Boolean__System_Boolean_
  name: GetAimingBuilderPositionFromKey
  nameWithType: FrameworkUtil.GetAimingBuilderPositionFromKey
  fullName: AngeliA.FrameworkUtil.GetAimingBuilderPositionFromKey
- uid: AngeliA.FrameworkUtil.GetAimingPickerPositionFromMouse*
  commentId: Overload:AngeliA.FrameworkUtil.GetAimingPickerPositionFromMouse
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_GetAimingPickerPositionFromMouse_AngeliA_Character_System_Int32_System_Int32__System_Int32__System_Boolean__System_Boolean_System_Boolean_System_Boolean_
  name: GetAimingPickerPositionFromMouse
  nameWithType: FrameworkUtil.GetAimingPickerPositionFromMouse
  fullName: AngeliA.FrameworkUtil.GetAimingPickerPositionFromMouse
- uid: AngeliA.FrameworkUtil.GetAimingPickerPositionFromKey*
  commentId: Overload:AngeliA.FrameworkUtil.GetAimingPickerPositionFromKey
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_GetAimingPickerPositionFromKey_AngeliA_Character_System_Int32__System_Int32__System_Boolean_System_Boolean_System_Boolean_
  name: GetAimingPickerPositionFromKey
  nameWithType: FrameworkUtil.GetAimingPickerPositionFromKey
  fullName: AngeliA.FrameworkUtil.GetAimingPickerPositionFromKey
- uid: AngeliA.FrameworkUtil.ClampCells*
  commentId: Overload:AngeliA.FrameworkUtil.ClampCells
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_ClampCells_AngeliA_Cell___AngeliA_IRect_System_Int32_System_Int32_
  name: ClampCells
  nameWithType: FrameworkUtil.ClampCells
  fullName: AngeliA.FrameworkUtil.ClampCells
- uid: AngeliA.Cell[]
  isExternal: true
  href: AngeliA.Cell.html
  name: Cell[]
  nameWithType: Cell[]
  fullName: AngeliA.Cell[]
  nameWithType.vb: Cell()
  fullName.vb: AngeliA.Cell()
  name.vb: Cell()
  spec.csharp:
  - uid: AngeliA.Cell
    name: Cell
    href: AngeliA.Cell.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: AngeliA.Cell
    name: Cell
    href: AngeliA.Cell.html
  - name: (
  - name: )
- uid: System.Span{AngeliA.Cell}
  commentId: T:System.Span{AngeliA.Cell}
  parent: System
  definition: System.Span`1
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<Cell>
  nameWithType: Span<Cell>
  fullName: System.Span<AngeliA.Cell>
  nameWithType.vb: Span(Of Cell)
  fullName.vb: System.Span(Of AngeliA.Cell)
  name.vb: Span(Of Cell)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: AngeliA.Cell
    name: Cell
    href: AngeliA.Cell.html
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: AngeliA.Cell
    name: Cell
    href: AngeliA.Cell.html
  - name: )
- uid: System.Span`1
  commentId: T:System.Span`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<T>
  nameWithType: Span<T>
  fullName: System.Span<T>
  nameWithType.vb: Span(Of T)
  fullName.vb: System.Span(Of T)
  name.vb: Span(Of T)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: AngeliA.FrameworkUtil.GetSummaryTint*
  commentId: Overload:AngeliA.FrameworkUtil.GetSummaryTint
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_GetSummaryTint_AngeliA_Color32___
  name: GetSummaryTint
  nameWithType: FrameworkUtil.GetSummaryTint
  fullName: AngeliA.FrameworkUtil.GetSummaryTint
- uid: AngeliA.Color32[]
  isExternal: true
  href: AngeliA.Color32.html
  name: Color32[]
  nameWithType: Color32[]
  fullName: AngeliA.Color32[]
  nameWithType.vb: Color32()
  fullName.vb: AngeliA.Color32()
  name.vb: Color32()
  spec.csharp:
  - uid: AngeliA.Color32
    name: Color32
    href: AngeliA.Color32.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: AngeliA.Color32
    name: Color32
    href: AngeliA.Color32.html
  - name: (
  - name: )
- uid: AngeliA.Color32
  commentId: T:AngeliA.Color32
  parent: AngeliA
  href: AngeliA.Color32.html
  name: Color32
  nameWithType: Color32
  fullName: AngeliA.Color32
- uid: AngeliA.FrameworkUtil.DrawEnvironmentShadow*
  commentId: Overload:AngeliA.FrameworkUtil.DrawEnvironmentShadow
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_DrawEnvironmentShadow_AngeliA_Cell_System_Int32_System_Int32_System_Byte_System_Int32_
  name: DrawEnvironmentShadow
  nameWithType: FrameworkUtil.DrawEnvironmentShadow
  fullName: AngeliA.FrameworkUtil.DrawEnvironmentShadow
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte
  nameWithType: byte
  fullName: byte
  nameWithType.vb: Byte
  fullName.vb: Byte
  name.vb: Byte
- uid: AngeliA.FrameworkUtil.DrawPoseCharacterAsUI*
  commentId: Overload:AngeliA.FrameworkUtil.DrawPoseCharacterAsUI
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_DrawPoseCharacterAsUI_AngeliA_IRect_AngeliA_PoseCharacterRenderer_System_Int32_
  name: DrawPoseCharacterAsUI
  nameWithType: FrameworkUtil.DrawPoseCharacterAsUI
  fullName: AngeliA.FrameworkUtil.DrawPoseCharacterAsUI
- uid: AngeliA.FrameworkUtil.RemapCells*
  commentId: Overload:AngeliA.FrameworkUtil.RemapCells
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_RemapCells_AngeliA_Cell___System_Int32_System_Int32_AngeliA_IRect_AngeliA_IRect_System_Int32_System_Int32_System_Boolean_
  name: RemapCells
  nameWithType: FrameworkUtil.RemapCells
  fullName: AngeliA.FrameworkUtil.RemapCells
- uid: AngeliA.FrameworkUtil.DrawItemUsageBar*
  commentId: Overload:AngeliA.FrameworkUtil.DrawItemUsageBar
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_DrawItemUsageBar_AngeliA_IRect_System_Int32_System_Int32_
  name: DrawItemUsageBar
  nameWithType: FrameworkUtil.DrawItemUsageBar
  fullName: AngeliA.FrameworkUtil.DrawItemUsageBar
- uid: AngeliA.FrameworkUtil.DrawAllCollidersAsGizmos*
  commentId: Overload:AngeliA.FrameworkUtil.DrawAllCollidersAsGizmos
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_DrawAllCollidersAsGizmos_System_Int32_AngeliA_Int2_System_Single_System_Boolean_System_Boolean_System_Boolean_System_Boolean_AngeliA_Color32___
  name: DrawAllCollidersAsGizmos
  nameWithType: FrameworkUtil.DrawAllCollidersAsGizmos
  fullName: AngeliA.FrameworkUtil.DrawAllCollidersAsGizmos
- uid: AngeliA.FrameworkUtil.GetItemTypeIcon*
  commentId: Overload:AngeliA.FrameworkUtil.GetItemTypeIcon
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_GetItemTypeIcon_System_Int32_
  name: GetItemTypeIcon
  nameWithType: FrameworkUtil.GetItemTypeIcon
  fullName: AngeliA.FrameworkUtil.GetItemTypeIcon
- uid: AngeliA.FrameworkUtil.DrawClockHands*
  commentId: Overload:AngeliA.FrameworkUtil.DrawClockHands
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_DrawClockHands_AngeliA_IRect_System_Int32_System_Int32_System_Int32_AngeliA_Color32_System_Int32_
  name: DrawClockHands
  nameWithType: FrameworkUtil.DrawClockHands
  fullName: AngeliA.FrameworkUtil.DrawClockHands
- uid: AngeliA.FrameworkUtil.DrawClockPendulum*
  commentId: Overload:AngeliA.FrameworkUtil.DrawClockPendulum
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_DrawClockPendulum_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_
  name: DrawClockPendulum
  nameWithType: FrameworkUtil.DrawClockPendulum
  fullName: AngeliA.FrameworkUtil.DrawClockPendulum
- uid: AngeliA.FrameworkUtil.SpiralSpinningCellEffect*
  commentId: Overload:AngeliA.FrameworkUtil.SpiralSpinningCellEffect
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_SpiralSpinningCellEffect_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Boolean_
  name: SpiralSpinningCellEffect
  nameWithType: FrameworkUtil.SpiralSpinningCellEffect
  fullName: AngeliA.FrameworkUtil.SpiralSpinningCellEffect
- uid: AngeliA.FrameworkUtil.DrawLoopingActivatedHighlight*
  commentId: Overload:AngeliA.FrameworkUtil.DrawLoopingActivatedHighlight
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_DrawLoopingActivatedHighlight_AngeliA_IRect_AngeliA_Color32_System_Int32_System_Int32_
  name: DrawLoopingActivatedHighlight
  nameWithType: FrameworkUtil.DrawLoopingActivatedHighlight
  fullName: AngeliA.FrameworkUtil.DrawLoopingActivatedHighlight
- uid: AngeliA.FrameworkUtil.DrawLoopingTriangleMark*
  commentId: Overload:AngeliA.FrameworkUtil.DrawLoopingTriangleMark
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_DrawLoopingTriangleMark_AngeliA_IRect_System_Int32_AngeliA_Color32_AngeliA_Direction4_System_Int32_System_Int32_System_Int32_System_Int32_
  name: DrawLoopingTriangleMark
  nameWithType: FrameworkUtil.DrawLoopingTriangleMark
  fullName: AngeliA.FrameworkUtil.DrawLoopingTriangleMark
- uid: AngeliA.FrameworkUtil.DrawOnFireEffect*
  commentId: Overload:AngeliA.FrameworkUtil.DrawOnFireEffect
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_DrawOnFireEffect_System_Int32_AngeliA_IRect_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_
  name: DrawOnFireEffect
  nameWithType: FrameworkUtil.DrawOnFireEffect
  fullName: AngeliA.FrameworkUtil.DrawOnFireEffect
- uid: AngeliA.FrameworkUtil.DrawFrozenEffect*
  commentId: Overload:AngeliA.FrameworkUtil.DrawFrozenEffect
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_DrawFrozenEffect_AngeliA_IRect_System_Byte_System_Int32_AngeliA_Int2_System_Int32_System_Int32_System_Int32_
  name: DrawFrozenEffect
  nameWithType: FrameworkUtil.DrawFrozenEffect
  fullName: AngeliA.FrameworkUtil.DrawFrozenEffect
- uid: AngeliA.FrameworkUtil.DrawLightenEffect*
  commentId: Overload:AngeliA.FrameworkUtil.DrawLightenEffect
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_DrawLightenEffect_System_Int32_AngeliA_IRect_System_Int32_System_Int32_
  name: DrawLightenEffect
  nameWithType: FrameworkUtil.DrawLightenEffect
  fullName: AngeliA.FrameworkUtil.DrawLightenEffect
- uid: AngeliA.FrameworkUtil.DrawPoisonEffect*
  commentId: Overload:AngeliA.FrameworkUtil.DrawPoisonEffect
  href: AngeliA.FrameworkUtil.html#AngeliA_FrameworkUtil_DrawPoisonEffect_System_Int32_AngeliA_IRect_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_
  name: DrawPoisonEffect
  nameWithType: FrameworkUtil.DrawPoisonEffect
  fullName: AngeliA.FrameworkUtil.DrawPoisonEffect
