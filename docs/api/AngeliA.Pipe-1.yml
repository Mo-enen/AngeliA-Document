### YamlMime:ManagedReference
items:
- uid: AngeliA.Pipe`1
  commentId: T:AngeliA.Pipe`1
  id: Pipe`1
  parent: AngeliA
  children:
  - AngeliA.Pipe`1.#ctor(System.Int32)
  - AngeliA.Pipe`1.Capacity
  - AngeliA.Pipe`1.Data
  - AngeliA.Pipe`1.IsFull
  - AngeliA.Pipe`1.Item(System.Int32)
  - AngeliA.Pipe`1.Length
  - AngeliA.Pipe`1.LinkToHead(`0)
  - AngeliA.Pipe`1.LinkToTail(`0)
  - AngeliA.Pipe`1.Reorganize
  - AngeliA.Pipe`1.Reset
  - AngeliA.Pipe`1.Sort(System.Collections.Generic.IComparer{`0})
  - AngeliA.Pipe`1.Start
  - AngeliA.Pipe`1.TryPeekHead(`0@)
  - AngeliA.Pipe`1.TryPeekTail(`0@)
  - AngeliA.Pipe`1.TryPopHead(`0@)
  - AngeliA.Pipe`1.TryPopTail(`0@)
  langs:
  - csharp
  - vb
  name: Pipe<T>
  nameWithType: Pipe<T>
  fullName: AngeliA.Pipe<T>
  type: Class
  source:
    remote:
      path: AngeliA Framework/src/Common/Pipe.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Pipe
    path: ../../AngeliA/AngeliA Framework/src/Common/Pipe.cs
    startLine: 7
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: A linked list that can add/remove from head/tail. No heap pressure.
  example: []
  syntax:
    content: public class Pipe<T>
    typeParameters:
    - id: T
    content.vb: Public Class Pipe(Of T)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.AngeliA.Extension.ForAllFields``1(System.Reflection.BindingFlags,System.Boolean)
  - System.Object.AngeliA.Extension.ForAllProperties``1
  nameWithType.vb: Pipe(Of T)
  fullName.vb: AngeliA.Pipe(Of T)
  name.vb: Pipe(Of T)
- uid: AngeliA.Pipe`1.#ctor(System.Int32)
  commentId: M:AngeliA.Pipe`1.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: AngeliA.Pipe`1
  langs:
  - csharp
  - vb
  name: Pipe(int)
  nameWithType: Pipe<T>.Pipe(int)
  fullName: AngeliA.Pipe<T>.Pipe(int)
  type: Constructor
  source:
    remote:
      path: AngeliA Framework/src/Common/Pipe.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: .ctor
    path: ../../AngeliA/AngeliA Framework/src/Common/Pipe.cs
    startLine: 7
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: A linked list that can add/remove from head/tail. No heap pressure.
  example: []
  syntax:
    content: public Pipe(int capacity = 1024)
    parameters:
    - id: capacity
      type: System.Int32
    content.vb: Public Sub New(capacity As Integer = 1024)
  overload: AngeliA.Pipe`1.#ctor*
  nameWithType.vb: Pipe(Of T).New(Integer)
  fullName.vb: AngeliA.Pipe(Of T).New(Integer)
  name.vb: New(Integer)
- uid: AngeliA.Pipe`1.Item(System.Int32)
  commentId: P:AngeliA.Pipe`1.Item(System.Int32)
  id: Item(System.Int32)
  parent: AngeliA.Pipe`1
  langs:
  - csharp
  - vb
  name: this[int]
  nameWithType: Pipe<T>.this[int]
  fullName: AngeliA.Pipe<T>.this[int]
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Common/Pipe.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: this[]
    path: ../../AngeliA/AngeliA Framework/src/Common/Pipe.cs
    startLine: 20
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get filled data at index
  example: []
  syntax:
    content: public T this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: Local index from "Start"
    return:
      type: '{T}'
    content.vb: Public Default Property this[](index As Integer) As T
  overload: AngeliA.Pipe`1.Item*
  nameWithType.vb: Pipe(Of T).this[](Integer)
  fullName.vb: AngeliA.Pipe(Of T).this[](Integer)
  name.vb: this[](Integer)
- uid: AngeliA.Pipe`1.Data
  commentId: P:AngeliA.Pipe`1.Data
  id: Data
  parent: AngeliA.Pipe`1
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: Pipe<T>.Data
  fullName: AngeliA.Pipe<T>.Data
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Common/Pipe.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Data
    path: ../../AngeliA/AngeliA Framework/src/Common/Pipe.cs
    startLine: 27
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Raw data of this pipe
  example: []
  syntax:
    content: public T[] Data { get; init; }
    parameters: []
    return:
      type: '{T}[]'
    content.vb: Public Property Data As T()
  overload: AngeliA.Pipe`1.Data*
  nameWithType.vb: Pipe(Of T).Data
  fullName.vb: AngeliA.Pipe(Of T).Data
- uid: AngeliA.Pipe`1.Capacity
  commentId: P:AngeliA.Pipe`1.Capacity
  id: Capacity
  parent: AngeliA.Pipe`1
  langs:
  - csharp
  - vb
  name: Capacity
  nameWithType: Pipe<T>.Capacity
  fullName: AngeliA.Pipe<T>.Capacity
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Common/Pipe.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Capacity
    path: ../../AngeliA/AngeliA Framework/src/Common/Pipe.cs
    startLine: 31
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Total length of the data
  example: []
  syntax:
    content: public int Capacity { get; init; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Capacity As Integer
  overload: AngeliA.Pipe`1.Capacity*
  nameWithType.vb: Pipe(Of T).Capacity
  fullName.vb: AngeliA.Pipe(Of T).Capacity
- uid: AngeliA.Pipe`1.Start
  commentId: P:AngeliA.Pipe`1.Start
  id: Start
  parent: AngeliA.Pipe`1
  langs:
  - csharp
  - vb
  name: Start
  nameWithType: Pipe<T>.Start
  fullName: AngeliA.Pipe<T>.Start
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Common/Pipe.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Start
    path: ../../AngeliA/AngeliA Framework/src/Common/Pipe.cs
    startLine: 35
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Head index of the filled data
  example: []
  syntax:
    content: public int Start { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Start As Integer
  overload: AngeliA.Pipe`1.Start*
  nameWithType.vb: Pipe(Of T).Start
  fullName.vb: AngeliA.Pipe(Of T).Start
- uid: AngeliA.Pipe`1.Length
  commentId: P:AngeliA.Pipe`1.Length
  id: Length
  parent: AngeliA.Pipe`1
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: Pipe<T>.Length
  fullName: AngeliA.Pipe<T>.Length
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Common/Pipe.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Length
    path: ../../AngeliA/AngeliA Framework/src/Common/Pipe.cs
    startLine: 39
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Length of the filled data
  example: []
  syntax:
    content: public int Length { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Length As Integer
  overload: AngeliA.Pipe`1.Length*
  nameWithType.vb: Pipe(Of T).Length
  fullName.vb: AngeliA.Pipe(Of T).Length
- uid: AngeliA.Pipe`1.IsFull
  commentId: P:AngeliA.Pipe`1.IsFull
  id: IsFull
  parent: AngeliA.Pipe`1
  langs:
  - csharp
  - vb
  name: IsFull
  nameWithType: Pipe<T>.IsFull
  fullName: AngeliA.Pipe<T>.IsFull
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Common/Pipe.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IsFull
    path: ../../AngeliA/AngeliA Framework/src/Common/Pipe.cs
    startLine: 43
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: True if the pipe reached max capacity
  example: []
  syntax:
    content: public bool IsFull { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsFull As Boolean
  overload: AngeliA.Pipe`1.IsFull*
  nameWithType.vb: Pipe(Of T).IsFull
  fullName.vb: AngeliA.Pipe(Of T).IsFull
- uid: AngeliA.Pipe`1.TryPeekHead(`0@)
  commentId: M:AngeliA.Pipe`1.TryPeekHead(`0@)
  id: TryPeekHead(`0@)
  parent: AngeliA.Pipe`1
  langs:
  - csharp
  - vb
  name: TryPeekHead(out T)
  nameWithType: Pipe<T>.TryPeekHead(out T)
  fullName: AngeliA.Pipe<T>.TryPeekHead(out T)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Pipe.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TryPeekHead
    path: ../../AngeliA/AngeliA Framework/src/Common/Pipe.cs
    startLine: 59
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get data at head without remove the data from pipe
  example: []
  syntax:
    content: public bool TryPeekHead(out T data)
    parameters:
    - id: data
      type: '{T}'
    return:
      type: System.Boolean
      description: True if length of pipe is not 0
    content.vb: Public Function TryPeekHead(data As T) As Boolean
  overload: AngeliA.Pipe`1.TryPeekHead*
  nameWithType.vb: Pipe(Of T).TryPeekHead(T)
  fullName.vb: AngeliA.Pipe(Of T).TryPeekHead(T)
  name.vb: TryPeekHead(T)
- uid: AngeliA.Pipe`1.TryPeekTail(`0@)
  commentId: M:AngeliA.Pipe`1.TryPeekTail(`0@)
  id: TryPeekTail(`0@)
  parent: AngeliA.Pipe`1
  langs:
  - csharp
  - vb
  name: TryPeekTail(out T)
  nameWithType: Pipe<T>.TryPeekTail(out T)
  fullName: AngeliA.Pipe<T>.TryPeekTail(out T)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Pipe.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TryPeekTail
    path: ../../AngeliA/AngeliA Framework/src/Common/Pipe.cs
    startLine: 71
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get data at tail without remove the data from pipe
  example: []
  syntax:
    content: public bool TryPeekTail(out T data)
    parameters:
    - id: data
      type: '{T}'
    return:
      type: System.Boolean
      description: True if length of pipe is not 0
    content.vb: Public Function TryPeekTail(data As T) As Boolean
  overload: AngeliA.Pipe`1.TryPeekTail*
  nameWithType.vb: Pipe(Of T).TryPeekTail(T)
  fullName.vb: AngeliA.Pipe(Of T).TryPeekTail(T)
  name.vb: TryPeekTail(T)
- uid: AngeliA.Pipe`1.LinkToHead(`0)
  commentId: M:AngeliA.Pipe`1.LinkToHead(`0)
  id: LinkToHead(`0)
  parent: AngeliA.Pipe`1
  langs:
  - csharp
  - vb
  name: LinkToHead(T)
  nameWithType: Pipe<T>.LinkToHead(T)
  fullName: AngeliA.Pipe<T>.LinkToHead(T)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Pipe.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: LinkToHead
    path: ../../AngeliA/AngeliA Framework/src/Common/Pipe.cs
    startLine: 84
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Add data before head
  example: []
  syntax:
    content: public bool LinkToHead(T data)
    parameters:
    - id: data
      type: '{T}'
    return:
      type: System.Boolean
      description: True if the data is added
    content.vb: Public Function LinkToHead(data As T) As Boolean
  overload: AngeliA.Pipe`1.LinkToHead*
  nameWithType.vb: Pipe(Of T).LinkToHead(T)
  fullName.vb: AngeliA.Pipe(Of T).LinkToHead(T)
- uid: AngeliA.Pipe`1.LinkToTail(`0)
  commentId: M:AngeliA.Pipe`1.LinkToTail(`0)
  id: LinkToTail(`0)
  parent: AngeliA.Pipe`1
  langs:
  - csharp
  - vb
  name: LinkToTail(T)
  nameWithType: Pipe<T>.LinkToTail(T)
  fullName: AngeliA.Pipe<T>.LinkToTail(T)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Pipe.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: LinkToTail
    path: ../../AngeliA/AngeliA Framework/src/Common/Pipe.cs
    startLine: 97
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Add data after tail
  example: []
  syntax:
    content: public bool LinkToTail(T data)
    parameters:
    - id: data
      type: '{T}'
    return:
      type: System.Boolean
      description: True if the data is added
    content.vb: Public Function LinkToTail(data As T) As Boolean
  overload: AngeliA.Pipe`1.LinkToTail*
  nameWithType.vb: Pipe(Of T).LinkToTail(T)
  fullName.vb: AngeliA.Pipe(Of T).LinkToTail(T)
- uid: AngeliA.Pipe`1.TryPopHead(`0@)
  commentId: M:AngeliA.Pipe`1.TryPopHead(`0@)
  id: TryPopHead(`0@)
  parent: AngeliA.Pipe`1
  langs:
  - csharp
  - vb
  name: TryPopHead(out T)
  nameWithType: Pipe<T>.TryPopHead(out T)
  fullName: AngeliA.Pipe<T>.TryPopHead(out T)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Pipe.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TryPopHead
    path: ../../AngeliA/AngeliA Framework/src/Common/Pipe.cs
    startLine: 111
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get and remove data at head
  example: []
  syntax:
    content: public bool TryPopHead(out T data)
    parameters:
    - id: data
      type: '{T}'
    return:
      type: System.Boolean
      description: True if pipe is not empty
    content.vb: Public Function TryPopHead(data As T) As Boolean
  overload: AngeliA.Pipe`1.TryPopHead*
  nameWithType.vb: Pipe(Of T).TryPopHead(T)
  fullName.vb: AngeliA.Pipe(Of T).TryPopHead(T)
  name.vb: TryPopHead(T)
- uid: AngeliA.Pipe`1.TryPopTail(`0@)
  commentId: M:AngeliA.Pipe`1.TryPopTail(`0@)
  id: TryPopTail(`0@)
  parent: AngeliA.Pipe`1
  langs:
  - csharp
  - vb
  name: TryPopTail(out T)
  nameWithType: Pipe<T>.TryPopTail(out T)
  fullName: AngeliA.Pipe<T>.TryPopTail(out T)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Pipe.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: TryPopTail
    path: ../../AngeliA/AngeliA Framework/src/Common/Pipe.cs
    startLine: 126
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get and remove data at tail
  example: []
  syntax:
    content: public bool TryPopTail(out T data)
    parameters:
    - id: data
      type: '{T}'
    return:
      type: System.Boolean
      description: True if pipe is not empty
    content.vb: Public Function TryPopTail(data As T) As Boolean
  overload: AngeliA.Pipe`1.TryPopTail*
  nameWithType.vb: Pipe(Of T).TryPopTail(T)
  fullName.vb: AngeliA.Pipe(Of T).TryPopTail(T)
  name.vb: TryPopTail(T)
- uid: AngeliA.Pipe`1.Reset
  commentId: M:AngeliA.Pipe`1.Reset
  id: Reset
  parent: AngeliA.Pipe`1
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: Pipe<T>.Reset()
  fullName: AngeliA.Pipe<T>.Reset()
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Pipe.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Reset
    path: ../../AngeliA/AngeliA Framework/src/Common/Pipe.cs
    startLine: 138
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset()
  overload: AngeliA.Pipe`1.Reset*
  nameWithType.vb: Pipe(Of T).Reset()
  fullName.vb: AngeliA.Pipe(Of T).Reset()
- uid: AngeliA.Pipe`1.Reorganize
  commentId: M:AngeliA.Pipe`1.Reorganize
  id: Reorganize
  parent: AngeliA.Pipe`1
  langs:
  - csharp
  - vb
  name: Reorganize()
  nameWithType: Pipe<T>.Reorganize()
  fullName: AngeliA.Pipe<T>.Reorganize()
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Pipe.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Reorganize
    path: ../../AngeliA/AngeliA Framework/src/Common/Pipe.cs
    startLine: 147
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Move data at head to the first of the internal array
  example: []
  syntax:
    content: public void Reorganize()
    content.vb: Public Sub Reorganize()
  overload: AngeliA.Pipe`1.Reorganize*
  nameWithType.vb: Pipe(Of T).Reorganize()
  fullName.vb: AngeliA.Pipe(Of T).Reorganize()
- uid: AngeliA.Pipe`1.Sort(System.Collections.Generic.IComparer{`0})
  commentId: M:AngeliA.Pipe`1.Sort(System.Collections.Generic.IComparer{`0})
  id: Sort(System.Collections.Generic.IComparer{`0})
  parent: AngeliA.Pipe`1
  langs:
  - csharp
  - vb
  name: Sort(IComparer<T>)
  nameWithType: Pipe<T>.Sort(IComparer<T>)
  fullName: AngeliA.Pipe<T>.Sort(System.Collections.Generic.IComparer<T>)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Common/Pipe.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Sort
    path: ../../AngeliA/AngeliA Framework/src/Common/Pipe.cs
    startLine: 159
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public void Sort(IComparer<T> comparer)
    parameters:
    - id: comparer
      type: System.Collections.Generic.IComparer{{T}}
    content.vb: Public Sub Sort(comparer As IComparer(Of T))
  overload: AngeliA.Pipe`1.Sort*
  nameWithType.vb: Pipe(Of T).Sort(IComparer(Of T))
  fullName.vb: AngeliA.Pipe(Of T).Sort(System.Collections.Generic.IComparer(Of T))
  name.vb: Sort(IComparer(Of T))
references:
- uid: AngeliA
  commentId: N:AngeliA
  href: AngeliA.html
  name: AngeliA
  nameWithType: AngeliA
  fullName: AngeliA
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.AngeliA.Extension.ForAllFields``1(System.Reflection.BindingFlags,System.Boolean)
  commentId: M:AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
  parent: AngeliA.Extension
  definition: AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
  href: AngeliA.Extension.html#AngeliA_Extension_ForAllFields__1_System_Object_System_Reflection_BindingFlags_System_Boolean_
  name: ForAllFields<T>(object, BindingFlags, bool)
  nameWithType: Extension.ForAllFields<T>(object, BindingFlags, bool)
  fullName: AngeliA.Extension.ForAllFields<T>(object, System.Reflection.BindingFlags, bool)
  nameWithType.vb: Extension.ForAllFields(Of T)(Object, BindingFlags, Boolean)
  fullName.vb: AngeliA.Extension.ForAllFields(Of T)(Object, System.Reflection.BindingFlags, Boolean)
  name.vb: ForAllFields(Of T)(Object, BindingFlags, Boolean)
  spec.csharp:
  - uid: AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
    name: ForAllFields
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllFields__1_System_Object_System_Reflection_BindingFlags_System_Boolean_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
    name: ForAllFields
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllFields__1_System_Object_System_Reflection_BindingFlags_System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Object.AngeliA.Extension.ForAllProperties``1
  commentId: M:AngeliA.Extension.ForAllProperties``1(System.Object)
  parent: AngeliA.Extension
  definition: AngeliA.Extension.ForAllProperties``1(System.Object)
  href: AngeliA.Extension.html#AngeliA_Extension_ForAllProperties__1_System_Object_
  name: ForAllProperties<T>(object)
  nameWithType: Extension.ForAllProperties<T>(object)
  fullName: AngeliA.Extension.ForAllProperties<T>(object)
  nameWithType.vb: Extension.ForAllProperties(Of T)(Object)
  fullName.vb: AngeliA.Extension.ForAllProperties(Of T)(Object)
  name.vb: ForAllProperties(Of T)(Object)
  spec.csharp:
  - uid: AngeliA.Extension.ForAllProperties``1(System.Object)
    name: ForAllProperties
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllProperties__1_System_Object_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: AngeliA.Extension.ForAllProperties``1(System.Object)
    name: ForAllProperties
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllProperties__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
  commentId: M:AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
  isExternal: true
  href: AngeliA.Extension.html#AngeliA_Extension_ForAllFields__1_System_Object_System_Reflection_BindingFlags_System_Boolean_
  name: ForAllFields<T>(object, BindingFlags, bool)
  nameWithType: Extension.ForAllFields<T>(object, BindingFlags, bool)
  fullName: AngeliA.Extension.ForAllFields<T>(object, System.Reflection.BindingFlags, bool)
  nameWithType.vb: Extension.ForAllFields(Of T)(Object, BindingFlags, Boolean)
  fullName.vb: AngeliA.Extension.ForAllFields(Of T)(Object, System.Reflection.BindingFlags, Boolean)
  name.vb: ForAllFields(Of T)(Object, BindingFlags, Boolean)
  spec.csharp:
  - uid: AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
    name: ForAllFields
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllFields__1_System_Object_System_Reflection_BindingFlags_System_Boolean_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
    name: ForAllFields
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllFields__1_System_Object_System_Reflection_BindingFlags_System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: AngeliA.Extension
  commentId: T:AngeliA.Extension
  parent: AngeliA
  href: AngeliA.Extension.html
  name: Extension
  nameWithType: Extension
  fullName: AngeliA.Extension
- uid: AngeliA.Extension.ForAllProperties``1(System.Object)
  commentId: M:AngeliA.Extension.ForAllProperties``1(System.Object)
  isExternal: true
  href: AngeliA.Extension.html#AngeliA_Extension_ForAllProperties__1_System_Object_
  name: ForAllProperties<T>(object)
  nameWithType: Extension.ForAllProperties<T>(object)
  fullName: AngeliA.Extension.ForAllProperties<T>(object)
  nameWithType.vb: Extension.ForAllProperties(Of T)(Object)
  fullName.vb: AngeliA.Extension.ForAllProperties(Of T)(Object)
  name.vb: ForAllProperties(Of T)(Object)
  spec.csharp:
  - uid: AngeliA.Extension.ForAllProperties``1(System.Object)
    name: ForAllProperties
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllProperties__1_System_Object_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: AngeliA.Extension.ForAllProperties``1(System.Object)
    name: ForAllProperties
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllProperties__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: AngeliA.Pipe`1.#ctor*
  commentId: Overload:AngeliA.Pipe`1.#ctor
  href: AngeliA.Pipe-1.html#AngeliA_Pipe_1__ctor_System_Int32_
  name: Pipe
  nameWithType: Pipe<T>.Pipe
  fullName: AngeliA.Pipe<T>.Pipe
  nameWithType.vb: Pipe(Of T).New
  fullName.vb: AngeliA.Pipe(Of T).New
  name.vb: New
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: AngeliA.Pipe`1.Item*
  commentId: Overload:AngeliA.Pipe`1.Item
  href: AngeliA.Pipe-1.html#AngeliA_Pipe_1_Item_System_Int32_
  name: this
  nameWithType: Pipe<T>.this
  fullName: AngeliA.Pipe<T>.this
  nameWithType.vb: Pipe(Of T).this[]
  fullName.vb: AngeliA.Pipe(Of T).this[]
  name.vb: this[]
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: AngeliA.Pipe`1.Data*
  commentId: Overload:AngeliA.Pipe`1.Data
  href: AngeliA.Pipe-1.html#AngeliA_Pipe_1_Data
  name: Data
  nameWithType: Pipe<T>.Data
  fullName: AngeliA.Pipe<T>.Data
  nameWithType.vb: Pipe(Of T).Data
  fullName.vb: AngeliA.Pipe(Of T).Data
- uid: '{T}[]'
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullName.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
  - name: '['
  - name: ']'
  spec.vb:
  - name: T
  - name: (
  - name: )
- uid: AngeliA.Pipe`1.Capacity*
  commentId: Overload:AngeliA.Pipe`1.Capacity
  href: AngeliA.Pipe-1.html#AngeliA_Pipe_1_Capacity
  name: Capacity
  nameWithType: Pipe<T>.Capacity
  fullName: AngeliA.Pipe<T>.Capacity
  nameWithType.vb: Pipe(Of T).Capacity
  fullName.vb: AngeliA.Pipe(Of T).Capacity
- uid: AngeliA.Pipe`1.Start*
  commentId: Overload:AngeliA.Pipe`1.Start
  href: AngeliA.Pipe-1.html#AngeliA_Pipe_1_Start
  name: Start
  nameWithType: Pipe<T>.Start
  fullName: AngeliA.Pipe<T>.Start
  nameWithType.vb: Pipe(Of T).Start
  fullName.vb: AngeliA.Pipe(Of T).Start
- uid: AngeliA.Pipe`1.Length*
  commentId: Overload:AngeliA.Pipe`1.Length
  href: AngeliA.Pipe-1.html#AngeliA_Pipe_1_Length
  name: Length
  nameWithType: Pipe<T>.Length
  fullName: AngeliA.Pipe<T>.Length
  nameWithType.vb: Pipe(Of T).Length
  fullName.vb: AngeliA.Pipe(Of T).Length
- uid: AngeliA.Pipe`1.IsFull*
  commentId: Overload:AngeliA.Pipe`1.IsFull
  href: AngeliA.Pipe-1.html#AngeliA_Pipe_1_IsFull
  name: IsFull
  nameWithType: Pipe<T>.IsFull
  fullName: AngeliA.Pipe<T>.IsFull
  nameWithType.vb: Pipe(Of T).IsFull
  fullName.vb: AngeliA.Pipe(Of T).IsFull
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: AngeliA.Pipe`1.TryPeekHead*
  commentId: Overload:AngeliA.Pipe`1.TryPeekHead
  href: AngeliA.Pipe-1.html#AngeliA_Pipe_1_TryPeekHead__0__
  name: TryPeekHead
  nameWithType: Pipe<T>.TryPeekHead
  fullName: AngeliA.Pipe<T>.TryPeekHead
  nameWithType.vb: Pipe(Of T).TryPeekHead
  fullName.vb: AngeliA.Pipe(Of T).TryPeekHead
- uid: AngeliA.Pipe`1.TryPeekTail*
  commentId: Overload:AngeliA.Pipe`1.TryPeekTail
  href: AngeliA.Pipe-1.html#AngeliA_Pipe_1_TryPeekTail__0__
  name: TryPeekTail
  nameWithType: Pipe<T>.TryPeekTail
  fullName: AngeliA.Pipe<T>.TryPeekTail
  nameWithType.vb: Pipe(Of T).TryPeekTail
  fullName.vb: AngeliA.Pipe(Of T).TryPeekTail
- uid: AngeliA.Pipe`1.LinkToHead*
  commentId: Overload:AngeliA.Pipe`1.LinkToHead
  href: AngeliA.Pipe-1.html#AngeliA_Pipe_1_LinkToHead__0_
  name: LinkToHead
  nameWithType: Pipe<T>.LinkToHead
  fullName: AngeliA.Pipe<T>.LinkToHead
  nameWithType.vb: Pipe(Of T).LinkToHead
  fullName.vb: AngeliA.Pipe(Of T).LinkToHead
- uid: AngeliA.Pipe`1.LinkToTail*
  commentId: Overload:AngeliA.Pipe`1.LinkToTail
  href: AngeliA.Pipe-1.html#AngeliA_Pipe_1_LinkToTail__0_
  name: LinkToTail
  nameWithType: Pipe<T>.LinkToTail
  fullName: AngeliA.Pipe<T>.LinkToTail
  nameWithType.vb: Pipe(Of T).LinkToTail
  fullName.vb: AngeliA.Pipe(Of T).LinkToTail
- uid: AngeliA.Pipe`1.TryPopHead*
  commentId: Overload:AngeliA.Pipe`1.TryPopHead
  href: AngeliA.Pipe-1.html#AngeliA_Pipe_1_TryPopHead__0__
  name: TryPopHead
  nameWithType: Pipe<T>.TryPopHead
  fullName: AngeliA.Pipe<T>.TryPopHead
  nameWithType.vb: Pipe(Of T).TryPopHead
  fullName.vb: AngeliA.Pipe(Of T).TryPopHead
- uid: AngeliA.Pipe`1.TryPopTail*
  commentId: Overload:AngeliA.Pipe`1.TryPopTail
  href: AngeliA.Pipe-1.html#AngeliA_Pipe_1_TryPopTail__0__
  name: TryPopTail
  nameWithType: Pipe<T>.TryPopTail
  fullName: AngeliA.Pipe<T>.TryPopTail
  nameWithType.vb: Pipe(Of T).TryPopTail
  fullName.vb: AngeliA.Pipe(Of T).TryPopTail
- uid: AngeliA.Pipe`1.Reset*
  commentId: Overload:AngeliA.Pipe`1.Reset
  href: AngeliA.Pipe-1.html#AngeliA_Pipe_1_Reset
  name: Reset
  nameWithType: Pipe<T>.Reset
  fullName: AngeliA.Pipe<T>.Reset
  nameWithType.vb: Pipe(Of T).Reset
  fullName.vb: AngeliA.Pipe(Of T).Reset
- uid: AngeliA.Pipe`1.Reorganize*
  commentId: Overload:AngeliA.Pipe`1.Reorganize
  href: AngeliA.Pipe-1.html#AngeliA_Pipe_1_Reorganize
  name: Reorganize
  nameWithType: Pipe<T>.Reorganize
  fullName: AngeliA.Pipe<T>.Reorganize
  nameWithType.vb: Pipe(Of T).Reorganize
  fullName.vb: AngeliA.Pipe(Of T).Reorganize
- uid: AngeliA.Pipe`1.Sort*
  commentId: Overload:AngeliA.Pipe`1.Sort
  href: AngeliA.Pipe-1.html#AngeliA_Pipe_1_Sort_System_Collections_Generic_IComparer__0__
  name: Sort
  nameWithType: Pipe<T>.Sort
  fullName: AngeliA.Pipe<T>.Sort
  nameWithType.vb: Pipe(Of T).Sort
  fullName.vb: AngeliA.Pipe(Of T).Sort
- uid: System.Collections.Generic.IComparer{{T}}
  commentId: T:System.Collections.Generic.IComparer{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IComparer`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  name: IComparer<T>
  nameWithType: IComparer<T>
  fullName: System.Collections.Generic.IComparer<T>
  nameWithType.vb: IComparer(Of T)
  fullName.vb: System.Collections.Generic.IComparer(Of T)
  name.vb: IComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IComparer`1
  commentId: T:System.Collections.Generic.IComparer`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  name: IComparer<T>
  nameWithType: IComparer<T>
  fullName: System.Collections.Generic.IComparer<T>
  nameWithType.vb: IComparer(Of T)
  fullName.vb: System.Collections.Generic.IComparer(Of T)
  name.vb: IComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
