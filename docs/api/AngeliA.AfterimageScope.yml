### YamlMime:ManagedReference
items:
- uid: AngeliA.AfterimageScope
  commentId: T:AngeliA.AfterimageScope
  id: AfterimageScope
  parent: AngeliA
  children:
  - AngeliA.AfterimageScope.#ctor(System.Int32,System.Int32,AngeliA.Color32,AngeliA.Color32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - AngeliA.AfterimageScope.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - AngeliA.AfterimageScope.Dispose
  langs:
  - csharp
  - vb
  name: AfterimageScope
  nameWithType: AfterimageScope
  fullName: AngeliA.AfterimageScope
  type: Struct
  source:
    remote:
      path: AngeliA Framework/src/Scope/AfterimageScope.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: AfterimageScope
    path: ../../AngeliA/AngeliA Framework/src/Scope/AfterimageScope.cs
    startLine: 57
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Draw a continuous tailing cell effect for the objects rendering inside
  example:
  - >-
    <pre><code class="lang-csharp">using AngeliA;


    namespace AngeliaGame;


    public class Example {

    	static int CurrentX = 0;
    	static int CurrentY = 0;
    	static int CurrentRot = 0;

    	[OnGameUpdate]
    	internal static void OnGameUpdate () {

    		int speedX = QTest.Int("Speed X", 50, -64, 64);
    		int speedY = QTest.Int("Speed Y", 10, -64, 64);
    		int rotateSpeed = QTest.Int("Rotate Speed", 8, -64, 64);
    		int count = QTest.Int("Count", 8, 1, 24);
    		int frameStep = QTest.Int("Frame Step", 16, 1, 32);
    		int scaleStart = QTest.Int("Scale Start", 1000, 0, 2000);
    		int scaleEnd = QTest.Int("Scale End", 100, 0, 2000);

    		using (new AfterimageScope(
    			speedX, speedY, Color32.WHITE, Color32.CLEAR, 
    			rotateSpeed, count, frameStep, scaleStart, scaleEnd
    		)) {

    			var cameraRect = Renderer.CameraRect;

    			// Render object here
    			Renderer.Draw(
    				BuiltInSprite.ICON_ENTITY,
    				cameraRect.x + CurrentX,
    				cameraRect.y + CurrentY,
    				500, 500, CurrentRot,
    				Const.CEL * 2, Const.CEL * 2
    			);

    			// Move the object
    			CurrentX += speedX;
    			CurrentY += speedY;
    			CurrentRot += rotateSpeed;
    			CurrentX = CurrentX.UMod(cameraRect.width);
    			CurrentY = CurrentY.UMod(cameraRect.height);

    		}

    	}

    }</code></pre>
  syntax:
    content: 'public readonly struct AfterimageScope : IDisposable'
    content.vb: Public Structure AfterimageScope Implements IDisposable
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - System.Object.AngeliA.Extension.ForAllFields``1(System.Reflection.BindingFlags,System.Boolean)
  - System.Object.AngeliA.Extension.ForAllProperties``1
- uid: AngeliA.AfterimageScope.#ctor(System.Int32,System.Int32,AngeliA.Color32,AngeliA.Color32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.AfterimageScope.#ctor(System.Int32,System.Int32,AngeliA.Color32,AngeliA.Color32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,AngeliA.Color32,AngeliA.Color32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: AngeliA.AfterimageScope
  langs:
  - csharp
  - vb
  name: AfterimageScope(int, int, Color32, Color32, int, int, int, int, int, int)
  nameWithType: AfterimageScope.AfterimageScope(int, int, Color32, Color32, int, int, int, int, int, int)
  fullName: AngeliA.AfterimageScope.AfterimageScope(int, int, AngeliA.Color32, AngeliA.Color32, int, int, int, int, int, int)
  type: Constructor
  source:
    remote:
      path: AngeliA Framework/src/Scope/AfterimageScope.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: .ctor
    path: ../../AngeliA/AngeliA Framework/src/Scope/AfterimageScope.cs
    startLine: 85
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Draw a continuous tailing cell effect for the objects rendering inside
  example: []
  syntax:
    content: public AfterimageScope(int speedX, int speedY, Color32 tintStart, Color32 tintEnd, int rotateSpeed = 0, int count = 3, int frameStep = 2, int scaleStart = 1000, int scaleEnd = 1000, int renderLayer = 3)
    parameters:
    - id: speedX
      type: System.Int32
      description: How fast is the object moves horizontaly
    - id: speedY
      type: System.Int32
      description: How fast is the object moves verticaly
    - id: tintStart
      type: AngeliA.Color32
      description: Color tint for start of the effect
    - id: tintEnd
      type: AngeliA.Color32
      description: Color tint for end of the effect
    - id: rotateSpeed
      type: System.Int32
      description: How fast does the object rotate
    - id: count
      type: System.Int32
      description: How many effect should be drawn
    - id: frameStep
      type: System.Int32
      description: Frame distance between each effects
    - id: scaleStart
      type: System.Int32
      description: Size scale when the effect start (0 means 0%, 1000 means 100%)
    - id: scaleEnd
      type: System.Int32
      description: Size scale when the effect end (0 means 0%, 1000 means 100%)
    - id: renderLayer
      type: System.Int32
      description: Which layer does this effect renders into. Use RenderLayer.XXX to get the value.
    content.vb: Public Sub New(speedX As Integer, speedY As Integer, tintStart As Color32, tintEnd As Color32, rotateSpeed As Integer = 0, count As Integer = 3, frameStep As Integer = 2, scaleStart As Integer = 1000, scaleEnd As Integer = 1000, renderLayer As Integer = 3)
  overload: AngeliA.AfterimageScope.#ctor*
  nameWithType.vb: AfterimageScope.New(Integer, Integer, Color32, Color32, Integer, Integer, Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.AfterimageScope.New(Integer, Integer, AngeliA.Color32, AngeliA.Color32, Integer, Integer, Integer, Integer, Integer, Integer)
  name.vb: New(Integer, Integer, Color32, Color32, Integer, Integer, Integer, Integer, Integer, Integer)
- uid: AngeliA.AfterimageScope.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.AfterimageScope.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: AngeliA.AfterimageScope
  langs:
  - csharp
  - vb
  name: AfterimageScope(int, int, int, int, int, int, int, int)
  nameWithType: AfterimageScope.AfterimageScope(int, int, int, int, int, int, int, int)
  fullName: AngeliA.AfterimageScope.AfterimageScope(int, int, int, int, int, int, int, int)
  type: Constructor
  source:
    remote:
      path: AngeliA Framework/src/Scope/AfterimageScope.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: .ctor
    path: ../../AngeliA/AngeliA Framework/src/Scope/AfterimageScope.cs
    startLine: 99
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Draw a continuous tailing cell effect for the objects rendering inside
  example: []
  syntax:
    content: public AfterimageScope(int speedX, int speedY, int rotateSpeed = 0, int count = 3, int frameStep = 2, int scaleStart = 1000, int scaleEnd = 1000, int renderLayer = 3)
    parameters:
    - id: speedX
      type: System.Int32
      description: How fast is the object moves horizontaly
    - id: speedY
      type: System.Int32
      description: How fast is the object moves verticaly
    - id: rotateSpeed
      type: System.Int32
      description: How fast does the object rotate
    - id: count
      type: System.Int32
      description: How many effect should be drawn
    - id: frameStep
      type: System.Int32
      description: Frame distance between each effects
    - id: scaleStart
      type: System.Int32
      description: Size scale when the effect start (0 means 0%, 1000 means 100%)
    - id: scaleEnd
      type: System.Int32
      description: Size scale when the effect end (0 means 0%, 1000 means 100%)
    - id: renderLayer
      type: System.Int32
      description: Which layer does this effect renders into. Use RenderLayer.XXX to get the value.
    content.vb: Public Sub New(speedX As Integer, speedY As Integer, rotateSpeed As Integer = 0, count As Integer = 3, frameStep As Integer = 2, scaleStart As Integer = 1000, scaleEnd As Integer = 1000, renderLayer As Integer = 3)
  overload: AngeliA.AfterimageScope.#ctor*
  nameWithType.vb: AfterimageScope.New(Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.AfterimageScope.New(Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
  name.vb: New(Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
- uid: AngeliA.AfterimageScope.Dispose
  commentId: M:AngeliA.AfterimageScope.Dispose
  id: Dispose
  parent: AngeliA.AfterimageScope
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: AfterimageScope.Dispose()
  fullName: AngeliA.AfterimageScope.Dispose()
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Scope/AfterimageScope.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Dispose
    path: ../../AngeliA/AngeliA Framework/src/Scope/AfterimageScope.cs
    startLine: 101
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: AngeliA.AfterimageScope.Dispose*
  implements:
  - System.IDisposable.Dispose
references:
- uid: AngeliA
  commentId: N:AngeliA
  href: AngeliA.html
  name: AngeliA
  nameWithType: AngeliA
  fullName: AngeliA
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.AngeliA.Extension.ForAllFields``1(System.Reflection.BindingFlags,System.Boolean)
  commentId: M:AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
  parent: AngeliA.Extension
  definition: AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
  href: AngeliA.Extension.html#AngeliA_Extension_ForAllFields__1_System_Object_System_Reflection_BindingFlags_System_Boolean_
  name: ForAllFields<T>(object, BindingFlags, bool)
  nameWithType: Extension.ForAllFields<T>(object, BindingFlags, bool)
  fullName: AngeliA.Extension.ForAllFields<T>(object, System.Reflection.BindingFlags, bool)
  nameWithType.vb: Extension.ForAllFields(Of T)(Object, BindingFlags, Boolean)
  fullName.vb: AngeliA.Extension.ForAllFields(Of T)(Object, System.Reflection.BindingFlags, Boolean)
  name.vb: ForAllFields(Of T)(Object, BindingFlags, Boolean)
  spec.csharp:
  - uid: AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
    name: ForAllFields
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllFields__1_System_Object_System_Reflection_BindingFlags_System_Boolean_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
    name: ForAllFields
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllFields__1_System_Object_System_Reflection_BindingFlags_System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Object.AngeliA.Extension.ForAllProperties``1
  commentId: M:AngeliA.Extension.ForAllProperties``1(System.Object)
  parent: AngeliA.Extension
  definition: AngeliA.Extension.ForAllProperties``1(System.Object)
  href: AngeliA.Extension.html#AngeliA_Extension_ForAllProperties__1_System_Object_
  name: ForAllProperties<T>(object)
  nameWithType: Extension.ForAllProperties<T>(object)
  fullName: AngeliA.Extension.ForAllProperties<T>(object)
  nameWithType.vb: Extension.ForAllProperties(Of T)(Object)
  fullName.vb: AngeliA.Extension.ForAllProperties(Of T)(Object)
  name.vb: ForAllProperties(Of T)(Object)
  spec.csharp:
  - uid: AngeliA.Extension.ForAllProperties``1(System.Object)
    name: ForAllProperties
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllProperties__1_System_Object_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: AngeliA.Extension.ForAllProperties``1(System.Object)
    name: ForAllProperties
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllProperties__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
  commentId: M:AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
  isExternal: true
  href: AngeliA.Extension.html#AngeliA_Extension_ForAllFields__1_System_Object_System_Reflection_BindingFlags_System_Boolean_
  name: ForAllFields<T>(object, BindingFlags, bool)
  nameWithType: Extension.ForAllFields<T>(object, BindingFlags, bool)
  fullName: AngeliA.Extension.ForAllFields<T>(object, System.Reflection.BindingFlags, bool)
  nameWithType.vb: Extension.ForAllFields(Of T)(Object, BindingFlags, Boolean)
  fullName.vb: AngeliA.Extension.ForAllFields(Of T)(Object, System.Reflection.BindingFlags, Boolean)
  name.vb: ForAllFields(Of T)(Object, BindingFlags, Boolean)
  spec.csharp:
  - uid: AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
    name: ForAllFields
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllFields__1_System_Object_System_Reflection_BindingFlags_System_Boolean_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
    name: ForAllFields
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllFields__1_System_Object_System_Reflection_BindingFlags_System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: AngeliA.Extension
  commentId: T:AngeliA.Extension
  parent: AngeliA
  href: AngeliA.Extension.html
  name: Extension
  nameWithType: Extension
  fullName: AngeliA.Extension
- uid: AngeliA.Extension.ForAllProperties``1(System.Object)
  commentId: M:AngeliA.Extension.ForAllProperties``1(System.Object)
  isExternal: true
  href: AngeliA.Extension.html#AngeliA_Extension_ForAllProperties__1_System_Object_
  name: ForAllProperties<T>(object)
  nameWithType: Extension.ForAllProperties<T>(object)
  fullName: AngeliA.Extension.ForAllProperties<T>(object)
  nameWithType.vb: Extension.ForAllProperties(Of T)(Object)
  fullName.vb: AngeliA.Extension.ForAllProperties(Of T)(Object)
  name.vb: ForAllProperties(Of T)(Object)
  spec.csharp:
  - uid: AngeliA.Extension.ForAllProperties``1(System.Object)
    name: ForAllProperties
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllProperties__1_System_Object_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: AngeliA.Extension.ForAllProperties``1(System.Object)
    name: ForAllProperties
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllProperties__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: AngeliA.AfterimageScope.#ctor*
  commentId: Overload:AngeliA.AfterimageScope.#ctor
  href: AngeliA.AfterimageScope.html#AngeliA_AfterimageScope__ctor_System_Int32_System_Int32_AngeliA_Color32_AngeliA_Color32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_
  name: AfterimageScope
  nameWithType: AfterimageScope.AfterimageScope
  fullName: AngeliA.AfterimageScope.AfterimageScope
  nameWithType.vb: AfterimageScope.New
  fullName.vb: AngeliA.AfterimageScope.New
  name.vb: New
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: AngeliA.Color32
  commentId: T:AngeliA.Color32
  parent: AngeliA
  href: AngeliA.Color32.html
  name: Color32
  nameWithType: Color32
  fullName: AngeliA.Color32
- uid: AngeliA.AfterimageScope.Dispose*
  commentId: Overload:AngeliA.AfterimageScope.Dispose
  href: AngeliA.AfterimageScope.html#AngeliA_AfterimageScope_Dispose
  name: Dispose
  nameWithType: AfterimageScope.Dispose
  fullName: AngeliA.AfterimageScope.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
