### YamlMime:ManagedReference
items:
- uid: AngeliA.LanguageUtil
  commentId: T:AngeliA.LanguageUtil
  id: LanguageUtil
  parent: AngeliA
  children:
  - AngeliA.LanguageUtil.ADD_KEYS_FOR_ALL_LANGUAGE_CODE_SETTING_ID
  - AngeliA.LanguageUtil.AddKeysForAllLanguageCode(System.String,System.Boolean)
  - AngeliA.LanguageUtil.GetLanguageFolderPath(System.String,System.String)
  - AngeliA.LanguageUtil.GetSystemLanguageISO
  - AngeliA.LanguageUtil.LoadAllPairsFromDiskAtPath(System.String,System.Boolean)
  - AngeliA.LanguageUtil.LoadAllPairsFromFolder(System.String,System.String,System.Boolean)
  - AngeliA.LanguageUtil.SaveAllPairsToDisk(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  langs:
  - csharp
  - vb
  name: LanguageUtil
  nameWithType: LanguageUtil
  fullName: AngeliA.LanguageUtil
  type: Class
  source:
    remote:
      path: AngeliA Framework/src/Utility/LanguageUtil.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: LanguageUtil
    path: ../../AngeliA/AngeliA Framework/src/Utility/LanguageUtil.cs
    startLine: 14
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Utility class for language system
  example: []
  syntax:
    content: public static class LanguageUtil
    content.vb: Public Module LanguageUtil
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: AngeliA.LanguageUtil.ADD_KEYS_FOR_ALL_LANGUAGE_CODE_SETTING_ID
  commentId: F:AngeliA.LanguageUtil.ADD_KEYS_FOR_ALL_LANGUAGE_CODE_SETTING_ID
  id: ADD_KEYS_FOR_ALL_LANGUAGE_CODE_SETTING_ID
  parent: AngeliA.LanguageUtil
  langs:
  - csharp
  - vb
  name: ADD_KEYS_FOR_ALL_LANGUAGE_CODE_SETTING_ID
  nameWithType: LanguageUtil.ADD_KEYS_FOR_ALL_LANGUAGE_CODE_SETTING_ID
  fullName: AngeliA.LanguageUtil.ADD_KEYS_FOR_ALL_LANGUAGE_CODE_SETTING_ID
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Utility/LanguageUtil.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ADD_KEYS_FOR_ALL_LANGUAGE_CODE_SETTING_ID
    path: ../../AngeliA/AngeliA Framework/src/Utility/LanguageUtil.cs
    startLine: 20
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Used for remote setting between engine and rigged game
  example: []
  syntax:
    content: public const int ADD_KEYS_FOR_ALL_LANGUAGE_CODE_SETTING_ID = 914528783
    return:
      type: System.Int32
    content.vb: Public Const ADD_KEYS_FOR_ALL_LANGUAGE_CODE_SETTING_ID As Integer = 914528783
- uid: AngeliA.LanguageUtil.LoadAllPairsFromFolder(System.String,System.String,System.Boolean)
  commentId: M:AngeliA.LanguageUtil.LoadAllPairsFromFolder(System.String,System.String,System.Boolean)
  id: LoadAllPairsFromFolder(System.String,System.String,System.Boolean)
  parent: AngeliA.LanguageUtil
  langs:
  - csharp
  - vb
  name: LoadAllPairsFromFolder(string, string, bool)
  nameWithType: LanguageUtil.LoadAllPairsFromFolder(string, string, bool)
  fullName: AngeliA.LanguageUtil.LoadAllPairsFromFolder(string, string, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/LanguageUtil.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: LoadAllPairsFromFolder
    path: ../../AngeliA/AngeliA Framework/src/Utility/LanguageUtil.cs
    startLine: 34
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Load and iterate through all language data pairs from given folder
  example: []
  syntax:
    content: public static IEnumerable<KeyValuePair<string, string>> LoadAllPairsFromFolder(string languageRoot, string language, bool keepEscapeCharacters = false)
    parameters:
    - id: languageRoot
      type: System.String
      description: Root folder of the language data
    - id: language
      type: System.String
      description: ISO of the target language
    - id: keepEscapeCharacters
      type: System.Boolean
      description: True if the escape characters (like "\n") will be set to original data
    return:
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
    content.vb: Public Shared Function LoadAllPairsFromFolder(languageRoot As String, language As String, keepEscapeCharacters As Boolean = False) As IEnumerable(Of KeyValuePair(Of String, String))
  overload: AngeliA.LanguageUtil.LoadAllPairsFromFolder*
  nameWithType.vb: LanguageUtil.LoadAllPairsFromFolder(String, String, Boolean)
  fullName.vb: AngeliA.LanguageUtil.LoadAllPairsFromFolder(String, String, Boolean)
  name.vb: LoadAllPairsFromFolder(String, String, Boolean)
- uid: AngeliA.LanguageUtil.LoadAllPairsFromDiskAtPath(System.String,System.Boolean)
  commentId: M:AngeliA.LanguageUtil.LoadAllPairsFromDiskAtPath(System.String,System.Boolean)
  id: LoadAllPairsFromDiskAtPath(System.String,System.Boolean)
  parent: AngeliA.LanguageUtil
  langs:
  - csharp
  - vb
  name: LoadAllPairsFromDiskAtPath(string, bool)
  nameWithType: LanguageUtil.LoadAllPairsFromDiskAtPath(string, bool)
  fullName: AngeliA.LanguageUtil.LoadAllPairsFromDiskAtPath(string, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/LanguageUtil.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: LoadAllPairsFromDiskAtPath
    path: ../../AngeliA/AngeliA Framework/src/Utility/LanguageUtil.cs
    startLine: 56
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Load and iterate through all language data pairs from given file
  example: []
  syntax:
    content: public static IEnumerable<KeyValuePair<string, string>> LoadAllPairsFromDiskAtPath(string path, bool keepEscapeCharacters = false)
    parameters:
    - id: path
      type: System.String
      description: Language file path
    - id: keepEscapeCharacters
      type: System.Boolean
      description: True if the escape characters (like "\n") will be set to original data
    return:
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
    content.vb: Public Shared Function LoadAllPairsFromDiskAtPath(path As String, keepEscapeCharacters As Boolean = False) As IEnumerable(Of KeyValuePair(Of String, String))
  overload: AngeliA.LanguageUtil.LoadAllPairsFromDiskAtPath*
  nameWithType.vb: LanguageUtil.LoadAllPairsFromDiskAtPath(String, Boolean)
  fullName.vb: AngeliA.LanguageUtil.LoadAllPairsFromDiskAtPath(String, Boolean)
  name.vb: LoadAllPairsFromDiskAtPath(String, Boolean)
- uid: AngeliA.LanguageUtil.SaveAllPairsToDisk(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  commentId: M:AngeliA.LanguageUtil.SaveAllPairsToDisk(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  id: SaveAllPairsToDisk(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  parent: AngeliA.LanguageUtil
  langs:
  - csharp
  - vb
  name: SaveAllPairsToDisk(string, IEnumerable<KeyValuePair<string, string>>)
  nameWithType: LanguageUtil.SaveAllPairsToDisk(string, IEnumerable<KeyValuePair<string, string>>)
  fullName: AngeliA.LanguageUtil.SaveAllPairsToDisk(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/LanguageUtil.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SaveAllPairsToDisk
    path: ../../AngeliA/AngeliA Framework/src/Utility/LanguageUtil.cs
    startLine: 72
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Save given language data pairs into file
  example: []
  syntax:
    content: public static void SaveAllPairsToDisk(string filePath, IEnumerable<KeyValuePair<string, string>> pairs)
    parameters:
    - id: filePath
      type: System.String
    - id: pairs
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
    content.vb: Public Shared Sub SaveAllPairsToDisk(filePath As String, pairs As IEnumerable(Of KeyValuePair(Of String, String)))
  overload: AngeliA.LanguageUtil.SaveAllPairsToDisk*
  nameWithType.vb: LanguageUtil.SaveAllPairsToDisk(String, IEnumerable(Of KeyValuePair(Of String, String)))
  fullName.vb: AngeliA.LanguageUtil.SaveAllPairsToDisk(String, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of String, String)))
  name.vb: SaveAllPairsToDisk(String, IEnumerable(Of KeyValuePair(Of String, String)))
- uid: AngeliA.LanguageUtil.GetLanguageFolderPath(System.String,System.String)
  commentId: M:AngeliA.LanguageUtil.GetLanguageFolderPath(System.String,System.String)
  id: GetLanguageFolderPath(System.String,System.String)
  parent: AngeliA.LanguageUtil
  langs:
  - csharp
  - vb
  name: GetLanguageFolderPath(string, string)
  nameWithType: LanguageUtil.GetLanguageFolderPath(string, string)
  fullName: AngeliA.LanguageUtil.GetLanguageFolderPath(string, string)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/LanguageUtil.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetLanguageFolderPath
    path: ../../AngeliA/AngeliA Framework/src/Utility/LanguageUtil.cs
    startLine: 91
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get folder for given language
  example: []
  syntax:
    content: public static string GetLanguageFolderPath(string languageRoot, string language)
    parameters:
    - id: languageRoot
      type: System.String
      description: Root of the language folder
    - id: language
      type: System.String
      description: ISO of the target language
    return:
      type: System.String
      description: Path for the target language file
    content.vb: Public Shared Function GetLanguageFolderPath(languageRoot As String, language As String) As String
  overload: AngeliA.LanguageUtil.GetLanguageFolderPath*
  nameWithType.vb: LanguageUtil.GetLanguageFolderPath(String, String)
  fullName.vb: AngeliA.LanguageUtil.GetLanguageFolderPath(String, String)
  name.vb: GetLanguageFolderPath(String, String)
- uid: AngeliA.LanguageUtil.GetSystemLanguageISO
  commentId: M:AngeliA.LanguageUtil.GetSystemLanguageISO
  id: GetSystemLanguageISO
  parent: AngeliA.LanguageUtil
  langs:
  - csharp
  - vb
  name: GetSystemLanguageISO()
  nameWithType: LanguageUtil.GetSystemLanguageISO()
  fullName: AngeliA.LanguageUtil.GetSystemLanguageISO()
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/LanguageUtil.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetSystemLanguageISO
    path: ../../AngeliA/AngeliA Framework/src/Utility/LanguageUtil.cs
    startLine: 97
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get current language ISO of the OS
  example: []
  syntax:
    content: public static string GetSystemLanguageISO()
    return:
      type: System.String
    content.vb: Public Shared Function GetSystemLanguageISO() As String
  overload: AngeliA.LanguageUtil.GetSystemLanguageISO*
- uid: AngeliA.LanguageUtil.AddKeysForAllLanguageCode(System.String,System.Boolean)
  commentId: M:AngeliA.LanguageUtil.AddKeysForAllLanguageCode(System.String,System.Boolean)
  id: AddKeysForAllLanguageCode(System.String,System.Boolean)
  parent: AngeliA.LanguageUtil
  langs:
  - csharp
  - vb
  name: AddKeysForAllLanguageCode(string, bool)
  nameWithType: LanguageUtil.AddKeysForAllLanguageCode(string, bool)
  fullName: AngeliA.LanguageUtil.AddKeysForAllLanguageCode(string, bool)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Utility/LanguageUtil.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: AddKeysForAllLanguageCode
    path: ../../AngeliA/AngeliA Framework/src/Utility/LanguageUtil.cs
    startLine: 109
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Add all required keys for all language inside the root folder
  example: []
  syntax:
    content: public static void AddKeysForAllLanguageCode(string languageRoot, bool includeMovementProp = false)
    parameters:
    - id: languageRoot
      type: System.String
    - id: includeMovementProp
      type: System.Boolean
    content.vb: Public Shared Sub AddKeysForAllLanguageCode(languageRoot As String, includeMovementProp As Boolean = False)
  overload: AngeliA.LanguageUtil.AddKeysForAllLanguageCode*
  nameWithType.vb: LanguageUtil.AddKeysForAllLanguageCode(String, Boolean)
  fullName.vb: AngeliA.LanguageUtil.AddKeysForAllLanguageCode(String, Boolean)
  name.vb: AddKeysForAllLanguageCode(String, Boolean)
references:
- uid: AngeliA
  commentId: N:AngeliA
  href: AngeliA.html
  name: AngeliA
  nameWithType: AngeliA
  fullName: AngeliA
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: AngeliA.LanguageUtil.LoadAllPairsFromFolder*
  commentId: Overload:AngeliA.LanguageUtil.LoadAllPairsFromFolder
  href: AngeliA.LanguageUtil.html#AngeliA_LanguageUtil_LoadAllPairsFromFolder_System_String_System_String_System_Boolean_
  name: LoadAllPairsFromFolder
  nameWithType: LanguageUtil.LoadAllPairsFromFolder
  fullName: AngeliA.LanguageUtil.LoadAllPairsFromFolder
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<KeyValuePair<string, string>>
  nameWithType: IEnumerable<KeyValuePair<string, string>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, String))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of String, String))
  name.vb: IEnumerable(Of KeyValuePair(Of String, String))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: AngeliA.LanguageUtil.LoadAllPairsFromDiskAtPath*
  commentId: Overload:AngeliA.LanguageUtil.LoadAllPairsFromDiskAtPath
  href: AngeliA.LanguageUtil.html#AngeliA_LanguageUtil_LoadAllPairsFromDiskAtPath_System_String_System_Boolean_
  name: LoadAllPairsFromDiskAtPath
  nameWithType: LanguageUtil.LoadAllPairsFromDiskAtPath
  fullName: AngeliA.LanguageUtil.LoadAllPairsFromDiskAtPath
- uid: AngeliA.LanguageUtil.SaveAllPairsToDisk*
  commentId: Overload:AngeliA.LanguageUtil.SaveAllPairsToDisk
  href: AngeliA.LanguageUtil.html#AngeliA_LanguageUtil_SaveAllPairsToDisk_System_String_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair_System_String_System_String___
  name: SaveAllPairsToDisk
  nameWithType: LanguageUtil.SaveAllPairsToDisk
  fullName: AngeliA.LanguageUtil.SaveAllPairsToDisk
- uid: AngeliA.LanguageUtil.GetLanguageFolderPath*
  commentId: Overload:AngeliA.LanguageUtil.GetLanguageFolderPath
  href: AngeliA.LanguageUtil.html#AngeliA_LanguageUtil_GetLanguageFolderPath_System_String_System_String_
  name: GetLanguageFolderPath
  nameWithType: LanguageUtil.GetLanguageFolderPath
  fullName: AngeliA.LanguageUtil.GetLanguageFolderPath
- uid: AngeliA.LanguageUtil.GetSystemLanguageISO*
  commentId: Overload:AngeliA.LanguageUtil.GetSystemLanguageISO
  href: AngeliA.LanguageUtil.html#AngeliA_LanguageUtil_GetSystemLanguageISO
  name: GetSystemLanguageISO
  nameWithType: LanguageUtil.GetSystemLanguageISO
  fullName: AngeliA.LanguageUtil.GetSystemLanguageISO
- uid: AngeliA.LanguageUtil.AddKeysForAllLanguageCode*
  commentId: Overload:AngeliA.LanguageUtil.AddKeysForAllLanguageCode
  href: AngeliA.LanguageUtil.html#AngeliA_LanguageUtil_AddKeysForAllLanguageCode_System_String_System_Boolean_
  name: AddKeysForAllLanguageCode
  nameWithType: LanguageUtil.AddKeysForAllLanguageCode
  fullName: AngeliA.LanguageUtil.AddKeysForAllLanguageCode
