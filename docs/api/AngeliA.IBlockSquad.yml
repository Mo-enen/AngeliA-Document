### YamlMime:ManagedReference
items:
- uid: AngeliA.IBlockSquad
  commentId: T:AngeliA.IBlockSquad
  id: IBlockSquad
  parent: AngeliA
  children:
  - AngeliA.IBlockSquad.FindBlock(System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Direction4,AngeliA.BlockType,System.Int32@,System.Int32@,System.Int32)
  - AngeliA.IBlockSquad.GetAllBlocksAt(System.Int32,System.Int32,System.Int32)
  - AngeliA.IBlockSquad.GetBlockAt(System.Int32,System.Int32,System.Int32,AngeliA.BlockType)
  - AngeliA.IBlockSquad.SetBlockAt(System.Int32,System.Int32,System.Int32,AngeliA.BlockType,System.Int32)
  - AngeliA.IBlockSquad.WorldExists(AngeliA.Int3)
  langs:
  - csharp
  - vb
  name: IBlockSquad
  nameWithType: IBlockSquad
  fullName: AngeliA.IBlockSquad
  type: Interface
  source:
    remote:
      path: AngeliA Framework/src/World/IBlockSquad.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IBlockSquad
    path: ../../AngeliA/AngeliA Framework/src/World/IBlockSquad.cs
    startLine: 8
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Instance that provide map block data from unit position
  example: []
  syntax:
    content: public interface IBlockSquad
    content.vb: Public Interface IBlockSquad
  extensionMethods:
  - System.Object.AngeliA.Extension.ForAllFields``1(System.Reflection.BindingFlags,System.Boolean)
  - System.Object.AngeliA.Extension.ForAllProperties``1
- uid: AngeliA.IBlockSquad.WorldExists(AngeliA.Int3)
  commentId: M:AngeliA.IBlockSquad.WorldExists(AngeliA.Int3)
  id: WorldExists(AngeliA.Int3)
  parent: AngeliA.IBlockSquad
  langs:
  - csharp
  - vb
  name: WorldExists(Int3)
  nameWithType: IBlockSquad.WorldExists(Int3)
  fullName: AngeliA.IBlockSquad.WorldExists(AngeliA.Int3)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/World/IBlockSquad.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: WorldExists
    path: ../../AngeliA/AngeliA Framework/src/World/IBlockSquad.cs
    startLine: 14
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: True if world data exists at given position
  example: []
  syntax:
    content: bool WorldExists(Int3 worldPos)
    parameters:
    - id: worldPos
      type: AngeliA.Int3
      description: Position in world space (1 world space = 256 * 128 global space)
    return:
      type: System.Boolean
    content.vb: Function WorldExists(worldPos As Int3) As Boolean
  overload: AngeliA.IBlockSquad.WorldExists*
- uid: AngeliA.IBlockSquad.GetBlockAt(System.Int32,System.Int32,System.Int32,AngeliA.BlockType)
  commentId: M:AngeliA.IBlockSquad.GetBlockAt(System.Int32,System.Int32,System.Int32,AngeliA.BlockType)
  id: GetBlockAt(System.Int32,System.Int32,System.Int32,AngeliA.BlockType)
  parent: AngeliA.IBlockSquad
  langs:
  - csharp
  - vb
  name: GetBlockAt(int, int, int, BlockType)
  nameWithType: IBlockSquad.GetBlockAt(int, int, int, BlockType)
  fullName: AngeliA.IBlockSquad.GetBlockAt(int, int, int, AngeliA.BlockType)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/World/IBlockSquad.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetBlockAt
    path: ../../AngeliA/AngeliA Framework/src/World/IBlockSquad.cs
    startLine: 23
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get block ID at given unit position
  example: []
  syntax:
    content: int GetBlockAt(int unitX, int unitY, int z, BlockType type)
    parameters:
    - id: unitX
      type: System.Int32
      description: X position in unit space
    - id: unitY
      type: System.Int32
      description: Y position in unit space
    - id: z
      type: System.Int32
      description: Z position
    - id: type
      type: AngeliA.BlockType
      description: Type of the block
    return:
      type: System.Int32
    content.vb: Function GetBlockAt(unitX As Integer, unitY As Integer, z As Integer, type As BlockType) As Integer
  overload: AngeliA.IBlockSquad.GetBlockAt*
  nameWithType.vb: IBlockSquad.GetBlockAt(Integer, Integer, Integer, BlockType)
  fullName.vb: AngeliA.IBlockSquad.GetBlockAt(Integer, Integer, Integer, AngeliA.BlockType)
  name.vb: GetBlockAt(Integer, Integer, Integer, BlockType)
- uid: AngeliA.IBlockSquad.GetAllBlocksAt(System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.IBlockSquad.GetAllBlocksAt(System.Int32,System.Int32,System.Int32)
  id: GetAllBlocksAt(System.Int32,System.Int32,System.Int32)
  parent: AngeliA.IBlockSquad
  langs:
  - csharp
  - vb
  name: GetAllBlocksAt(int, int, int)
  nameWithType: IBlockSquad.GetAllBlocksAt(int, int, int)
  fullName: AngeliA.IBlockSquad.GetAllBlocksAt(int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/World/IBlockSquad.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetAllBlocksAt
    path: ../../AngeliA/AngeliA Framework/src/World/IBlockSquad.cs
    startLine: 31
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get all blocks ID at given unit position
  example: []
  syntax:
    content: (int level, int bg, int entity, int element) GetAllBlocksAt(int unitX, int unitY, int z)
    parameters:
    - id: unitX
      type: System.Int32
      description: X position in unit space
    - id: unitY
      type: System.Int32
      description: Y position in unit space
    - id: z
      type: System.Int32
      description: Z position
    return:
      type: System.ValueTuple{System.Int32,System.Int32,System.Int32,System.Int32}
    content.vb: Function GetAllBlocksAt(unitX As Integer, unitY As Integer, z As Integer) As (level As Integer, bg As Integer, entity As Integer, element As Integer)
  overload: AngeliA.IBlockSquad.GetAllBlocksAt*
  nameWithType.vb: IBlockSquad.GetAllBlocksAt(Integer, Integer, Integer)
  fullName.vb: AngeliA.IBlockSquad.GetAllBlocksAt(Integer, Integer, Integer)
  name.vb: GetAllBlocksAt(Integer, Integer, Integer)
- uid: AngeliA.IBlockSquad.SetBlockAt(System.Int32,System.Int32,System.Int32,AngeliA.BlockType,System.Int32)
  commentId: M:AngeliA.IBlockSquad.SetBlockAt(System.Int32,System.Int32,System.Int32,AngeliA.BlockType,System.Int32)
  id: SetBlockAt(System.Int32,System.Int32,System.Int32,AngeliA.BlockType,System.Int32)
  parent: AngeliA.IBlockSquad
  langs:
  - csharp
  - vb
  name: SetBlockAt(int, int, int, BlockType, int)
  nameWithType: IBlockSquad.SetBlockAt(int, int, int, BlockType, int)
  fullName: AngeliA.IBlockSquad.SetBlockAt(int, int, int, AngeliA.BlockType, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/World/IBlockSquad.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: SetBlockAt
    path: ../../AngeliA/AngeliA Framework/src/World/IBlockSquad.cs
    startLine: 41
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Set block ID at given unit position
  example: []
  syntax:
    content: void SetBlockAt(int unitX, int unitY, int z, BlockType type, int newID)
    parameters:
    - id: unitX
      type: System.Int32
      description: X position in unit space
    - id: unitY
      type: System.Int32
      description: Y position in unit space
    - id: z
      type: System.Int32
      description: Z position
    - id: type
      type: AngeliA.BlockType
      description: Type of the block
    - id: newID
      type: System.Int32
      description: Block ID
    content.vb: Sub SetBlockAt(unitX As Integer, unitY As Integer, z As Integer, type As BlockType, newID As Integer)
  overload: AngeliA.IBlockSquad.SetBlockAt*
  nameWithType.vb: IBlockSquad.SetBlockAt(Integer, Integer, Integer, BlockType, Integer)
  fullName.vb: AngeliA.IBlockSquad.SetBlockAt(Integer, Integer, Integer, AngeliA.BlockType, Integer)
  name.vb: SetBlockAt(Integer, Integer, Integer, BlockType, Integer)
- uid: AngeliA.IBlockSquad.FindBlock(System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Direction4,AngeliA.BlockType,System.Int32@,System.Int32@,System.Int32)
  commentId: M:AngeliA.IBlockSquad.FindBlock(System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Direction4,AngeliA.BlockType,System.Int32@,System.Int32@,System.Int32)
  id: FindBlock(System.Int32,System.Int32,System.Int32,System.Int32,AngeliA.Direction4,AngeliA.BlockType,System.Int32@,System.Int32@,System.Int32)
  parent: AngeliA.IBlockSquad
  langs:
  - csharp
  - vb
  name: FindBlock(int, int, int, int, Direction4, BlockType, out int, out int, int)
  nameWithType: IBlockSquad.FindBlock(int, int, int, int, Direction4, BlockType, out int, out int, int)
  fullName: AngeliA.IBlockSquad.FindBlock(int, int, int, int, AngeliA.Direction4, AngeliA.BlockType, out int, out int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/World/IBlockSquad.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: FindBlock
    path: ../../AngeliA/AngeliA Framework/src/World/IBlockSquad.cs
    startLine: 56
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get block position from given unit position to given direction
  example: []
  syntax:
    content: bool FindBlock(int id, int unitX, int unitY, int unitZ, Direction4 direction, BlockType type, out int resultX, out int resultY, int maxDistance = 128)
    parameters:
    - id: id
      type: System.Int32
      description: Block ID to find
    - id: unitX
      type: System.Int32
      description: Start unit position X
    - id: unitY
      type: System.Int32
      description: Start unit position Y
    - id: unitZ
      type: System.Int32
      description: Position Z
    - id: direction
      type: AngeliA.Direction4
      description: Searching direction
    - id: type
      type: AngeliA.BlockType
      description: Type of the target block
    - id: resultX
      type: System.Int32
      description: Position X in unit space
    - id: resultY
      type: System.Int32
      description: Position Y in unit space
    - id: maxDistance
      type: System.Int32
      description: Limitation of searching distance (Default 128)
    return:
      type: System.Boolean
      description: True if the block founded
    content.vb: Function FindBlock(id As Integer, unitX As Integer, unitY As Integer, unitZ As Integer, direction As Direction4, type As BlockType, resultX As Integer, resultY As Integer, maxDistance As Integer = 128) As Boolean
  overload: AngeliA.IBlockSquad.FindBlock*
  nameWithType.vb: IBlockSquad.FindBlock(Integer, Integer, Integer, Integer, Direction4, BlockType, Integer, Integer, Integer)
  fullName.vb: AngeliA.IBlockSquad.FindBlock(Integer, Integer, Integer, Integer, AngeliA.Direction4, AngeliA.BlockType, Integer, Integer, Integer)
  name.vb: FindBlock(Integer, Integer, Integer, Integer, Direction4, BlockType, Integer, Integer, Integer)
references:
- uid: AngeliA
  commentId: N:AngeliA
  href: AngeliA.html
  name: AngeliA
  nameWithType: AngeliA
  fullName: AngeliA
- uid: System.Object.AngeliA.Extension.ForAllFields``1(System.Reflection.BindingFlags,System.Boolean)
  commentId: M:AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
  parent: AngeliA.Extension
  definition: AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
  href: AngeliA.Extension.html#AngeliA_Extension_ForAllFields__1_System_Object_System_Reflection_BindingFlags_System_Boolean_
  name: ForAllFields<T>(object, BindingFlags, bool)
  nameWithType: Extension.ForAllFields<T>(object, BindingFlags, bool)
  fullName: AngeliA.Extension.ForAllFields<T>(object, System.Reflection.BindingFlags, bool)
  nameWithType.vb: Extension.ForAllFields(Of T)(Object, BindingFlags, Boolean)
  fullName.vb: AngeliA.Extension.ForAllFields(Of T)(Object, System.Reflection.BindingFlags, Boolean)
  name.vb: ForAllFields(Of T)(Object, BindingFlags, Boolean)
  spec.csharp:
  - uid: AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
    name: ForAllFields
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllFields__1_System_Object_System_Reflection_BindingFlags_System_Boolean_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
    name: ForAllFields
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllFields__1_System_Object_System_Reflection_BindingFlags_System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Object.AngeliA.Extension.ForAllProperties``1
  commentId: M:AngeliA.Extension.ForAllProperties``1(System.Object)
  parent: AngeliA.Extension
  definition: AngeliA.Extension.ForAllProperties``1(System.Object)
  href: AngeliA.Extension.html#AngeliA_Extension_ForAllProperties__1_System_Object_
  name: ForAllProperties<T>(object)
  nameWithType: Extension.ForAllProperties<T>(object)
  fullName: AngeliA.Extension.ForAllProperties<T>(object)
  nameWithType.vb: Extension.ForAllProperties(Of T)(Object)
  fullName.vb: AngeliA.Extension.ForAllProperties(Of T)(Object)
  name.vb: ForAllProperties(Of T)(Object)
  spec.csharp:
  - uid: AngeliA.Extension.ForAllProperties``1(System.Object)
    name: ForAllProperties
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllProperties__1_System_Object_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: AngeliA.Extension.ForAllProperties``1(System.Object)
    name: ForAllProperties
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllProperties__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
  commentId: M:AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
  isExternal: true
  href: AngeliA.Extension.html#AngeliA_Extension_ForAllFields__1_System_Object_System_Reflection_BindingFlags_System_Boolean_
  name: ForAllFields<T>(object, BindingFlags, bool)
  nameWithType: Extension.ForAllFields<T>(object, BindingFlags, bool)
  fullName: AngeliA.Extension.ForAllFields<T>(object, System.Reflection.BindingFlags, bool)
  nameWithType.vb: Extension.ForAllFields(Of T)(Object, BindingFlags, Boolean)
  fullName.vb: AngeliA.Extension.ForAllFields(Of T)(Object, System.Reflection.BindingFlags, Boolean)
  name.vb: ForAllFields(Of T)(Object, BindingFlags, Boolean)
  spec.csharp:
  - uid: AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
    name: ForAllFields
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllFields__1_System_Object_System_Reflection_BindingFlags_System_Boolean_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
    name: ForAllFields
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllFields__1_System_Object_System_Reflection_BindingFlags_System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: AngeliA.Extension
  commentId: T:AngeliA.Extension
  parent: AngeliA
  href: AngeliA.Extension.html
  name: Extension
  nameWithType: Extension
  fullName: AngeliA.Extension
- uid: AngeliA.Extension.ForAllProperties``1(System.Object)
  commentId: M:AngeliA.Extension.ForAllProperties``1(System.Object)
  isExternal: true
  href: AngeliA.Extension.html#AngeliA_Extension_ForAllProperties__1_System_Object_
  name: ForAllProperties<T>(object)
  nameWithType: Extension.ForAllProperties<T>(object)
  fullName: AngeliA.Extension.ForAllProperties<T>(object)
  nameWithType.vb: Extension.ForAllProperties(Of T)(Object)
  fullName.vb: AngeliA.Extension.ForAllProperties(Of T)(Object)
  name.vb: ForAllProperties(Of T)(Object)
  spec.csharp:
  - uid: AngeliA.Extension.ForAllProperties``1(System.Object)
    name: ForAllProperties
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllProperties__1_System_Object_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: AngeliA.Extension.ForAllProperties``1(System.Object)
    name: ForAllProperties
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllProperties__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: AngeliA.IBlockSquad.WorldExists*
  commentId: Overload:AngeliA.IBlockSquad.WorldExists
  href: AngeliA.IBlockSquad.html#AngeliA_IBlockSquad_WorldExists_AngeliA_Int3_
  name: WorldExists
  nameWithType: IBlockSquad.WorldExists
  fullName: AngeliA.IBlockSquad.WorldExists
- uid: AngeliA.Int3
  commentId: T:AngeliA.Int3
  parent: AngeliA
  href: AngeliA.Int3.html
  name: Int3
  nameWithType: Int3
  fullName: AngeliA.Int3
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AngeliA.IBlockSquad.GetBlockAt*
  commentId: Overload:AngeliA.IBlockSquad.GetBlockAt
  href: AngeliA.IBlockSquad.html#AngeliA_IBlockSquad_GetBlockAt_System_Int32_System_Int32_System_Int32_AngeliA_BlockType_
  name: GetBlockAt
  nameWithType: IBlockSquad.GetBlockAt
  fullName: AngeliA.IBlockSquad.GetBlockAt
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: AngeliA.BlockType
  commentId: T:AngeliA.BlockType
  parent: AngeliA
  href: AngeliA.BlockType.html
  name: BlockType
  nameWithType: BlockType
  fullName: AngeliA.BlockType
- uid: AngeliA.IBlockSquad.GetAllBlocksAt*
  commentId: Overload:AngeliA.IBlockSquad.GetAllBlocksAt
  href: AngeliA.IBlockSquad.html#AngeliA_IBlockSquad_GetAllBlocksAt_System_Int32_System_Int32_System_Int32_
  name: GetAllBlocksAt
  nameWithType: IBlockSquad.GetAllBlocksAt
  fullName: AngeliA.IBlockSquad.GetAllBlocksAt
- uid: System.ValueTuple{System.Int32,System.Int32,System.Int32,System.Int32}
  commentId: T:System.ValueTuple{System.Int32,System.Int32,System.Int32,System.Int32}
  parent: System
  definition: System.ValueTuple`4
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: (int level, int bg, int entity, int element)
  nameWithType: (int level, int bg, int entity, int element)
  fullName: (int level, int bg, int entity, int element)
  nameWithType.vb: (level As Integer, bg As Integer, entity As Integer, element As Integer)
  fullName.vb: (level As Integer, bg As Integer, entity As Integer, element As Integer)
  name.vb: (level As Integer, bg As Integer, entity As Integer, element As Integer)
  spec.csharp:
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32,System.Int32}.level
    name: level
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32,system.int32-.level
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32,System.Int32}.bg
    name: bg
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32,system.int32-.bg
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32,System.Int32}.entity
    name: entity
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32,system.int32-.entity
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32,System.Int32}.element
    name: element
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32,system.int32-.element
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32,System.Int32}.level
    name: level
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32,system.int32-.level
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32,System.Int32}.bg
    name: bg
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32,system.int32-.bg
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32,System.Int32}.entity
    name: entity
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32,system.int32-.entity
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32,System.Int32}.element
    name: element
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32,system.int32-.element
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.ValueTuple`4
  commentId: T:System.ValueTuple`4
  name: (T1, T2, T3, T4)
  nameWithType: (T1, T2, T3, T4)
  fullName: (T1, T2, T3, T4)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: )
- uid: AngeliA.IBlockSquad.SetBlockAt*
  commentId: Overload:AngeliA.IBlockSquad.SetBlockAt
  href: AngeliA.IBlockSquad.html#AngeliA_IBlockSquad_SetBlockAt_System_Int32_System_Int32_System_Int32_AngeliA_BlockType_System_Int32_
  name: SetBlockAt
  nameWithType: IBlockSquad.SetBlockAt
  fullName: AngeliA.IBlockSquad.SetBlockAt
- uid: AngeliA.IBlockSquad.FindBlock*
  commentId: Overload:AngeliA.IBlockSquad.FindBlock
  href: AngeliA.IBlockSquad.html#AngeliA_IBlockSquad_FindBlock_System_Int32_System_Int32_System_Int32_System_Int32_AngeliA_Direction4_AngeliA_BlockType_System_Int32__System_Int32__System_Int32_
  name: FindBlock
  nameWithType: IBlockSquad.FindBlock
  fullName: AngeliA.IBlockSquad.FindBlock
- uid: AngeliA.Direction4
  commentId: T:AngeliA.Direction4
  parent: AngeliA
  href: AngeliA.Direction4.html
  name: Direction4
  nameWithType: Direction4
  fullName: AngeliA.Direction4
