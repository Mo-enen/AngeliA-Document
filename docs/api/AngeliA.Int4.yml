### YamlMime:ManagedReference
items:
- uid: AngeliA.Int4
  commentId: T:AngeliA.Int4
  id: Int4
  parent: AngeliA
  children:
  - AngeliA.Int4.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  - AngeliA.Int4.Contains(System.Int32)
  - AngeliA.Int4.Count(System.Int32)
  - AngeliA.Int4.Direction(System.Int32,System.Int32,System.Int32,System.Int32)
  - AngeliA.Int4.Equals(AngeliA.Int4)
  - AngeliA.Int4.Equals(System.Object)
  - AngeliA.Int4.FindIndex(System.Int32)
  - AngeliA.Int4.GetHashCode
  - AngeliA.Int4.IsZero
  - AngeliA.Int4.Item(System.Int32)
  - AngeliA.Int4.One
  - AngeliA.Int4.Three
  - AngeliA.Int4.ToString
  - AngeliA.Int4.Two
  - AngeliA.Int4.Zero
  - AngeliA.Int4.down
  - AngeliA.Int4.horizontal
  - AngeliA.Int4.left
  - AngeliA.Int4.op_Addition(AngeliA.Int4,AngeliA.Int4)
  - AngeliA.Int4.op_Division(AngeliA.Int4,System.Int32)
  - AngeliA.Int4.op_Equality(AngeliA.Int4,AngeliA.Int4)
  - AngeliA.Int4.op_Explicit(AngeliA.Int4)~AngeliA.Int2
  - AngeliA.Int4.op_Explicit(AngeliA.Int4)~AngeliA.Int3
  - AngeliA.Int4.op_Inequality(AngeliA.Int4,AngeliA.Int4)
  - AngeliA.Int4.op_Multiply(AngeliA.Int4,System.Int32)
  - AngeliA.Int4.op_Multiply(System.Int32,AngeliA.Int4)
  - AngeliA.Int4.right
  - AngeliA.Int4.up
  - AngeliA.Int4.vertical
  - AngeliA.Int4.w
  - AngeliA.Int4.x
  - AngeliA.Int4.y
  - AngeliA.Int4.z
  langs:
  - csharp
  - vb
  name: Int4
  nameWithType: Int4
  fullName: AngeliA.Int4
  type: Struct
  source:
    remote:
      path: AngeliA Framework/src/Structure/Int4.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Int4
    path: ../../AngeliA/AngeliA Framework/src/Structure/Int4.cs
    startLine: 10
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: 4D vector with intager data
  example: []
  syntax:
    content: >-
      [Serializable]

      public struct Int4 : IEquatable<Int4>
    content.vb: >-
      <Serializable>

      Public Structure Int4 Implements IEquatable(Of Int4)
  implements:
  - System.IEquatable{AngeliA.Int4}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - System.Object.AngeliA.Extension.ForAllFields``1(System.Reflection.BindingFlags,System.Boolean)
  - System.Object.AngeliA.Extension.ForAllProperties``1
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: AngeliA.Int4.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Int4.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: AngeliA.Int4
  langs:
  - csharp
  - vb
  name: Int4(int, int, int, int)
  nameWithType: Int4.Int4(int, int, int, int)
  fullName: AngeliA.Int4.Int4(int, int, int, int)
  type: Constructor
  source:
    remote:
      path: AngeliA Framework/src/Structure/Int4.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: .ctor
    path: ../../AngeliA/AngeliA Framework/src/Structure/Int4.cs
    startLine: 10
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: 4D vector with intager data
  example: []
  syntax:
    content: public Int4(int x, int y, int z, int w)
    parameters:
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: z
      type: System.Int32
    - id: w
      type: System.Int32
    content.vb: Public Sub New(x As Integer, y As Integer, z As Integer, w As Integer)
  overload: AngeliA.Int4.#ctor*
  nameWithType.vb: Int4.New(Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.Int4.New(Integer, Integer, Integer, Integer)
  name.vb: New(Integer, Integer, Integer, Integer)
- uid: AngeliA.Int4.Zero
  commentId: F:AngeliA.Int4.Zero
  id: Zero
  parent: AngeliA.Int4
  langs:
  - csharp
  - vb
  name: Zero
  nameWithType: Int4.Zero
  fullName: AngeliA.Int4.Zero
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Structure/Int4.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Zero
    path: ../../AngeliA/AngeliA Framework/src/Structure/Int4.cs
    startLine: 13
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static readonly Int4 Zero
    return:
      type: AngeliA.Int4
    content.vb: Public Shared ReadOnly Zero As Int4
- uid: AngeliA.Int4.One
  commentId: F:AngeliA.Int4.One
  id: One
  parent: AngeliA.Int4
  langs:
  - csharp
  - vb
  name: One
  nameWithType: Int4.One
  fullName: AngeliA.Int4.One
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Structure/Int4.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: One
    path: ../../AngeliA/AngeliA Framework/src/Structure/Int4.cs
    startLine: 14
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static readonly Int4 One
    return:
      type: AngeliA.Int4
    content.vb: Public Shared ReadOnly One As Int4
- uid: AngeliA.Int4.Two
  commentId: F:AngeliA.Int4.Two
  id: Two
  parent: AngeliA.Int4
  langs:
  - csharp
  - vb
  name: Two
  nameWithType: Int4.Two
  fullName: AngeliA.Int4.Two
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Structure/Int4.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Two
    path: ../../AngeliA/AngeliA Framework/src/Structure/Int4.cs
    startLine: 15
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static readonly Int4 Two
    return:
      type: AngeliA.Int4
    content.vb: Public Shared ReadOnly Two As Int4
- uid: AngeliA.Int4.Three
  commentId: F:AngeliA.Int4.Three
  id: Three
  parent: AngeliA.Int4
  langs:
  - csharp
  - vb
  name: Three
  nameWithType: Int4.Three
  fullName: AngeliA.Int4.Three
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Structure/Int4.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Three
    path: ../../AngeliA/AngeliA Framework/src/Structure/Int4.cs
    startLine: 16
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static readonly Int4 Three
    return:
      type: AngeliA.Int4
    content.vb: Public Shared ReadOnly Three As Int4
- uid: AngeliA.Int4.Item(System.Int32)
  commentId: P:AngeliA.Int4.Item(System.Int32)
  id: Item(System.Int32)
  parent: AngeliA.Int4
  langs:
  - csharp
  - vb
  name: this[int]
  nameWithType: Int4.this[int]
  fullName: AngeliA.Int4.this[int]
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Structure/Int4.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: this[]
    path: ../../AngeliA/AngeliA Framework/src/Structure/Int4.cs
    startLine: 21
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get int data inside with given index. (0 means x, 1 means y, 2 means z, 3 means w)
  example: []
  syntax:
    content: public int this[int index] { readonly get; set; }
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Default Property this[](index As Integer) As Integer
  overload: AngeliA.Int4.Item*
  nameWithType.vb: Int4.this[](Integer)
  fullName.vb: AngeliA.Int4.this[](Integer)
  name.vb: this[](Integer)
- uid: AngeliA.Int4.IsZero
  commentId: P:AngeliA.Int4.IsZero
  id: IsZero
  parent: AngeliA.Int4
  langs:
  - csharp
  - vb
  name: IsZero
  nameWithType: Int4.IsZero
  fullName: AngeliA.Int4.IsZero
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Structure/Int4.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: IsZero
    path: ../../AngeliA/AngeliA Framework/src/Structure/Int4.cs
    startLine: 43
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: True if all values of this vector are 0
  example: []
  syntax:
    content: public readonly bool IsZero { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsZero As Boolean
  overload: AngeliA.Int4.IsZero*
- uid: AngeliA.Int4.left
  commentId: P:AngeliA.Int4.left
  id: left
  parent: AngeliA.Int4
  langs:
  - csharp
  - vb
  name: left
  nameWithType: Int4.left
  fullName: AngeliA.Int4.left
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Structure/Int4.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: left
    path: ../../AngeliA/AngeliA Framework/src/Structure/Int4.cs
    startLine: 48
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Treat this vector as padding/border value with 4 directions
  example: []
  syntax:
    content: public int left { readonly get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property left As Integer
  overload: AngeliA.Int4.left*
- uid: AngeliA.Int4.right
  commentId: P:AngeliA.Int4.right
  id: right
  parent: AngeliA.Int4
  langs:
  - csharp
  - vb
  name: right
  nameWithType: Int4.right
  fullName: AngeliA.Int4.right
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Structure/Int4.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: right
    path: ../../AngeliA/AngeliA Framework/src/Structure/Int4.cs
    startLine: 53
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Treat this vector as padding/border value with 4 directions
  example: []
  syntax:
    content: public int right { readonly get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property right As Integer
  overload: AngeliA.Int4.right*
- uid: AngeliA.Int4.down
  commentId: P:AngeliA.Int4.down
  id: down
  parent: AngeliA.Int4
  langs:
  - csharp
  - vb
  name: down
  nameWithType: Int4.down
  fullName: AngeliA.Int4.down
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Structure/Int4.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: down
    path: ../../AngeliA/AngeliA Framework/src/Structure/Int4.cs
    startLine: 58
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Treat this vector as padding/border value with 4 directions
  example: []
  syntax:
    content: public int down { readonly get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property down As Integer
  overload: AngeliA.Int4.down*
- uid: AngeliA.Int4.up
  commentId: P:AngeliA.Int4.up
  id: up
  parent: AngeliA.Int4
  langs:
  - csharp
  - vb
  name: up
  nameWithType: Int4.up
  fullName: AngeliA.Int4.up
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Structure/Int4.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: up
    path: ../../AngeliA/AngeliA Framework/src/Structure/Int4.cs
    startLine: 63
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Treat this vector as padding/border value with 4 directions
  example: []
  syntax:
    content: public int up { readonly get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property up As Integer
  overload: AngeliA.Int4.up*
- uid: AngeliA.Int4.horizontal
  commentId: P:AngeliA.Int4.horizontal
  id: horizontal
  parent: AngeliA.Int4
  langs:
  - csharp
  - vb
  name: horizontal
  nameWithType: Int4.horizontal
  fullName: AngeliA.Int4.horizontal
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Structure/Int4.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: horizontal
    path: ../../AngeliA/AngeliA Framework/src/Structure/Int4.cs
    startLine: 68
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: left + right
  example: []
  syntax:
    content: public readonly int horizontal { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property horizontal As Integer
  overload: AngeliA.Int4.horizontal*
- uid: AngeliA.Int4.vertical
  commentId: P:AngeliA.Int4.vertical
  id: vertical
  parent: AngeliA.Int4
  langs:
  - csharp
  - vb
  name: vertical
  nameWithType: Int4.vertical
  fullName: AngeliA.Int4.vertical
  type: Property
  source:
    remote:
      path: AngeliA Framework/src/Structure/Int4.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: vertical
    path: ../../AngeliA/AngeliA Framework/src/Structure/Int4.cs
    startLine: 73
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: down + up
  example: []
  syntax:
    content: public readonly int vertical { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property vertical As Integer
  overload: AngeliA.Int4.vertical*
- uid: AngeliA.Int4.x
  commentId: F:AngeliA.Int4.x
  id: x
  parent: AngeliA.Int4
  langs:
  - csharp
  - vb
  name: x
  nameWithType: Int4.x
  fullName: AngeliA.Int4.x
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Structure/Int4.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: x
    path: ../../AngeliA/AngeliA Framework/src/Structure/Int4.cs
    startLine: 75
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public int x
    return:
      type: System.Int32
    content.vb: Public x As Integer
- uid: AngeliA.Int4.y
  commentId: F:AngeliA.Int4.y
  id: y
  parent: AngeliA.Int4
  langs:
  - csharp
  - vb
  name: y
  nameWithType: Int4.y
  fullName: AngeliA.Int4.y
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Structure/Int4.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: y
    path: ../../AngeliA/AngeliA Framework/src/Structure/Int4.cs
    startLine: 76
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public int y
    return:
      type: System.Int32
    content.vb: Public y As Integer
- uid: AngeliA.Int4.z
  commentId: F:AngeliA.Int4.z
  id: z
  parent: AngeliA.Int4
  langs:
  - csharp
  - vb
  name: z
  nameWithType: Int4.z
  fullName: AngeliA.Int4.z
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Structure/Int4.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: z
    path: ../../AngeliA/AngeliA Framework/src/Structure/Int4.cs
    startLine: 77
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public int z
    return:
      type: System.Int32
    content.vb: Public z As Integer
- uid: AngeliA.Int4.w
  commentId: F:AngeliA.Int4.w
  id: w
  parent: AngeliA.Int4
  langs:
  - csharp
  - vb
  name: w
  nameWithType: Int4.w
  fullName: AngeliA.Int4.w
  type: Field
  source:
    remote:
      path: AngeliA Framework/src/Structure/Int4.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: w
    path: ../../AngeliA/AngeliA Framework/src/Structure/Int4.cs
    startLine: 78
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public int w
    return:
      type: System.Int32
    content.vb: Public w As Integer
- uid: AngeliA.Int4.Direction(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:AngeliA.Int4.Direction(System.Int32,System.Int32,System.Int32,System.Int32)
  id: Direction(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: AngeliA.Int4
  langs:
  - csharp
  - vb
  name: Direction(int, int, int, int)
  nameWithType: Int4.Direction(int, int, int, int)
  fullName: AngeliA.Int4.Direction(int, int, int, int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Structure/Int4.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Direction
    path: ../../AngeliA/AngeliA Framework/src/Structure/Int4.cs
    startLine: 88
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Get a Int4 as a padding/border with 4 directions
  example: []
  syntax:
    content: public static Int4 Direction(int left, int right, int down, int up)
    parameters:
    - id: left
      type: System.Int32
      description: ''
    - id: right
      type: System.Int32
      description: ''
    - id: down
      type: System.Int32
      description: ''
    - id: up
      type: System.Int32
      description: ''
    return:
      type: AngeliA.Int4
      description: ''
    content.vb: Public Shared Function Direction(left As Integer, right As Integer, down As Integer, up As Integer) As Int4
  overload: AngeliA.Int4.Direction*
  nameWithType.vb: Int4.Direction(Integer, Integer, Integer, Integer)
  fullName.vb: AngeliA.Int4.Direction(Integer, Integer, Integer, Integer)
  name.vb: Direction(Integer, Integer, Integer, Integer)
- uid: AngeliA.Int4.Contains(System.Int32)
  commentId: M:AngeliA.Int4.Contains(System.Int32)
  id: Contains(System.Int32)
  parent: AngeliA.Int4
  langs:
  - csharp
  - vb
  name: Contains(int)
  nameWithType: Int4.Contains(int)
  fullName: AngeliA.Int4.Contains(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Structure/Int4.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Contains
    path: ../../AngeliA/AngeliA Framework/src/Structure/Int4.cs
    startLine: 93
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: True if any value inside this vector is given value
  example: []
  syntax:
    content: public readonly bool Contains(int value)
    parameters:
    - id: value
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Function Contains(value As Integer) As Boolean
  overload: AngeliA.Int4.Contains*
  nameWithType.vb: Int4.Contains(Integer)
  fullName.vb: AngeliA.Int4.Contains(Integer)
  name.vb: Contains(Integer)
- uid: AngeliA.Int4.Count(System.Int32)
  commentId: M:AngeliA.Int4.Count(System.Int32)
  id: Count(System.Int32)
  parent: AngeliA.Int4
  langs:
  - csharp
  - vb
  name: Count(int)
  nameWithType: Int4.Count(int)
  fullName: AngeliA.Int4.Count(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Structure/Int4.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Count
    path: ../../AngeliA/AngeliA Framework/src/Structure/Int4.cs
    startLine: 98
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: How many value inside this vector is equal to given value
  example: []
  syntax:
    content: public readonly int Count(int value)
    parameters:
    - id: value
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Function Count(value As Integer) As Integer
  overload: AngeliA.Int4.Count*
  nameWithType.vb: Int4.Count(Integer)
  fullName.vb: AngeliA.Int4.Count(Integer)
  name.vb: Count(Integer)
- uid: AngeliA.Int4.FindIndex(System.Int32)
  commentId: M:AngeliA.Int4.FindIndex(System.Int32)
  id: FindIndex(System.Int32)
  parent: AngeliA.Int4
  langs:
  - csharp
  - vb
  name: FindIndex(int)
  nameWithType: Int4.FindIndex(int)
  fullName: AngeliA.Int4.FindIndex(int)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Structure/Int4.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: FindIndex
    path: ../../AngeliA/AngeliA Framework/src/Structure/Int4.cs
    startLine: 110
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Index of the given value from this vector
  example: []
  syntax:
    content: public readonly int FindIndex(int value)
    parameters:
    - id: value
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Function FindIndex(value As Integer) As Integer
  overload: AngeliA.Int4.FindIndex*
  nameWithType.vb: Int4.FindIndex(Integer)
  fullName.vb: AngeliA.Int4.FindIndex(Integer)
  name.vb: FindIndex(Integer)
- uid: AngeliA.Int4.Equals(System.Object)
  commentId: M:AngeliA.Int4.Equals(System.Object)
  id: Equals(System.Object)
  parent: AngeliA.Int4
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: Int4.Equals(object)
  fullName: AngeliA.Int4.Equals(object)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Structure/Int4.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Equals
    path: ../../AngeliA/AngeliA Framework/src/Structure/Int4.cs
    startLine: 118
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Indicates whether this instance and a specified object are equal.
  example: []
  syntax:
    content: public override readonly bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if <code class="paramref">obj</code> and this instance are the same type and represent the same value; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: AngeliA.Int4.Equals*
  nameWithType.vb: Int4.Equals(Object)
  fullName.vb: AngeliA.Int4.Equals(Object)
  name.vb: Equals(Object)
- uid: AngeliA.Int4.Equals(AngeliA.Int4)
  commentId: M:AngeliA.Int4.Equals(AngeliA.Int4)
  id: Equals(AngeliA.Int4)
  parent: AngeliA.Int4
  langs:
  - csharp
  - vb
  name: Equals(Int4)
  nameWithType: Int4.Equals(Int4)
  fullName: AngeliA.Int4.Equals(AngeliA.Int4)
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Structure/Int4.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: Equals
    path: ../../AngeliA/AngeliA Framework/src/Structure/Int4.cs
    startLine: 122
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Indicates whether the current object is equal to another object of the same type.
  example: []
  syntax:
    content: public readonly bool Equals(Int4 other)
    parameters:
    - id: other
      type: AngeliA.Int4
      description: An object to compare with this object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the current object is equal to the <code class="paramref">other</code> parameter; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function Equals(other As Int4) As Boolean
  overload: AngeliA.Int4.Equals*
  implements:
  - System.IEquatable{AngeliA.Int4}.Equals(AngeliA.Int4)
- uid: AngeliA.Int4.GetHashCode
  commentId: M:AngeliA.Int4.GetHashCode
  id: GetHashCode
  parent: AngeliA.Int4
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Int4.GetHashCode()
  fullName: AngeliA.Int4.GetHashCode()
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Structure/Int4.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: GetHashCode
    path: ../../AngeliA/AngeliA Framework/src/Structure/Int4.cs
    startLine: 123
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Returns the hash code for this instance.
  example: []
  syntax:
    content: public override readonly int GetHashCode()
    return:
      type: System.Int32
      description: A 32-bit signed integer that is the hash code for this instance.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: AngeliA.Int4.GetHashCode*
- uid: AngeliA.Int4.ToString
  commentId: M:AngeliA.Int4.ToString
  id: ToString
  parent: AngeliA.Int4
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Int4.ToString()
  fullName: AngeliA.Int4.ToString()
  type: Method
  source:
    remote:
      path: AngeliA Framework/src/Structure/Int4.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: ToString
    path: ../../AngeliA/AngeliA Framework/src/Structure/Int4.cs
    startLine: 125
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  summary: Returns the fully qualified type name of this instance.
  example: []
  syntax:
    content: public override readonly string ToString()
    return:
      type: System.String
      description: The fully qualified type name.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: AngeliA.Int4.ToString*
- uid: AngeliA.Int4.op_Multiply(System.Int32,AngeliA.Int4)
  commentId: M:AngeliA.Int4.op_Multiply(System.Int32,AngeliA.Int4)
  id: op_Multiply(System.Int32,AngeliA.Int4)
  parent: AngeliA.Int4
  langs:
  - csharp
  - vb
  name: operator *(int, Int4)
  nameWithType: Int4.operator *(int, Int4)
  fullName: AngeliA.Int4.operator *(int, AngeliA.Int4)
  type: Operator
  source:
    remote:
      path: AngeliA Framework/src/Structure/Int4.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: op_Multiply
    path: ../../AngeliA/AngeliA Framework/src/Structure/Int4.cs
    startLine: 128
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Int4 operator *(int b, Int4 a)
    parameters:
    - id: b
      type: System.Int32
    - id: a
      type: AngeliA.Int4
    return:
      type: AngeliA.Int4
    content.vb: Public Shared Operator *(b As Integer, a As Int4) As Int4
  overload: AngeliA.Int4.op_Multiply*
  nameWithType.vb: Int4.*(Integer, Int4)
  fullName.vb: AngeliA.Int4.*(Integer, AngeliA.Int4)
  name.vb: '*(Integer, Int4)'
- uid: AngeliA.Int4.op_Equality(AngeliA.Int4,AngeliA.Int4)
  commentId: M:AngeliA.Int4.op_Equality(AngeliA.Int4,AngeliA.Int4)
  id: op_Equality(AngeliA.Int4,AngeliA.Int4)
  parent: AngeliA.Int4
  langs:
  - csharp
  - vb
  name: operator ==(Int4, Int4)
  nameWithType: Int4.operator ==(Int4, Int4)
  fullName: AngeliA.Int4.operator ==(AngeliA.Int4, AngeliA.Int4)
  type: Operator
  source:
    remote:
      path: AngeliA Framework/src/Structure/Int4.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: op_Equality
    path: ../../AngeliA/AngeliA Framework/src/Structure/Int4.cs
    startLine: 129
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool operator ==(Int4 a, Int4 b)
    parameters:
    - id: a
      type: AngeliA.Int4
    - id: b
      type: AngeliA.Int4
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(a As Int4, b As Int4) As Boolean
  overload: AngeliA.Int4.op_Equality*
  nameWithType.vb: Int4.=(Int4, Int4)
  fullName.vb: AngeliA.Int4.=(AngeliA.Int4, AngeliA.Int4)
  name.vb: =(Int4, Int4)
- uid: AngeliA.Int4.op_Inequality(AngeliA.Int4,AngeliA.Int4)
  commentId: M:AngeliA.Int4.op_Inequality(AngeliA.Int4,AngeliA.Int4)
  id: op_Inequality(AngeliA.Int4,AngeliA.Int4)
  parent: AngeliA.Int4
  langs:
  - csharp
  - vb
  name: operator !=(Int4, Int4)
  nameWithType: Int4.operator !=(Int4, Int4)
  fullName: AngeliA.Int4.operator !=(AngeliA.Int4, AngeliA.Int4)
  type: Operator
  source:
    remote:
      path: AngeliA Framework/src/Structure/Int4.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: op_Inequality
    path: ../../AngeliA/AngeliA Framework/src/Structure/Int4.cs
    startLine: 130
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static bool operator !=(Int4 a, Int4 b)
    parameters:
    - id: a
      type: AngeliA.Int4
    - id: b
      type: AngeliA.Int4
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(a As Int4, b As Int4) As Boolean
  overload: AngeliA.Int4.op_Inequality*
  nameWithType.vb: Int4.<>(Int4, Int4)
  fullName.vb: AngeliA.Int4.<>(AngeliA.Int4, AngeliA.Int4)
  name.vb: <>(Int4, Int4)
- uid: AngeliA.Int4.op_Multiply(AngeliA.Int4,System.Int32)
  commentId: M:AngeliA.Int4.op_Multiply(AngeliA.Int4,System.Int32)
  id: op_Multiply(AngeliA.Int4,System.Int32)
  parent: AngeliA.Int4
  langs:
  - csharp
  - vb
  name: operator *(Int4, int)
  nameWithType: Int4.operator *(Int4, int)
  fullName: AngeliA.Int4.operator *(AngeliA.Int4, int)
  type: Operator
  source:
    remote:
      path: AngeliA Framework/src/Structure/Int4.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: op_Multiply
    path: ../../AngeliA/AngeliA Framework/src/Structure/Int4.cs
    startLine: 131
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Int4 operator *(Int4 a, int b)
    parameters:
    - id: a
      type: AngeliA.Int4
    - id: b
      type: System.Int32
    return:
      type: AngeliA.Int4
    content.vb: Public Shared Operator *(a As Int4, b As Integer) As Int4
  overload: AngeliA.Int4.op_Multiply*
  nameWithType.vb: Int4.*(Int4, Integer)
  fullName.vb: AngeliA.Int4.*(AngeliA.Int4, Integer)
  name.vb: '*(Int4, Integer)'
- uid: AngeliA.Int4.op_Division(AngeliA.Int4,System.Int32)
  commentId: M:AngeliA.Int4.op_Division(AngeliA.Int4,System.Int32)
  id: op_Division(AngeliA.Int4,System.Int32)
  parent: AngeliA.Int4
  langs:
  - csharp
  - vb
  name: operator /(Int4, int)
  nameWithType: Int4.operator /(Int4, int)
  fullName: AngeliA.Int4.operator /(AngeliA.Int4, int)
  type: Operator
  source:
    remote:
      path: AngeliA Framework/src/Structure/Int4.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: op_Division
    path: ../../AngeliA/AngeliA Framework/src/Structure/Int4.cs
    startLine: 138
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Int4 operator /(Int4 a, int b)
    parameters:
    - id: a
      type: AngeliA.Int4
    - id: b
      type: System.Int32
    return:
      type: AngeliA.Int4
    content.vb: Public Shared Operator /(a As Int4, b As Integer) As Int4
  overload: AngeliA.Int4.op_Division*
  nameWithType.vb: Int4./(Int4, Integer)
  fullName.vb: AngeliA.Int4./(AngeliA.Int4, Integer)
  name.vb: /(Int4, Integer)
- uid: AngeliA.Int4.op_Addition(AngeliA.Int4,AngeliA.Int4)
  commentId: M:AngeliA.Int4.op_Addition(AngeliA.Int4,AngeliA.Int4)
  id: op_Addition(AngeliA.Int4,AngeliA.Int4)
  parent: AngeliA.Int4
  langs:
  - csharp
  - vb
  name: operator +(Int4, Int4)
  nameWithType: Int4.operator +(Int4, Int4)
  fullName: AngeliA.Int4.operator +(AngeliA.Int4, AngeliA.Int4)
  type: Operator
  source:
    remote:
      path: AngeliA Framework/src/Structure/Int4.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: op_Addition
    path: ../../AngeliA/AngeliA Framework/src/Structure/Int4.cs
    startLine: 145
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static Int4 operator +(Int4 a, Int4 b)
    parameters:
    - id: a
      type: AngeliA.Int4
    - id: b
      type: AngeliA.Int4
    return:
      type: AngeliA.Int4
    content.vb: Public Shared Operator +(a As Int4, b As Int4) As Int4
  overload: AngeliA.Int4.op_Addition*
  nameWithType.vb: Int4.+(Int4, Int4)
  fullName.vb: AngeliA.Int4.+(AngeliA.Int4, AngeliA.Int4)
  name.vb: +(Int4, Int4)
- uid: AngeliA.Int4.op_Explicit(AngeliA.Int4)~AngeliA.Int2
  commentId: M:AngeliA.Int4.op_Explicit(AngeliA.Int4)~AngeliA.Int2
  id: op_Explicit(AngeliA.Int4)~AngeliA.Int2
  parent: AngeliA.Int4
  langs:
  - csharp
  - vb
  name: explicit operator Int2(Int4)
  nameWithType: Int4.explicit operator Int2(Int4)
  fullName: AngeliA.Int4.explicit operator AngeliA.Int2(AngeliA.Int4)
  type: Operator
  source:
    remote:
      path: AngeliA Framework/src/Structure/Int4.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: op_Explicit
    path: ../../AngeliA/AngeliA Framework/src/Structure/Int4.cs
    startLine: 153
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static explicit operator Int2(Int4 i)
    parameters:
    - id: i
      type: AngeliA.Int4
    return:
      type: AngeliA.Int2
    content.vb: Public Shared Narrowing Operator CType(i As Int4) As Int2
  overload: AngeliA.Int4.op_Explicit*
  nameWithType.vb: Int4.CType(Int4)
  fullName.vb: AngeliA.Int4.CType(AngeliA.Int4)
  name.vb: CType(Int4)
- uid: AngeliA.Int4.op_Explicit(AngeliA.Int4)~AngeliA.Int3
  commentId: M:AngeliA.Int4.op_Explicit(AngeliA.Int4)~AngeliA.Int3
  id: op_Explicit(AngeliA.Int4)~AngeliA.Int3
  parent: AngeliA.Int4
  langs:
  - csharp
  - vb
  name: explicit operator Int3(Int4)
  nameWithType: Int4.explicit operator Int3(Int4)
  fullName: AngeliA.Int4.explicit operator AngeliA.Int3(AngeliA.Int4)
  type: Operator
  source:
    remote:
      path: AngeliA Framework/src/Structure/Int4.cs
      branch: main
      repo: https://github.com/Mo-enen/AngeliA.git
    id: op_Explicit
    path: ../../AngeliA/AngeliA Framework/src/Structure/Int4.cs
    startLine: 155
  assemblies:
  - AngeliA Framework
  namespace: AngeliA
  syntax:
    content: public static explicit operator Int3(Int4 i)
    parameters:
    - id: i
      type: AngeliA.Int4
    return:
      type: AngeliA.Int3
    content.vb: Public Shared Narrowing Operator CType(i As Int4) As Int3
  overload: AngeliA.Int4.op_Explicit*
  nameWithType.vb: Int4.CType(Int4)
  fullName.vb: AngeliA.Int4.CType(AngeliA.Int4)
  name.vb: CType(Int4)
references:
- uid: AngeliA
  commentId: N:AngeliA
  href: AngeliA.html
  name: AngeliA
  nameWithType: AngeliA
  fullName: AngeliA
- uid: System.IEquatable{AngeliA.Int4}
  commentId: T:System.IEquatable{AngeliA.Int4}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Int4>
  nameWithType: IEquatable<Int4>
  fullName: System.IEquatable<AngeliA.Int4>
  nameWithType.vb: IEquatable(Of Int4)
  fullName.vb: System.IEquatable(Of AngeliA.Int4)
  name.vb: IEquatable(Of Int4)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: AngeliA.Int4
    name: Int4
    href: AngeliA.Int4.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: AngeliA.Int4
    name: Int4
    href: AngeliA.Int4.html
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.AngeliA.Extension.ForAllFields``1(System.Reflection.BindingFlags,System.Boolean)
  commentId: M:AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
  parent: AngeliA.Extension
  definition: AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
  href: AngeliA.Extension.html#AngeliA_Extension_ForAllFields__1_System_Object_System_Reflection_BindingFlags_System_Boolean_
  name: ForAllFields<T>(object, BindingFlags, bool)
  nameWithType: Extension.ForAllFields<T>(object, BindingFlags, bool)
  fullName: AngeliA.Extension.ForAllFields<T>(object, System.Reflection.BindingFlags, bool)
  nameWithType.vb: Extension.ForAllFields(Of T)(Object, BindingFlags, Boolean)
  fullName.vb: AngeliA.Extension.ForAllFields(Of T)(Object, System.Reflection.BindingFlags, Boolean)
  name.vb: ForAllFields(Of T)(Object, BindingFlags, Boolean)
  spec.csharp:
  - uid: AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
    name: ForAllFields
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllFields__1_System_Object_System_Reflection_BindingFlags_System_Boolean_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
    name: ForAllFields
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllFields__1_System_Object_System_Reflection_BindingFlags_System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Object.AngeliA.Extension.ForAllProperties``1
  commentId: M:AngeliA.Extension.ForAllProperties``1(System.Object)
  parent: AngeliA.Extension
  definition: AngeliA.Extension.ForAllProperties``1(System.Object)
  href: AngeliA.Extension.html#AngeliA_Extension_ForAllProperties__1_System_Object_
  name: ForAllProperties<T>(object)
  nameWithType: Extension.ForAllProperties<T>(object)
  fullName: AngeliA.Extension.ForAllProperties<T>(object)
  nameWithType.vb: Extension.ForAllProperties(Of T)(Object)
  fullName.vb: AngeliA.Extension.ForAllProperties(Of T)(Object)
  name.vb: ForAllProperties(Of T)(Object)
  spec.csharp:
  - uid: AngeliA.Extension.ForAllProperties``1(System.Object)
    name: ForAllProperties
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllProperties__1_System_Object_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: AngeliA.Extension.ForAllProperties``1(System.Object)
    name: ForAllProperties
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllProperties__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
  commentId: M:AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
  isExternal: true
  href: AngeliA.Extension.html#AngeliA_Extension_ForAllFields__1_System_Object_System_Reflection_BindingFlags_System_Boolean_
  name: ForAllFields<T>(object, BindingFlags, bool)
  nameWithType: Extension.ForAllFields<T>(object, BindingFlags, bool)
  fullName: AngeliA.Extension.ForAllFields<T>(object, System.Reflection.BindingFlags, bool)
  nameWithType.vb: Extension.ForAllFields(Of T)(Object, BindingFlags, Boolean)
  fullName.vb: AngeliA.Extension.ForAllFields(Of T)(Object, System.Reflection.BindingFlags, Boolean)
  name.vb: ForAllFields(Of T)(Object, BindingFlags, Boolean)
  spec.csharp:
  - uid: AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
    name: ForAllFields
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllFields__1_System_Object_System_Reflection_BindingFlags_System_Boolean_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: AngeliA.Extension.ForAllFields``1(System.Object,System.Reflection.BindingFlags,System.Boolean)
    name: ForAllFields
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllFields__1_System_Object_System_Reflection_BindingFlags_System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: AngeliA.Extension
  commentId: T:AngeliA.Extension
  parent: AngeliA
  href: AngeliA.Extension.html
  name: Extension
  nameWithType: Extension
  fullName: AngeliA.Extension
- uid: AngeliA.Extension.ForAllProperties``1(System.Object)
  commentId: M:AngeliA.Extension.ForAllProperties``1(System.Object)
  isExternal: true
  href: AngeliA.Extension.html#AngeliA_Extension_ForAllProperties__1_System_Object_
  name: ForAllProperties<T>(object)
  nameWithType: Extension.ForAllProperties<T>(object)
  fullName: AngeliA.Extension.ForAllProperties<T>(object)
  nameWithType.vb: Extension.ForAllProperties(Of T)(Object)
  fullName.vb: AngeliA.Extension.ForAllProperties(Of T)(Object)
  name.vb: ForAllProperties(Of T)(Object)
  spec.csharp:
  - uid: AngeliA.Extension.ForAllProperties``1(System.Object)
    name: ForAllProperties
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllProperties__1_System_Object_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: AngeliA.Extension.ForAllProperties``1(System.Object)
    name: ForAllProperties
    href: AngeliA.Extension.html#AngeliA_Extension_ForAllProperties__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: AngeliA.Int4.#ctor*
  commentId: Overload:AngeliA.Int4.#ctor
  href: AngeliA.Int4.html#AngeliA_Int4__ctor_System_Int32_System_Int32_System_Int32_System_Int32_
  name: Int4
  nameWithType: Int4.Int4
  fullName: AngeliA.Int4.Int4
  nameWithType.vb: Int4.New
  fullName.vb: AngeliA.Int4.New
  name.vb: New
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: AngeliA.Int4
  commentId: T:AngeliA.Int4
  parent: AngeliA
  href: AngeliA.Int4.html
  name: Int4
  nameWithType: Int4
  fullName: AngeliA.Int4
- uid: AngeliA.Int4.Item*
  commentId: Overload:AngeliA.Int4.Item
  href: AngeliA.Int4.html#AngeliA_Int4_Item_System_Int32_
  name: this
  nameWithType: Int4.this
  fullName: AngeliA.Int4.this
  nameWithType.vb: Int4.this[]
  fullName.vb: AngeliA.Int4.this[]
  name.vb: this[]
- uid: AngeliA.Int4.IsZero*
  commentId: Overload:AngeliA.Int4.IsZero
  href: AngeliA.Int4.html#AngeliA_Int4_IsZero
  name: IsZero
  nameWithType: Int4.IsZero
  fullName: AngeliA.Int4.IsZero
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: AngeliA.Int4.left*
  commentId: Overload:AngeliA.Int4.left
  href: AngeliA.Int4.html#AngeliA_Int4_left
  name: left
  nameWithType: Int4.left
  fullName: AngeliA.Int4.left
- uid: AngeliA.Int4.right*
  commentId: Overload:AngeliA.Int4.right
  href: AngeliA.Int4.html#AngeliA_Int4_right
  name: right
  nameWithType: Int4.right
  fullName: AngeliA.Int4.right
- uid: AngeliA.Int4.down*
  commentId: Overload:AngeliA.Int4.down
  href: AngeliA.Int4.html#AngeliA_Int4_down
  name: down
  nameWithType: Int4.down
  fullName: AngeliA.Int4.down
- uid: AngeliA.Int4.up*
  commentId: Overload:AngeliA.Int4.up
  href: AngeliA.Int4.html#AngeliA_Int4_up
  name: up
  nameWithType: Int4.up
  fullName: AngeliA.Int4.up
- uid: AngeliA.Int4.horizontal*
  commentId: Overload:AngeliA.Int4.horizontal
  href: AngeliA.Int4.html#AngeliA_Int4_horizontal
  name: horizontal
  nameWithType: Int4.horizontal
  fullName: AngeliA.Int4.horizontal
- uid: AngeliA.Int4.vertical*
  commentId: Overload:AngeliA.Int4.vertical
  href: AngeliA.Int4.html#AngeliA_Int4_vertical
  name: vertical
  nameWithType: Int4.vertical
  fullName: AngeliA.Int4.vertical
- uid: AngeliA.Int4.Direction*
  commentId: Overload:AngeliA.Int4.Direction
  href: AngeliA.Int4.html#AngeliA_Int4_Direction_System_Int32_System_Int32_System_Int32_System_Int32_
  name: Direction
  nameWithType: Int4.Direction
  fullName: AngeliA.Int4.Direction
- uid: AngeliA.Int4.Contains*
  commentId: Overload:AngeliA.Int4.Contains
  href: AngeliA.Int4.html#AngeliA_Int4_Contains_System_Int32_
  name: Contains
  nameWithType: Int4.Contains
  fullName: AngeliA.Int4.Contains
- uid: AngeliA.Int4.Count*
  commentId: Overload:AngeliA.Int4.Count
  href: AngeliA.Int4.html#AngeliA_Int4_Count_System_Int32_
  name: Count
  nameWithType: Int4.Count
  fullName: AngeliA.Int4.Count
- uid: AngeliA.Int4.FindIndex*
  commentId: Overload:AngeliA.Int4.FindIndex
  href: AngeliA.Int4.html#AngeliA_Int4_FindIndex_System_Int32_
  name: FindIndex
  nameWithType: Int4.FindIndex
  fullName: AngeliA.Int4.FindIndex
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: AngeliA.Int4.Equals*
  commentId: Overload:AngeliA.Int4.Equals
  href: AngeliA.Int4.html#AngeliA_Int4_Equals_System_Object_
  name: Equals
  nameWithType: Int4.Equals
  fullName: AngeliA.Int4.Equals
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.IEquatable{AngeliA.Int4}.Equals(AngeliA.Int4)
  commentId: M:System.IEquatable{AngeliA.Int4}.Equals(AngeliA.Int4)
  parent: System.IEquatable{AngeliA.Int4}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(Int4)
  nameWithType: IEquatable<Int4>.Equals(Int4)
  fullName: System.IEquatable<AngeliA.Int4>.Equals(AngeliA.Int4)
  nameWithType.vb: IEquatable(Of Int4).Equals(Int4)
  fullName.vb: System.IEquatable(Of AngeliA.Int4).Equals(AngeliA.Int4)
  spec.csharp:
  - uid: System.IEquatable{AngeliA.Int4}.Equals(AngeliA.Int4)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: AngeliA.Int4
    name: Int4
    href: AngeliA.Int4.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{AngeliA.Int4}.Equals(AngeliA.Int4)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: AngeliA.Int4
    name: Int4
    href: AngeliA.Int4.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: AngeliA.Int4.GetHashCode*
  commentId: Overload:AngeliA.Int4.GetHashCode
  href: AngeliA.Int4.html#AngeliA_Int4_GetHashCode
  name: GetHashCode
  nameWithType: Int4.GetHashCode
  fullName: AngeliA.Int4.GetHashCode
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: AngeliA.Int4.ToString*
  commentId: Overload:AngeliA.Int4.ToString
  href: AngeliA.Int4.html#AngeliA_Int4_ToString
  name: ToString
  nameWithType: Int4.ToString
  fullName: AngeliA.Int4.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AngeliA.Int4.op_Multiply*
  commentId: Overload:AngeliA.Int4.op_Multiply
  href: AngeliA.Int4.html#AngeliA_Int4_op_Multiply_System_Int32_AngeliA_Int4_
  name: operator *
  nameWithType: Int4.operator *
  fullName: AngeliA.Int4.operator *
  nameWithType.vb: Int4.*
  fullName.vb: AngeliA.Int4.*
  name.vb: '*'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: AngeliA.Int4.op_Multiply*
    name: '*'
    href: AngeliA.Int4.html#AngeliA_Int4_op_Multiply_System_Int32_AngeliA_Int4_
- uid: AngeliA.Int4.op_Equality*
  commentId: Overload:AngeliA.Int4.op_Equality
  href: AngeliA.Int4.html#AngeliA_Int4_op_Equality_AngeliA_Int4_AngeliA_Int4_
  name: operator ==
  nameWithType: Int4.operator ==
  fullName: AngeliA.Int4.operator ==
  nameWithType.vb: Int4.=
  fullName.vb: AngeliA.Int4.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: AngeliA.Int4.op_Equality*
    name: ==
    href: AngeliA.Int4.html#AngeliA_Int4_op_Equality_AngeliA_Int4_AngeliA_Int4_
- uid: AngeliA.Int4.op_Inequality*
  commentId: Overload:AngeliA.Int4.op_Inequality
  href: AngeliA.Int4.html#AngeliA_Int4_op_Inequality_AngeliA_Int4_AngeliA_Int4_
  name: operator !=
  nameWithType: Int4.operator !=
  fullName: AngeliA.Int4.operator !=
  nameWithType.vb: Int4.<>
  fullName.vb: AngeliA.Int4.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: AngeliA.Int4.op_Inequality*
    name: '!='
    href: AngeliA.Int4.html#AngeliA_Int4_op_Inequality_AngeliA_Int4_AngeliA_Int4_
- uid: AngeliA.Int4.op_Division*
  commentId: Overload:AngeliA.Int4.op_Division
  href: AngeliA.Int4.html#AngeliA_Int4_op_Division_AngeliA_Int4_System_Int32_
  name: operator /
  nameWithType: Int4.operator /
  fullName: AngeliA.Int4.operator /
  nameWithType.vb: Int4./
  fullName.vb: AngeliA.Int4./
  name.vb: /
  spec.csharp:
  - name: operator
  - name: " "
  - uid: AngeliA.Int4.op_Division*
    name: /
    href: AngeliA.Int4.html#AngeliA_Int4_op_Division_AngeliA_Int4_System_Int32_
- uid: AngeliA.Int4.op_Addition*
  commentId: Overload:AngeliA.Int4.op_Addition
  href: AngeliA.Int4.html#AngeliA_Int4_op_Addition_AngeliA_Int4_AngeliA_Int4_
  name: operator +
  nameWithType: Int4.operator +
  fullName: AngeliA.Int4.operator +
  nameWithType.vb: Int4.+
  fullName.vb: AngeliA.Int4.+
  name.vb: +
  spec.csharp:
  - name: operator
  - name: " "
  - uid: AngeliA.Int4.op_Addition*
    name: +
    href: AngeliA.Int4.html#AngeliA_Int4_op_Addition_AngeliA_Int4_AngeliA_Int4_
- uid: AngeliA.Int4.op_Explicit*
  commentId: Overload:AngeliA.Int4.op_Explicit
  name: explicit operator
  nameWithType: Int4.explicit operator
  fullName: AngeliA.Int4.explicit operator
  nameWithType.vb: Int4.CType
  fullName.vb: AngeliA.Int4.CType
  name.vb: CType
  spec.csharp:
  - name: explicit
  - name: " "
  - name: operator
- uid: AngeliA.Int2
  commentId: T:AngeliA.Int2
  parent: AngeliA
  href: AngeliA.Int2.html
  name: Int2
  nameWithType: Int2
  fullName: AngeliA.Int2
- uid: AngeliA.Int3
  commentId: T:AngeliA.Int3
  parent: AngeliA
  href: AngeliA.Int3.html
  name: Int3
  nameWithType: Int3
  fullName: AngeliA.Int3
